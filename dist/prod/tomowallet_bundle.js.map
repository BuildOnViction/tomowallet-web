{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/styles/StyleButtons.js","webpack:///./src/styles/StyleForm.js","webpack:///./src/styles/MainContainer.js","webpack:///./src/styles/ImportWallet.js","webpack:///./src/styles/CreateNewWallet.js","webpack:///./src/styles/StyleTypo.js","webpack:///./src/styles/index.js","webpack:///./src/containers/Global/constants.js","webpack:///./src/containers/Global/reducer.js","webpack:///./src/configurations/rootReducer.js","webpack:///./src/utils/checkStore.js","webpack:///./src/utils/reducerInjectors.js","webpack:///./src/utils/injectReducer.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/sagaInjectors.js","webpack:///./src/utils/injectSaga.js","webpack:///./src/utils/history.js","webpack:///./src/utils/deepSelector.js","webpack:///./src/utils/miscellaneous.js","webpack:///./src/utils/validations.js","webpack:///./src/utils/injectLoading.js","webpack:///./src/utils/index.js","webpack:///./src/components/Popup/style.js","webpack:///./src/components/Popup/index.js","webpack:///./src/components/MnemonicBox/style.js","webpack:///./src/components/MnemonicBox/index.js","webpack:///./src/containers/App/iconfont/fonts/tomowallet.eot","webpack:///./src/assets/images/visual-showwallet.svg","webpack:///./src/assets/images/logo-tomochain.png","webpack:///./src/components/IntlProvider/Provider.js","webpack:///./src/components/IntlProvider/utilities.js","webpack:///./src/components/IntlProvider/index.js","webpack:///./src/containers/Global/actions.js","webpack:///./src/containers/Global/selectors.js","webpack:///./src/constants/rpcServers.js","webpack:///./src/constants/enums.js","webpack:///./src/constants/routes.js","webpack:///./src/constants/messages.js","webpack:///./src/constants/lists.js","webpack:///./src/constants/apis.js","webpack:///./src/constants/index.js","webpack:///./src/utils/blockchain.js","webpack:///./node_modules/web3-eth-accounts/src sync","webpack:///./src/components/Web3/Provider.js","webpack:///./src/components/Web3/Loading.js","webpack:///./src/components/Web3/Failure.js","webpack:///./src/components/Web3/index.js","webpack:///./src/containers/App/app.scss?8a73","webpack:///./src/containers/App/app.scss","webpack:///./src/containers/App/iconfont/style.css","webpack:///./src/containers/App/iconfont/fonts/tomowallet.ttf","webpack:///./src/containers/App/iconfont/fonts/tomowallet.woff","webpack:///./src/containers/App/iconfont/fonts/tomowallet.svg","webpack:///./src/components/Loading/style.js","webpack:///./src/components/Loading/index.js","webpack:///./src/components/NavigationBar/subcomponents/WalletPopup/Warning.js","webpack:///./src/components/NavigationBar/subcomponents/WalletPopup/WalletView.js","webpack:///./src/components/NavigationBar/subcomponents/WalletPopup/style.js","webpack:///./src/components/NavigationBar/subcomponents/WalletPopup/index.js","webpack:///./src/components/NavigationBar/style.js","webpack:///./src/components/NavigationBar/index.js","webpack:///./src/components/Footer/style.js","webpack:///./src/components/Footer/index.js","webpack:///./src/containers/App/components/LoadableComponents.js","webpack:///./src/containers/App/components/PrivateRoute.js","webpack:///./src/containers/App/style.js","webpack:///./src/containers/App/index.js","webpack:///./src/index.js","webpack:///./src/configurations/configureStore.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","BigButtonStyler","styled","button","btnBlue","ButtonStyler","btnYellow","ButtonLineStyler","FormTextStyled","FormText","BoxBtnStyler","div","ContainerMin","BoxCardStyled","Card","BoxImages","ImporWalletStyler","isActive","WarningImages","HeadingBig","h1","HeadingLarge","h2","HeadingMedium","h3","HeadingSmall","NoticeTextRed","span","TextBlue","a","TextYellow","TextLinkYellow","TextYellowPointer","TextGray","BoxText","RELEASE_WALLET_INFO","RESET_WALLET_POPUP","SET_LANGUAGE","SET_NETWORK","STORE_WALLET_INFO","TOGGLE_LOADING_SCREEN","TOGGLE_NETWORK_DROPDOWN","TOGGLE_WALLET_POPUP","UPDATE_WALLET_POPUP_CONTENT_TAB","UPDATE_WALLET_POPUP_STAGE","WALLET_POPUP_STAGE","WARNING","CONTENT","WALLET_POPUP_CONTENT_TAB","RECOVERY_PHRASE","PRIVATE_KEY","initialWalletPopupState","isOpen","stage","tabType","initialState","fromJS","language","_get","LIST","loading","network","NETWORKS","isExpanded","wallet","walletPopup","state","action","set","LANGUAGES","find","opt","setIn","bool","newState","injectedReducers","combineReducers","global","globalReducer","router","connectRouter","history","checkStore","store","shape","dispatch","_isFunction","subscribe","getState","replaceReducer","_isObject","invariant","_conformsTo","injectReducerFactory","isValid","reducer","_isString","_isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","WrappedComponent","ReducerInjector","props","context","React","Component","this","ReactReduxContext","displayName","hoistNonReactStatics","DAEMON","ONCE_TILL_UNMOUNT","allowedModes","checkKey","checkDescriptor","descriptor","saga","includes","injectSagaFactory","args","newDescriptor","hasSaga","injectedSagas","task","runSaga","ejectSagaFactory","cancel","injectSaga","ejectSaga","InjectSaga","injectors","createBrowserHistory","createSelectorCreator","defaultMemoize","_isEqual","shuffleArray","array","original","randomizedIndex","Math","floor","random","filter","_","index","setStorage","localStorage","setItem","JSON","stringify","parse","getItem","getStorage","removeStorage","_omit","setWeb3Info","web3Info","getWeb3Info","removeWeb3Info","setLocale","locale","getLocale","setNetwork","getNetwork","setLedger","ledger","getLedger","removeLedger","mergeErrors","newErrors","oldErrors","forEach","compareKey","keys","isRequired","_isNumber","isHex","web3","utils","isMaxNumber","max","isMinNumber","min","isAddress","isMaxLength","withLoading","LoadingConsumer","PureComponent","onToggleLoading","toggleLoading","defaultProps","withConnect","connect","createStructuredSelector","selectLoading","ModalStyles","Modal","Popup","backdrop","centered","className","Content","Footer","getContentProps","getFooterProps","getPopupProps","noHeader","title","toggle","ModalHeader","ModalBody","ModalFooter","Container","Row","Col","size","outline","onClick","disabled","propTypes","PropTypes","oneOfType","oneOf","primary","secondary","onClosed","func","string","element","label","MnemonicBoxStyler","MnemonicBox","WORD_NUMBER","handleConvertMnemonic","mnemonic","Array","isArray","split","getCellProps","WordCell","wordList","noGutters","fill","map","wordIdx","xs","sm","md","lg","arrayOf","CustomIntlProvider","children","messages","ENUM","MESSAGE_SET","selectLanguage","withIntl","IntlConsumer","onSetLanguage","changeLocale","setLanguage","compose","injectIntl","IntlText","formatMessage","intl","intlProps","valueProps","getMessage","releaseWallet","storeWallet","toggleWalletPopup","updateWalletPopupContentTab","updateWalletPopupStage","selectGlobalDomain","createDeepEqualSelector","obj","toJS","selectNetworkData","selectWallet","selectWalletPopup","TOMOCHAIN_TESTNET","host","networkId","hdPath","TOMOCHAIN_MAINNET","en","fr","TOKEN_TYPE","TRC20","TRC21","WEB3_STATUSES","LOADING","INITIALIZED","FAILED","DEFAULT","LOGIN","HOMEPAGE","CREATE_WALLET","IMPORT_WALLET","MY_WALLET","commonPrefix","componentPrefix","containerPrefix","buttonPrefix","listPrefix","navbarPrefix","footerPrefix","welcomePagePrefix","createWalletPagePrefix","warningPagePrefix","recoveryPhrasePrefix","verificationPrefix","successNotificationPrefix","importWalletPagePrefix","myWalletPagePrefix","defineMessages","COMMON_BUTTON_BACK","id","defaultMessage","COMMON_BUTTON_NEXT","COMMON_BUTTON_SAVE","COMMON_BUTTON_IMPORT","COMMON_BUTTON_SEND","COMMON_BUTTON_RECEIVE","COMMON_BUTTON_MAXIMUM","COMMON_BUTTON_CONFIRM","COMMON_BUTTON_UNLOCK","COMMON_LIST_LANGUAGE_ENGLISH","COMMON_LIST_LANGUAGE_FRENCH","COMMON_LIST_NETWORK_TOMOCHAIN_TESTNET","COMMON_LIST_NETWORK_TOMOCHAIN_MAINNET","HEADER_NAVBAR_LOGO_ALT","HEADER_NAVBAR_OPTION_ABOUT","HEADER_NAVBAR_OPTION_FAQS","HEADER_NAVBAR_OPTION_MY_WALLET","HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_SHOW_WALLET","HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_HELP","HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_LOG_OUT","HEADER_NAVBAR_POPUP_SHOW_WALLET_TITLE","HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_IMAGE_ALT","HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_TEXT","HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_RECOVERY_PHRASE","HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY","HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY_NOTE","FOOTER_VERSION_TEXT","FOOTER_OPTION_HELP","FOOTER_OPTION_POLICY","FOOTER_OPTION_TERMS_OF_SERVICE","FOOTER_OPTION_API_DOCUMENTATION","WELCOME_TITLE","WELCOME_DESCRIPTION","WELCOME_BUTTON_CREATE_NEW_WALLET","WELCOME_TEXT_BETWEEN_BUTTONS","WELCOME_BUTTON_IMPORT_WALLET","WELCOME_IMAGE_ALT","WARNING_HEADER_TITLE","WARNING_HEADER_ALTERNATIVE_TEXT","WARNING_HEADER_ALTERNATIVE_LINK","WARNING_IMAGE_ALT","WARNING_CONTENT_TITLE","WARNING_CONTENT_DESCRIPTION","WARNING_CONTENT_DESCRIPTION_DANGER","WARNING_BUTTON_NEXT_TO_RECOVERY_PHRASE","RECOVERY_PHRASE_TITLE","RECOVERY_PHRASE_NOTIFICATION_TITLE","RECOVERY_PHRASE_NOTIFICATION_DESCRIPTION","RECOVERY_PHRASE_BUTTON_SAVE","RECOVERY_PHRASE_BUTTON_VIEW_PRIVATE_KEY","RECOVERY_PHRASE_BUTTON_CONFIRMATION","RECOVERY_PHRASE_POPUP_CONFIRMATION_IMAGE_ALT","RECOVERY_PHRASE_POPUP_CONFIRMATION_HEADER","RECOVERY_PHRASE_POPUP_CONFIRMATION_CONTENT","RECOVERY_PHRASE_POPUP_KEY_VIEW_HEADER","RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_TITLE","RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_TEXT","RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_QRCODE_ALT","VERIFICATION_TITLE","VERIFICATION_DESCRIPTION","VERIFICATION_BUTTON_VERIFY","VERIFICATION_ERROR_VERIFY_FAILED","SUCCESS_NOTIFICATION_IMAGE_ALT","SUCCESS_NOTIFICATION_CONTENT_TITLE","SUCCESS_NOTIFICATION_CONTENT_DESCRIPTION","SUCCESS_NOTIFICATION_BUTTON_ACCESS_WALLET","IMPORT_WALLET_HEADER_TITLE","IMPORT_WALLET_ALTERNATIVE_TEXT","IMPORT_WALLET_ALTERNATIVE_LINK","IMPORT_WALLET_TAB_LEDGER_IMAGE_ALT","IMPORT_WALLET_TAB_LEDGER_TEXT","IMPORT_WALLET_TAB_LEDGER_INPUT_LABEL","IMPORT_WALLET_TAB_LEDGER_INPUT_PLACEHOLDER","IMPORT_WALLET_TAB_LEDGER_INPUT_DESCRIPTION","IMPORT_WALLET_TAB_RECOVERY_PHRASE_TEXT","IMPORT_WALLET_TAB_RECOVERY_PHRASE_INPUT_LABEL","IMPORT_WALLET_TAB_RECOVERY_PHRASE_INPUT_PLACEHOLDER","IMPORT_WALLET_TAB_RECOVERY_PHRASE_OPTION_IMPORT_VIA_QRCODE","IMPORT_WALLET_ERROR_INVALID_RECOVERY_PHRASE","IMPORT_WALLET_ERROR_INVALID_HD_PATH","IMPORT_WALLET_POPUP_ADDRESS_TITLE","MY_WALLET_SECTION_ADDRESS_TITLE","MY_WALLET_TABLE_PORFOLIO_TITLE","MY_WALLET_TABLE_PORFOLIO_HEADER_TOKEN_NAME","MY_WALLET_TABLE_PORFOLIO_HEADER_BALANCE","MY_WALLET_TABLE_PORFOLIO_HEADER_VALUE","MY_WALLET_TABLE_PORFOLIO_HEADER_PRICE","MY_WALLET_TABLE_PORFOLIO_HEADER_SEND","MY_WALLET_TABLE_PORFOLIO_HEADER_RECEIVE","MY_WALLET_TABLE_PORFOLIO_CELL_TOKEN_NAME_IMAGE_ALT","MY_WALLET_TABLE_PORFOLIO_CELL_TOKEN_NAME_PUBLISHER","MY_WALLET_TABLE_PORFOLIO_ERROR_LOAD_FAILED","MY_WALLET_TABLE_TRANSACTION_TITLE","MY_WALLET_TABLE_TRANSACTIONS_HEADER_TOKEN_TYPE","MY_WALLET_TABLE_TRANSACTIONS_HEADER_TX_HASH","MY_WALLET_TABLE_TRANSACTIONS_HEADER_CREATE_TIME","MY_WALLET_TABLE_TRANSACTIONS_HEADER_FROM","MY_WALLET_TABLE_TRANSACTIONS_HEADER_TO","MY_WALLET_TABLE_TRANSACTIONS_HEADER_QUANTITY","MY_WALLET_POPUP_SEND_TOKEN_TITLE","MY_WALLET_POPUP_SEND_TOKEN_INPUT_TOKEN_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_TOKEN_PLACEHOLDER","MY_WALLET_POPUP_SEND_TOKEN_INPUT_RECIPIENT_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_RECIPIENT_PLACEHOLDER","MY_WALLET_POPUP_SEND_TOKEN_INPUT_TRANSFER_AMOUNT_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_TRANSFER_AMOUNT_PLACEHOLDER","MY_WALLET_POPUP_SEND_TOKEN_INPUT_MESSAGE_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_MESSAGE_PLACEHOLDER","MY_WALLET_POPUP_SEND_TOKEN_INPUT_AMOUNT_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_FROM_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INPUT_TO_LABEL","MY_WALLET_POPUP_SEND_TOKEN_INFO_TRANSACTION_FEE_LABEL","MY_WALLET_POPUP_SEND_TOKEN_ERROR_TOKEN_REQUIRED","MY_WALLET_POPUP_SEND_TOKEN_ERROR_RECIPIENT_REQUIRED","MY_WALLET_POPUP_SEND_TOKEN_ERROR_RECIPIENT_INVALID","MY_WALLET_POPUP_SEND_TOKEN_ERROR_AMOUNT_REQUIRED","MY_WALLET_POPUP_SEND_TOKEN_ERROR_AMOUNT_INVALID","MY_WALLET_POPUP_SEND_TOKEN_ERROR_MESSAGE_MAXLENGTH","MY_WALLET_POPUP_SUCCESS_INFO_AMOUNT_SENT","MY_WALLET_POPUP_SUCCESS_INFO_TRANSACTION_HASH","MY_WALLET_POPUP_RECEIVE_TOKEN_TITLE","MY_WALLET_POPUP_RECEIVE_TOKEN_CONTENT_MESSAGE","MSG","RPC_SERVER","MY_WALLET_TABLE_TYPES","GET_TOKENS","GET_TRANSACTIONS","mnemonicToPrivateKey","serverConfig","generateWeb3","pkInBytes","currentProvider","wallets","addresses","_privKey","bytesToHex","provider","callback","HDWalletProvider","Web3","getWalletInfo","address","eth","getBalance","then","balance","Number","fromWei","initiateWallet","walletInfo","sendToken","contractData","amount","contractAddress","decimals","from","to","contract","Contract","trc21","trc20","weiAmount","toBN","mul","toString","methods","estimateFee","gasPrice","transfer","send","on","hash","repeatCall","interval","getTransactionReceipt","catch","ex","log","txData","estimateGas","estimateTRC20Gas","gas","sendMoney","transactionData","sendTransaction","ms","intervalId","trans","clearInterval","setInterval","wait","webpackEmptyContext","req","code","Web3Context","createContext","web3Status","switchRPCServer","Web3Provider","status","rpcServer","handleUpdateRpcServer","handleSetWeb3","recoveryPhrase","newWeb3","storedNetwork","newKey","setState","givenProvider","net","isListening","Provider","updateWeb3","withWeb3","Web3Consumer","Consumer","content","options","locals","getUrl","___CSS_LOADER_URL___0___","___CSS_LOADER_URL___1___","___CSS_LOADER_URL___2___","___CSS_LOADER_URL___3___","___CSS_LOADER_URL___4___","LoadingStyler","LoadingScreen","Spinner","color","WarningContent","VisualShowWallet","alt","WalletViewContent","handleCheckPrivateKey","handleGetPrivateKey","handleGetRecoveryPhrase","isPrivateKey","replace","updateTab","activeTab","isLoggedInByPK","Nav","tabs","NavItem","NavLink","active","TabContent","TabPane","tabId","WalletPopupStyler","WalletPopup","handleClosePopup","handleGetButton","handleGetContent","onTogglePopup","onUpdatePopupStage","onUpdatePopupContentTab","Warning","WalletView","LinkHeader","DropdownToggleHeader","DropdownToggle","NavBarStyler","Navbar","NavigationBar","handleChangeLocale","handleChangeNetwork","handleLogout","handleRedirectToHomepage","handleRenderPrivateBar","handleRenderPublicBar","onSetNetwork","storedLocale","newNetwork","onReleaseWallet","ROUTE","navbar","UncontrolledDropdown","nav","inNavbar","caret","DropdownMenu","right","optIdx","DropdownItem","onToggleWalletPopup","divider","isLoggedIn","light","expand","NavbarBrand","CardImg","logo_tomochain","NavbarToggler","handleToggleOptions","Collapse","changeLocaleL","withRouter","LinkFooter","FOOTER_BUTTONS","link","href","item","itemIdx","WelcomePage","loadable","CreateWalletPage","ImportWallet","MyWallet","remains","strict","AppStyler","App","handleCheckLoggedIn","onStoreWallet","walletParams","Loading","path","render","component","library","add","fas","far","addLocaleData","locale_en","locale_fr","sagaMiddleware","middlewares","enhancers","createSagaMiddleWare","thunkMiddleware","logger","routerMiddleware","applyMiddleware","createStore","run","persistStore","ReactDOM","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAQtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAI,SAAuBhC,GAC9C,IAAIiC,EAAW,GAKXC,EAAqBvB,EAAgBX,GACzC,GAA0B,IAAvBkC,EAGF,GAAGA,EACFD,EAASrB,KAAKsB,EAAmB,QAC3B,CAEN,IAAIC,EAAU,IAAIC,QAAQ,SAASC,EAASC,GAC3CJ,EAAqBvB,EAAgBX,GAAW,CAACqC,EAASC,KAE3DL,EAASrB,KAAKsB,EAAmB,GAAKC,GAGtC,IACII,EADAC,EAASC,SAASC,cAAc,UAGpCF,EAAOG,QAAU,QACjBH,EAAOI,QAAU,IACbnB,EAAoBoB,IACvBL,EAAOM,aAAa,QAASrB,EAAoBoB,IAElDL,EAAOO,IA1DV,SAAwB/C,GACvB,OAAOyB,EAAoBuB,EAAI,GAAKhD,EAAU,wBAyD/BiD,CAAejD,GAG5B,IAAIkD,EAAQ,IAAIC,MAChBZ,EAAmB,SAAUa,GAE5BZ,EAAOa,QAAUb,EAAOc,OAAS,KACjCC,aAAaX,GACb,IAAIY,EAAQ7C,EAAgBX,GAC5B,GAAa,IAAVwD,EAAa,CACf,GAAGA,EAAO,CACT,IAAIC,EAAYL,IAAyB,SAAfA,EAAMM,KAAkB,UAAYN,EAAMM,MAChEC,EAAUP,GAASA,EAAMQ,QAAUR,EAAMQ,OAAOb,IACpDG,EAAMW,QAAU,iBAAmB7D,EAAU,cAAgByD,EAAY,KAAOE,EAAU,IAC1FT,EAAMY,KAAO,iBACbZ,EAAMQ,KAAOD,EACbP,EAAMa,QAAUJ,EAChBH,EAAM,GAAGN,GAEVvC,EAAgBX,QAAWgE,IAG7B,IAAIpB,EAAUqB,WAAW,WACxB1B,EAAiB,CAAEmB,KAAM,UAAWE,OAAQpB,KAC1C,MACHA,EAAOa,QAAUb,EAAOc,OAASf,EACjCE,SAASyB,KAAKC,YAAY3B,GAG5B,OAAOJ,QAAQgC,IAAInC,IAIpBR,EAAoB4C,EAAIxD,EAGxBY,EAAoB6C,EAAI3C,EAGxBF,EAAoB8C,EAAI,SAAS1C,EAASiC,EAAMU,GAC3C/C,EAAoBgD,EAAE5C,EAASiC,IAClCvD,OAAOmE,eAAe7C,EAASiC,EAAM,CAAEa,YAAY,EAAMC,IAAKJ,KAKhE/C,EAAoBoD,EAAI,SAAShD,GACX,oBAAXiD,QAA0BA,OAAOC,aAC1CxE,OAAOmE,eAAe7C,EAASiD,OAAOC,YAAa,CAAEC,MAAO,WAE7DzE,OAAOmE,eAAe7C,EAAS,aAAc,CAAEmD,OAAO,KAQvDvD,EAAoBwD,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQvD,EAAoBuD,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAK7E,OAAO8E,OAAO,MAGvB,GAFA5D,EAAoBoD,EAAEO,GACtB7E,OAAOmE,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOvD,EAAoB8C,EAAEa,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIR3D,EAAoB+D,EAAI,SAAS1D,GAChC,IAAI0C,EAAS1C,GAAUA,EAAOqD,WAC7B,WAAwB,OAAOrD,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoB8C,EAAEC,EAAQ,IAAKA,GAC5BA,GAIR/C,EAAoBgD,EAAI,SAASgB,EAAQC,GAAY,OAAOnF,OAAOC,UAAUC,eAAeC,KAAK+E,EAAQC,IAGzGjE,EAAoBuB,EAAI,IAGxBvB,EAAoBkE,GAAK,SAASC,GAA2B,MAApBC,QAAQ3C,MAAM0C,GAAYA,GAEnE,IAAIE,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAWlF,KAAK2E,KAAKO,GAC5CA,EAAWlF,KAAOf,EAClBiG,EAAaA,EAAWG,QACxB,IAAI,IAAI7F,EAAI,EAAGA,EAAI0F,EAAWxF,OAAQF,IAAKP,EAAqBiG,EAAW1F,IAC3E,IAAIU,EAAsBkF,EAI1BhF,EAAgBJ,KAAK,CAAC,IAAI,IAEnBM,I,y0CC3NT,IAAMgF,EAAkBC,IAAOC,OAAV,IACjB,qBAAGC,QAEC,0CACA,0CAYF,qBAAGA,QAEC,0CACA,2CAOJC,EAAeH,IAAOC,OAAV,IACd,YAA4B,IAAzBG,EAAyB,EAAzBA,UAAWF,EAAc,EAAdA,QACd,OAAIE,EACK,yCACEF,EACF,0CAEF,2CAaL,YAA4B,IAAzBE,EAAyB,EAAzBA,UAAWF,EAAc,EAAdA,QACd,OAAIE,EACK,yCACEF,EACF,0CAEF,4CAWPG,EAAmBL,IAAOC,OAAV,K,iRC1DtB,IAAMK,EAAiBN,YAAOO,IAAPP,CAAH,K,iwBCApB,IAAMQ,EAAeR,IAAOS,IAAV,KAIZC,EAAeV,IAAOS,IAAV,KAOZE,EAAgBX,YAAOY,IAAPZ,CAAH,KAGba,EAAYb,IAAOS,IAAV,KAKQT,IAAOS,IAAV,K,sgBCrBpB,IAAMK,EAAoBd,IAAOS,IAAV,IAUnB,qBAAGM,SAEC,qFAAuF,4DASvF,qBAAGA,UAA2B,uB,4SCtBtC,IAAMC,EAAgBhB,IAAOS,IAAV,K,0+CCAnB,IAAMQ,EAAajB,IAAOkB,GAAV,KAMVC,EAAenB,IAAOoB,GAAV,KAOZC,EAAgBrB,IAAOsB,GAAV,KAIbC,EAAevB,IAAOoB,GAAV,KAKZI,EAAgBxB,IAAOyB,KAAV,KAMbC,GAHe1B,IAAO2B,EAAV,KAGD3B,IAAOyB,KAAV,MAQRG,EAAa5B,IAAOyB,KAAV,KAGVI,EAAiB7B,IAAO2B,EAAV,KAIdG,EAAoB9B,IAAOyB,KAAV,KAQjBM,EAAW/B,IAAOS,IAAV,KAGRuB,EAAUhC,IAAOS,IAAV,KCzDb,iqB,gCCAA,gYAMO,IAAMwB,EAAsB,yCACtBC,EAAqB,wCACrBC,EAAe,kCACfC,EAAc,iCACdC,EAAoB,uCACpBC,EAAwB,2CACxBC,EACX,6CACWC,EAAsB,yCACtBC,EACX,qDACWC,EACX,+CAGWC,EAAqB,CAChCC,QAAS,EACTC,QAAS,GAEEC,EAA2B,CACtCC,gBAAiB,EACjBC,YAAa,I,sICCTC,EAA0B,CAC9BC,QAAQ,EACRC,MAAOR,IAAmBC,QAC1BQ,QAASN,IAAyBE,aAE9BK,EAAeC,YAAO,CAC1BC,SAAUC,IAAKC,IAAM,CAAC,YAAa,EAAG,SAAU,IAChDC,SAAS,EACTC,QAAS,CACPhK,KAAM8J,IAAKG,SAAS,GACpBC,YAAY,GAEdC,OAAQ,KACRC,YAAad,IAKA,aAAkC,IAAjCe,EAAiC,uDAAzBX,EAAcY,EAAW,uCAC/C,OAAQA,EAAO1G,MACb,KAAK0E,IACH,OAAO+B,EAAME,IAAI,SAAU,MAC7B,KAAKhC,IACH,OAAO8B,EAAME,IAAI,cAAejB,GAClC,KAAKd,IACH,OAAO6B,EAAME,IACX,YACCT,IAAKU,UAAUC,KAAK,SAAAC,GAAG,OAAIA,EAAIxF,QAAUoF,EAAOV,YAAa,IAC3D1E,OAAS,IAEhB,KAAKuD,IACH,OAAO4B,EAAMM,MAAM,CAAC,UAAW,QAASL,EAAON,SACjD,KAAKtB,IACH,OAAO2B,EAAME,IAAI,SAAUD,EAAOtK,MACpC,KAAK2I,IACH,OAAO0B,EAAME,IAAI,UAAWD,EAAOM,MACrC,KAAKhC,IACH,OAAOyB,EAAMM,MAAM,CAAC,UAAW,cAAeL,EAAOM,MACvD,KAAK/B,IACH,IAAMgC,EAAWR,EAAMM,MAAM,CAAC,cAAe,UAAWL,EAAOM,MAC/D,OAAKN,EAAOM,KAQLC,EAPEA,EACJF,MAAM,CAAC,cAAe,SAAU3B,IAAmBC,SACnD0B,MACC,CAAC,cAAe,WAChBxB,IAAyBE,aAKjC,KAAKP,IACH,OAAOuB,EAAMM,MAAM,CAAC,cAAe,WAAYL,EAAOb,SACxD,KAAKV,IACH,OAAOsB,EAAMM,MAAM,CAAC,cAAe,SAAUL,EAAOd,OACtD,QACE,OAAOa,I,iqBC3BE,mBAACS,EAAD,uDAAoB,GAApB,OASbC,WARA,CAQgB,EAAD,CACbC,OAAQC,EACRC,OAAQC,YAAcC,MACnBN,M,sLC5DQ,SAASO,EAAWC,GACjC,IAAMC,EAAQ,CACZC,SAAUC,IACVC,UAAWD,IACXE,SAAUF,IACVG,eAAgBH,IAChBX,iBAAkBe,KAEpBC,IACEC,IAAYT,EAAOC,GACnB,0D,aCVG,SAASS,EAAqBV,EAAOW,GAC1C,OAAO,SAAuBzG,EAAK0G,GAC5BD,GAASZ,EAAWC,GAEzBQ,IACEK,IAAU3G,KAAS4G,IAAS5G,IAAQiG,IAAYS,GAChD,6EAKAG,QAAQC,IAAIhB,EAAMR,iBAAkBtF,IACpC8F,EAAMR,iBAAiBtF,KAAS0G,IAIlCZ,EAAMR,iBAAiBtF,GAAO0G,EAC9BZ,EAAMM,eAAeW,YAAcjB,EAAMR,qBAI9B,SAAS0B,EAAalB,GAGnC,OAFAD,EAAWC,GAEJ,CACLmB,cAAeT,EAAqBV,GAAO,I,+5BCpBhC,sBAAG9F,EAAH,EAAGA,IAAK0G,EAAR,EAAQA,QAAR,OAAsB,SAAAQ,GAAoB,IACjDC,EADiD,YAUrD,WAAYC,EAAOC,GAAS,a,4FAAA,SAC1B,wBAAMD,EAAOC,IAEbL,EAAaK,EAAQvB,OAAOmB,cAAcjH,EAAK0G,GAHrB,E,UAVyB,O,kOAAA,GACzBY,IAAMC,W,EADmB,G,EAAA,gCAiBnD,OAAO,kBAACL,EAAqBM,KAAKJ,Y,2BAjBiB,KAqBvD,OArBuD,EACjDD,EADiD,mBAE3BD,GAF2B,EACjDC,EADiD,cAIhCM,KAJgC,EACjDN,EADiD,oCAMjBD,EAAiBQ,aACnDR,EAAiB1I,MACjB,YARmD,MAqBhDmJ,IAAqBR,EAAiBD,KCjClCU,EAAS,yBACTC,EAAoB,oC,iqBCOjC,IAAMC,EAAe,CDTa,qCCSQF,EAAQC,GAE5CE,EAAW,SAAA/H,GAAG,OAClBsG,IACEK,IAAU3G,KAAS4G,IAAS5G,GAC5B,uEAGEgI,EAAkB,SAAAC,GACtB,IAAMlC,EAAQ,CACZmC,KAAMjC,IACNrG,KAAM,SAAAA,GAAI,OAAI+G,IAAU/G,IAASkI,EAAaK,SAASvI,KAEzD0G,IACEC,IAAY0B,EAAYlC,GACxB,gEAIG,SAASqC,EAAkBtC,EAAOW,GACvC,OAAO,SAAoBzG,GAA4B,IAAvBiI,EAAuB,uDAAV,GAAII,EAAM,uCAChD5B,GAASZ,EAAWC,GAEzB,IAAMwC,EAAgB,EAAH,GACdL,EADc,CAEjBrI,KAAMqI,EAAWrI,MAAQgI,IAEnBM,EAAeI,EAAfJ,KAAMtI,EAAS0I,EAAT1I,KAEdmI,EAAS/H,GACTgI,EAAgBM,GAEhB,IAAIC,EAAU1B,QAAQC,IAAIhB,EAAM0C,cAAexI,KAY5CuI,GACAA,GAAW3I,IAASgI,GAAUhI,IAASiI,KAGxC/B,EAAM0C,cAAcxI,GAApB,KACKsI,EADL,CAEEG,KAAM3C,EAAM4C,QAAQR,EAAMG,OAO3B,SAASM,EAAiB7C,EAAOW,GACtC,OAAO,SAAmBzG,GAKxB,GAJKyG,GAASZ,EAAWC,GAEzBiC,EAAS/H,GAEL6G,QAAQC,IAAIhB,EAAM0C,cAAexI,GAAM,CACzC,IAAMiI,EAAanC,EAAM0C,cAAcxI,GACnCiI,EAAWrI,MAAQqI,EAAWrI,OAASgI,IACzCK,EAAWQ,KAAKG,SAId9C,EAAM0C,cAAcxI,GAAO,UAOtB,SAASgH,EAAalB,GAGnC,OAFAD,EAAWC,GAEJ,CACL+C,WAAYT,EAAkBtC,GAAO,GACrCgD,UAAWH,EAAiB7C,GAAO,I,+5BCzExB,sBAAG9F,EAAH,EAAGA,IAAKkI,EAAR,EAAQA,KAAMtI,EAAd,EAAcA,KAAd,OAAyB,SAAAsH,GAAoB,IACpD6B,EADoD,YAUxD,WAAY3B,EAAOC,GAAS,a,4FAAA,UAC1B,wBAAMD,EAAOC,KAER2B,UAAYhC,EAAaK,EAAQvB,OAEtC,EAAKkD,UAAUH,WAAW7I,EAAK,CAAEkI,OAAMtI,QAAQ,EAAKwH,OAL1B,E,UAV4B,O,kOAAA,GACjCE,IAAMC,W,EAD2B,G,EAAA,8CAmBtDC,KAAKwB,UAAUF,UAAU9I,KAnB6B,+BAuBtD,OAAO,kBAACkH,EAAqBM,KAAKJ,Y,2BAvBoB,KA2B1D,OA3B0D,EACpD2B,EADoD,mBAE9B7B,GAF8B,EACpD6B,EADoD,cAInCtB,KAJmC,EACpDsB,EADoD,iCAMvB7B,EAAiBQ,aAChDR,EAAiB1I,MACjB,YARsD,MA2BnDmJ,IAAqBoB,EAAY7B,K,QC3C3BtB,EADCqD,c,0BCEDC,eAAsBC,IAAgBC,K,+XCQ9C,IAAMC,GAAe,SAAAC,GAI1B,IAHA,IAAIC,EAAWD,EACTzN,EAAS,GAFoB,aAMjC,GAAwB,IAApB0N,EAASvO,OAEX,OADAa,EAAOP,KAAKiO,EAAS,IACrB,QAGF,IAAMC,EAAkBC,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkBJ,EAASvO,QAChEuO,EAASC,KACX3N,EAAOP,KAAKiO,EAASC,IACrBD,EAAWA,EAASK,OAAO,SAACC,EAAGC,GAAJ,OAAcA,IAAUN,MAVhDD,EAASvO,OAAS,GAAG,kBAIxB,MAUJ,OAAOa,GAIHkO,GAAa,SAAC/J,EAAKG,GACvB6J,aAAaC,QACX,SACAC,KAAKC,U,8UAAL,IACKD,KAAKE,MAAMJ,aAAaK,QAAQ,WADrC,MAEGrK,EAAMG,OAIPmK,GAAa,SAAAtK,GACjB,OAAOqE,KAAK6F,KAAKE,MAAMJ,aAAaK,QAAQ,WAAY,CAACrK,KAErDuK,GAAgB,SAAAvK,GACpBgK,aAAaC,QACX,SACAC,KAAKC,UAAUK,KAAMF,GAAW,UAAWtK,MAIlCyK,GAAc,SAAAC,GACzBX,GAAW,WAAYW,IAEZC,GAAc,WACzB,OAAOL,GAAW,aAEPM,GAAiB,WAC5BL,GAAc,aAGHM,GAAY,SAAAC,GACvBf,GAAW,SAAUe,IAEVC,GAAY,WACvB,OAAOT,GAAW,WAMPU,GAAa,SAAAxG,GACxBuF,GAAW,UAAWvF,IAEXyG,GAAa,WACxB,OAAOX,GAAW,YAMPY,GAAY,SAAAC,GACvBpB,GAAW,SAAUoB,IAEVC,GAAY,WACvB,OAAOd,GAAW,WAEPe,GAAe,WAC1B,OAAOd,GAAc,W,2hCC7EhB,IAAMe,GAAc,SAACC,GAA8B,IAAnBC,EAAmB,uDAAP,GACjD,IAAK5E,IAAS2E,GAAY,CACxB,IAAI1P,EAAS2P,EAeb,OAdAD,EAAUE,QAAQ,SAAA7N,GAChB,IAAM8N,EAAazQ,OAAO0Q,KAAK/N,GAAO,GAEpC/B,EADEZ,OAAO0Q,KAAK9P,GAAQsM,SAASuD,GACtB,MACJ7P,EADC,MAEH6P,EAFG,aAEc7P,EAAO6P,IAFrB,GAEqC9N,EAAM8N,OAGxC,MACJ7P,EADC,GAED+B,KAIF/B,EAET,OAAO2P,GAGHI,GAAa,SAAC,EAAiBrN,GAAY,IAA3BC,EAA2B,EAA3BA,KAAMkB,EAAqB,EAArBA,MAC1B,OAAIkH,IAASlH,KAAWmM,KAAUnM,GAChC,MACGlB,EAAO,CAACD,IAGN,IAGHuN,GAAQ,SAAAC,GAAI,OAAI,WAAkBxN,GAAY,IAA3BC,EAA2B,EAA3BA,KAAMkB,EAAqB,EAArBA,MAC7B,OAAKkH,IAASlH,IAAWqM,EAAKC,MAAMF,MAAMpM,GAKnC,GAJL,MACGlB,EAAO,CAACD,MAMT0N,GAAc,SAAC,EAAsB1N,GAAY,IAAhCC,EAAgC,EAAhCA,KAAMkB,EAA0B,EAA1BA,MAAOwM,EAAmB,EAAnBA,IAClC,OAAKtF,IAASlH,IAAUA,EAAQwM,EAC9B,MACG1N,EAAO,CAACD,IAGN,IAGH4N,GAAc,SAAC,EAAsB5N,GAAY,IAAhCC,EAAgC,EAAhCA,KAAMkB,EAA0B,EAA1BA,MAAO0M,EAAmB,EAAnBA,IAClC,OAAKxF,IAASlH,IAAUA,EAAQ0M,EAC9B,MACG5N,EAAO,CAACD,IAGN,IAGH8N,GAAY,SAAAN,GAAI,OAAI,WAAkBxN,GAAY,IAA3BC,EAA2B,EAA3BA,KAAMkB,EAAqB,EAArBA,MACjC,OAAKkH,IAASlH,IAAWqM,EAAKC,MAAMK,UAAU3M,GAKvC,GAJL,MACGlB,EAAO,CAACD,MAMT+N,GAAc,SAAC,EAAsB/N,GAAY,IAAhCC,EAAgC,EAAhCA,KAAMkB,EAA0B,EAA1BA,MAAOwM,EAAmB,EAAnBA,IAClC,OAAKtF,IAASlH,IAAUA,EAAM1E,OAASkR,EACrC,MACG1N,EAAO,CAACD,IAGN,IAIM,YAAAwN,GAAI,MAAK,CACtBH,cACAK,eACAE,eACAG,eACAR,MAAOA,GAAMC,GACbM,UAAWA,GAAUN,K,y2CC9EhB,IAAMQ,GAAc,SAAArF,GAAoB,IACvCsF,EADuC,gC,4FAAA,8C,UAAA,O,mOAAA,GACfC,oB,EADe,G,EAAA,gCAElC,MAC8BjF,KAAKJ,MAAlC7C,EADD,EACCA,QAASmI,EADV,EACUA,gBACjB,OACE,kBAACxF,EAAD,MACMM,KAAKJ,MADX,CAEE7C,QAASA,EACToI,cAAeD,U,6BARsB,KAczCxF,EAAiB0F,eACnBJ,EAAgBI,a,8UAAhB,IAAoC1F,EAAiB0F,eAGvD,IAOMC,EAAcC,YAPI,kBACtBC,YAAyB,CACvBxI,QAASyI,QAEc,SAAAhH,GAAQ,MAAK,CACtC0G,gBAAiB,SAAAtH,GAAI,OAAIY,EAAS2G,aAAcvH,QAOlD,OAAOuC,IAAqBkF,EAAYL,GAAkBtF,IC/C5D,+vB,iqBCKA,IAuBe+F,EAvBKpM,YAAOqM,IAAPrM,CAAH,K,mgCCiBXsM,E,8ZAAcV,oB,uCACT,MAeHjF,KAAKJ,MAbPgG,EAFK,EAELA,SACAtM,EAHK,EAGLA,OACAuM,EAJK,EAILA,SACAC,EALK,EAKLA,UACAC,EANK,EAMLA,QACAC,EAPK,EAOLA,OACAC,EARK,EAQLA,gBACAC,EATK,EASLA,eACAC,EAVK,EAULA,cACA5J,EAXK,EAWLA,OACA6J,EAZK,EAYLA,SACAC,EAbK,EAaLA,MACAC,EAdK,EAcLA,OAGF,OACE,kBAAC,EAAD,GACEV,SAAUA,EACVE,UAAWA,EACXD,SAAUA,EACVtJ,OAAQA,EACR8J,MAAOA,EACPC,OAAQA,GACJH,IAEFC,GAAY,kBAACG,EAAA,EAAD,CAAaD,OAAQA,GAASD,GAC5C,kBAACG,EAAA,EAAD,KACE,kBAACT,EAAYE,IAEf,kBAACQ,EAAA,EAAD,KACGT,EACC,kBAACA,EAAWE,IAEXrJ,IAAKvD,EAAQ,YAAcuD,IAAKvD,EAAQ,eACvC,kBAACoN,EAAA,EAAD,CAAWZ,UAAU,QACnB,kBAACa,EAAA,EAAD,KACG9J,IAAKvD,EAAQ,cACZ,kBAACsN,EAAA,EAAD,CAAKC,KAAM,GACT,kBAAC,IAAD,GACEC,SAAO,EACPC,QAASlK,IAAKvD,EAAQ,mBAAoB,cAC1C0N,SAAUnK,IAAKvD,EAAQ,uBACnBuD,IAAKvD,EAAQ,cAEhBuD,IAAKvD,EAAQ,kBAAmB,MAItCuD,IAAKvD,EAAQ,YACZ,kBAACsN,EAAA,EAAD,CAAKC,KAAM,GACT,kBAAC,IAAD,GACEE,QAASlK,IAAKvD,EAAQ,iBAAkB,cACxC0N,SAAUnK,IAAKvD,EAAQ,qBACnBuD,IAAKvD,EAAQ,YAEhBuD,IAAKvD,EAAQ,gBAAiB,e,gCAgBvDqM,EAAMsB,UAAY,CAOhBrB,SAAUsB,IAAUC,UAAU,CAACD,IAAUtJ,KAAMsJ,IAAUE,MAAM,CAAC,aAEhE9N,OAAQ4N,IAAU3I,MAAM,CACtB8I,QAASH,IAAUvO,OACnB2O,UAAWJ,IAAUvO,SAGvBkN,SAAUqB,IAAUtJ,KAEpB2J,SAAUL,IAAUM,KACpB1B,UAAWoB,IAAUO,OAErB1B,QAASmB,IAAUC,UAAU,CAACD,IAAUQ,QAASR,IAAUM,OAE3DxB,OAAQkB,IAAUC,UAAU,CAACD,IAAUQ,QAASR,IAAUM,OAE1DvB,gBAAiBiB,IAAUvO,OAE3BuN,eAAgBgB,IAAUvO,OAE1BwN,cAAee,IAAUvO,OAEzB4D,OAAQ2K,IAAUtJ,KAElBwI,SAAUc,IAAUtJ,KAEpByI,MAAOa,IAAUO,OAEjBnB,OAAQY,IAAUM,MAGpB7B,EAAMP,aAAe,CACnBQ,SAAU,SACVtM,OAAQ,CACN+N,QAAS,CACPM,MAAO,OAGX7B,UAAW,GACXC,QAAS,kBAAM,MACfE,gBAAiB,GACjBC,eAAgB,GAChBC,cAAe,GACfN,UAAU,EACVtJ,QAAQ,EACR6J,UAAU,EACVC,MAAO,GACPC,OAAQ,cAIKX,O,yWC9If,IAAMiC,EAAoBvO,YAAOsN,IAAPtN,CAAH,K,s7BCKjBwO,E,YACJ,WAAYjI,GAAO,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,eAAMA,K,8CAEDkI,YAAc,GAEnB,EAAKC,sBAAwB,EAAKA,sBAAsBtP,KAA3B,MALZ,E,sPADKwM,oB,sDASA,IACd+C,EAAahI,KAAKJ,MAAlBoI,SACR,OAAOC,MAAMC,QAAQF,GAAYA,EAAWA,EAASG,MAAM,O,+BAGpD,MACuCnI,KAAKJ,MAA3CkG,EADD,EACCA,UAAWsC,EADZ,EACYA,aAAcC,EAD1B,EAC0BA,SAC3BC,EAAWtI,KAAK+H,wBACtB,OACE,kBAACH,EAAD,CACEW,WAAS,EACTzC,UAAS,kBAAaA,EAAY,IAAH,OAAOA,GAAc,KAEnDmC,MAAMjI,KAAK8H,aACTU,KAAK,MACLC,IAAI,SAACpG,EAAGqG,GAAJ,OACH,kBAAC9B,EAAA,EAAD,CACEpO,IAAG,eAAUkQ,EAAU,GACvBC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJhD,UAAU,OANZ,UAQM4C,EAAU,EARhB,MASIL,GAAY,kBAACA,EAAD,GAAUK,QAASA,GAAaN,MAC1CC,GAAYxL,IAAKyL,EAAU,CAACI,GAAU,a,gCAUxDb,EAAYZ,UAAY,CAEtBnB,UAAWoB,IAAUO,OAErBW,aAAclB,IAAUvO,OAExBqP,SAAUd,IAAUC,UAAU,CAC5BD,IAAUO,OACVP,IAAU6B,QAAQ7B,IAAUO,UAG9BY,SAAUnB,IAAUC,UAAU,CAACD,IAAUQ,QAASR,IAAUM,QAG9DK,EAAYzC,aAAe,CACzBU,UAAW,GACXsC,aAAc,GACdJ,SAAU,IAIGH,O,oBCnFf7S,EAAOD,QAAU,IAA0B,wC,siVCA3CC,EAAOD,QAAU,IAA0B,wC,oBCA3CC,EAAOD,QAAU,IAA0B,wC,q0DCqBrCiU,E,wFAA2B/D,oB,oCACtB,MACwBjF,KAAKJ,MAA5BhD,EADD,EACCA,SAAUqM,EADX,EACWA,SAClB,OACE,kBAAC,IAAD,CAAc3F,OAAQ1G,EAAUsM,SAAUC,IAAKC,YAAYxM,IACxDqM,O,KAWM3D,cALS,kBACtBC,YAAyB,CACvB3I,SAAUyM,OAGC/D,CAAyB0D,GAI3BM,EAAW,SAAA5J,GAAoB,IACpC6J,EADoC,wFACftE,oBADe,oCAE/B,MAC6BjF,KAAKJ,MAAjChD,EADD,EACCA,SAAU4M,EADX,EACWA,cAClB,OACE,kBAAC9J,EAAD,KACMM,KAAKJ,MADX,CAEEhD,SAAUA,EACV6M,aAAcD,SARoB,KActC9J,EAAiB0F,eACnBmE,EAAanE,a,2UAAb,IAAiC1F,EAAiB0F,eAGpD,IAOMC,EAAcC,YAPI,kBACtBC,YAAyB,CACvB3I,SAAUyM,OAEa,SAAA7K,GAAQ,MAAK,CACtCgL,cAAe,SAAA5M,GAAQ,OAAI4B,EAASkL,YAAY9M,QAOlD,OAAOuD,IACLwJ,YACEtE,EACAuE,IAFFD,CAGEJ,GACF7J,IC3DEmK,EAAWD,YALS,SAAC,GAAD,OAIpBE,EAJoB,EACxBC,KAAQD,eADgB,EAExBE,UAFwB,EAGxBC,cAIWC,EAAa,SAACF,EAAWC,GAAZ,OACxB,kBAACJ,EAAD,CAAUG,UAAWA,EAAWC,WAAYA,KCpB9C,iG,gCCAA,4QAsBaE,EAAgB,iBAAO,CAClCvT,KAAM0E,MAOKoO,EAAc,SAAA9M,GAAQ,MAAK,CACtChG,KAAM4E,IACNoB,aAGW4G,EAAa,SAAAxG,GAAO,MAAK,CACpCpG,KAAM6E,IACNuB,YAGWoN,EAAc,SAAApX,GAAI,MAAK,CAClC4D,KAAM8E,IACN1I,SAGWmS,EAAgB,SAAAvH,GAAI,MAAK,CACpChH,KAAM+E,IACNiC,SAQWyM,EAAoB,SAAAzM,GAAI,MAAK,CACxChH,KAAMiF,IACN+B,SAGW0M,EAA8B,SAAA7N,GAAO,MAAK,CACrD7F,KAAMkF,IACNW,YAGW8N,EAAyB,SAAA/N,GAAK,MAAK,CAC9C5F,KAAMmF,IACNS,W,gCCnEF,4KAWMgO,EAAqB,SAAAnN,GAAK,OAAIA,EAAMW,QAEpCqL,EAAiBoB,YACrBD,EACA,SAAAE,GAAG,OAAIA,EAAIC,OAAO/N,WAEd4I,EAAgBiF,YACpBD,EACA,SAAAE,GAAG,OAAIA,EAAIC,OAAO5N,UAEd6N,EAAoBH,YACxBD,EACA,SAAAE,GAAG,OAAIA,EAAIC,OAAO3N,UAEd6N,EAAeJ,YACnBD,EACA,SAAAE,GAAG,OAAIA,EAAIC,OAAOxN,SAEd2N,EAAoBL,YACxBD,EACA,SAAAE,GAAG,OAAIA,EAAIC,OAAOvN,e,2FC/BL,OACb2N,kBAAmB,CACjBnU,KAAM,OACNoU,KAAM,gCACNC,UAAW,GACXC,OAAQ,oBAEVC,kBAAmB,CACjBvU,KAAM,OACNoU,KAAM,4BACNC,UAAW,GACXC,OAAQ,qBCmBG,GACb9B,YAZkB,CAClBgC,G,OACAC,G,QAWAC,WARiB,CACjBC,MAAO,QACPC,MAAO,SAOPC,cApBoB,CACpBC,QAAS,UACTC,YAAa,cACbC,OAAQ,WChBK,GACbC,QAAS,IACTC,MAAO,SACPC,SAAU,YACVC,cAAe,qBACfC,cAAe,iBACfC,UAAW,c,gBCQPC,EAAe,GAAH,OADC,aACD,WACZC,EAAkB,GAAH,OAFF,aAEE,cACfC,EAAkB,GAAH,OAHF,aAGE,cACfC,EAAe,GAAH,OAAMH,EAAN,WACZI,EAAa,GAAH,OAAMJ,EAAN,SACVK,EAAe,GAAH,OAAMJ,EAAN,WACZK,EAAe,GAAH,OAAML,EAAN,WACZM,EAAoB,GAAH,OAAML,EAAN,YACjBM,EAAyB,GAAH,OAAMN,EAAN,iBACtBO,EAAoB,GAAH,OAAMD,EAAN,YACjBE,EAAuB,GAAH,OAAMF,EAAN,mBACpBG,EAAqB,GAAH,OAAMH,EAAN,iBAClBI,EAA4B,GAAH,OAAMJ,EAAN,wBACzBK,EAAyB,GAAH,OAAMX,EAAN,iBACtBY,EAAqB,GAAH,OAAMZ,EAAN,aAETa,cAAe,CAE5BC,mBAAoB,CAClBC,GAAI,GAAF,OAAKd,EAAL,SACFe,eAAgB,QAElBC,mBAAoB,CAClBF,GAAI,GAAF,OAAKd,EAAL,SACFe,eAAgB,QAElBE,mBAAoB,CAClBH,GAAI,GAAF,OAAKd,EAAL,SACFe,eAAgB,QAElBG,qBAAsB,CACpBJ,GAAI,GAAF,OAAKd,EAAL,WACFe,eAAgB,UAElBI,mBAAoB,CAClBL,GAAI,GAAF,OAAKd,EAAL,SACFe,eAAgB,QAElBK,sBAAuB,CACrBN,GAAI,GAAF,OAAKd,EAAL,YACFe,eAAgB,WAElBM,sBAAuB,CACrBP,GAAI,GAAF,OAAKd,EAAL,YACFe,eAAgB,OAElBO,sBAAuB,CACrBR,GAAI,GAAF,OAAKd,EAAL,YACFe,eAAgB,WAElBQ,qBAAsB,CACpBT,GAAI,GAAF,OAAKd,EAAL,WACFe,eAAgB,UAGlBS,6BAA8B,CAC5BV,GAAI,GAAF,OAAKb,EAAL,qBACFc,eAAgB,WAElBU,4BAA6B,CAC3BX,GAAI,GAAF,OAAKb,EAAL,oBACFc,eAAgB,UAElBW,sCAAuC,CACrCZ,GAAI,GAAF,OAAKb,EAAL,8BACFc,eAAgB,0BAElBY,sCAAuC,CACrCb,GAAI,GAAF,OAAKb,EAAL,8BACFc,eAAgB,0BAGlBa,uBAAwB,CACtBd,GAAI,GAAF,OAAKZ,EAAL,aACFa,eAAgB,kBAElBc,2BAA4B,CAC1Bf,GAAI,GAAF,OAAKZ,EAAL,iBACFa,eAAgB,SAElBe,0BAA2B,CACzBhB,GAAI,GAAF,OAAKZ,EAAL,gBACFa,eAAgB,OAElBgB,+BAAgC,CAC9BjB,GAAI,GAAF,OAAKZ,EAAL,oBACFa,eAAgB,aAElBiB,kDAAmD,CACjDlB,GAAI,GAAF,OAAKZ,EAAL,uCACFa,eAAgB,eAElBkB,2CAA4C,CAC1CnB,GAAI,GAAF,OAAKZ,EAAL,oCACFa,eAAgB,QAElBmB,8CAA+C,CAC7CpB,GAAI,GAAF,OAAKZ,EAAL,kCACFa,eAAgB,WAElBoB,sCAAuC,CACrCrB,GAAI,GAAF,OAAKZ,EAAL,2BACFa,eAAgB,eAElBqB,kDAAmD,CACjDtB,GAAI,GAAF,OAAKZ,EAAL,uCACFa,eAAgB,iBAElBsB,6CAA8C,CAC5CvB,GAAI,GAAF,OAAKZ,EAAL,kCACFa,eACE,wHAEJuB,oDAAqD,CACnDxB,GAAI,GAAF,OAAKZ,EAAL,wCACFa,eAAgB,mBAElBwB,gDAAiD,CAC/CzB,GAAI,GAAF,OAAKZ,EAAL,oCACFa,eAAgB,eAElByB,qDAAsD,CACpD1B,GAAI,GAAF,OAAKZ,EAAL,yCACFa,eAAgB,gDAGlB0B,oBAAqB,CACnB3B,GAAI,GAAF,OAAKX,EAAL,gBACFY,eAAgB,0BAElB2B,mBAAoB,CAClB5B,GAAI,GAAF,OAAKX,EAAL,gBACFY,eAAgB,cAElB4B,qBAAsB,CACpB7B,GAAI,GAAF,OAAKX,EAAL,kBACFY,eAAgB,kBAElB6B,+BAAgC,CAC9B9B,GAAI,GAAF,OAAKX,EAAL,0BACFY,eAAgB,oBAElB8B,gCAAiC,CAC/B/B,GAAI,GAAF,OAAKX,EAAL,4BACFY,eAAgB,qBAGlB+B,cAAe,CACbhC,GAAI,GAAF,OAAKV,EAAL,UACFW,eAAgB,yBAElBgC,oBAAqB,CACnBjC,GAAI,GAAF,OAAKV,EAAL,gBACFW,eACE,yOAEJiC,iCAAkC,CAChClC,GAAI,GAAF,OAAKV,EAAL,2BACFW,eAAgB,uBAElBkC,6BAA8B,CAC5BnC,GAAI,GAAF,OAAKV,EAAL,uBACFW,eAAgB,MAElBmC,6BAA8B,CAC5BpC,GAAI,GAAF,OAAKV,EAAL,wBACFW,eAAgB,sBAElBoC,kBAAmB,CACjBrC,GAAI,GAAF,OAAKV,EAAL,cACFW,eAAgB,yBAGlBqC,qBAAsB,CACpBtC,GAAI,GAAF,OAAKR,EAAL,iBACFS,eAAgB,qBAElBsC,gCAAiC,CAC/BvC,GAAI,GAAF,OAAKR,EAAL,4BACFS,eAAgB,0BAElBuC,gCAAiC,CAC/BxC,GAAI,GAAF,OAAKR,EAAL,4BACFS,eAAgB,sBAElBwC,kBAAmB,CACjBzC,GAAI,GAAF,OAAKR,EAAL,cACFS,eAAgB,YAElByC,sBAAuB,CACrB1C,GAAI,GAAF,OAAKR,EAAL,kBACFS,eAAgB,6BAElB0C,4BAA6B,CAC3B3C,GAAI,GAAF,OAAKR,EAAL,wBACFS,eACE,yWAEJ2C,mCAAoC,CAClC5C,GAAI,GAAF,OAAKR,EAAL,+BACFS,eACE,0FAEJ4C,uCAAwC,CACtC7C,GAAI,GAAF,OAAKR,EAAL,gCACFS,eAAgB,2BAGlB6C,sBAAuB,CACrB9C,GAAI,GAAF,OAAKP,EAAL,UACFQ,eAAgB,mBAElB8C,mCAAoC,CAClC/C,GAAI,GAAF,OAAKP,EAAL,uBACFQ,eAAgB,kCAElB+C,yCAA0C,CACxChD,GAAI,GAAF,OAAKP,EAAL,6BACFQ,eACE,0EAEJgD,4BAA6B,CAC3BjD,GAAI,GAAF,OAAKP,EAAL,gBACFQ,eAAgB,wBAElBiD,wCAAyC,CACvClD,GAAI,GAAF,OAAKP,EAAL,2BACFQ,eAAgB,uBAElBkD,oCAAqC,CACnCnD,GAAI,GAAF,OAAKP,EAAL,wBACFQ,eAAgB,8BAElBmD,6CAA8C,CAC5CpD,GAAI,GAAF,OAAKP,EAAL,iCACFQ,eAAgB,sBAElBoD,0CAA2C,CACzCrD,GAAI,GAAF,OAAKP,EAAL,8BACFQ,eAAgB,oBAElBqD,2CAA4C,CAC1CtD,GAAI,GAAF,OAAKP,EAAL,+BACFQ,eAAgB,0DAElBsD,sCAAuC,CACrCvD,GAAI,GAAF,OAAKP,EAAL,yBACFQ,eAAgB,eAElBuD,6CAA8C,CAC5CxD,GAAI,GAAF,OAAKP,EAAL,gCACFQ,eAAgB,oBAElBwD,4CAA6C,CAC3CzD,GAAI,GAAF,OAAKP,EAAL,+BACFQ,eACE,0EAEJyD,kDAAmD,CACjD1D,GAAI,GAAF,OAAKP,EAAL,qCACFQ,eACE,iEAGJ0D,mBAAoB,CAClB3D,GAAI,GAAF,OAAKN,EAAL,UACFO,eAAgB,gBAElB2D,yBAA0B,CACxB5D,GAAI,GAAF,OAAKN,EAAL,gBACFO,eACE,sEAEJ4D,2BAA4B,CAC1B7D,GAAI,GAAF,OAAKN,EAAL,kBACFO,eAAgB,UAElB6D,iCAAkC,CAChC9D,GAAI,GAAF,OAAKN,EAAL,wBACFO,eAAgB,oCAGlB8D,+BAAgC,CAC9B/D,GAAI,GAAF,OAAKL,EAAL,cACFM,eAAgB,YAElB+D,mCAAoC,CAClChE,GAAI,GAAF,OAAKL,EAAL,kBACFM,eAAgB,cAElBgE,yCAA0C,CACxCjE,GAAI,GAAF,OAAKL,EAAL,wBACFM,eAAgB,+CAElBiE,0CAA2C,CACzClE,GAAI,GAAF,OAAKL,EAAL,wBACFM,eAAgB,0BAGlBkE,2BAA4B,CAC1BnE,GAAI,GAAF,OAAKJ,EAAL,iBACFK,eAAgB,sBAElBmE,+BAAgC,CAC9BpE,GAAI,GAAF,OAAKJ,EAAL,qBACFK,eAAgB,yBAElBoE,+BAAgC,CAC9BrE,GAAI,GAAF,OAAKJ,EAAL,qBACFK,eAAgB,uBAElBqE,mCAAoC,CAClCtE,GAAI,GAAF,OAAKJ,EAAL,yBACFK,eAAgB,UAElBsE,8BAA+B,CAC7BvE,GAAI,GAAF,OAAKJ,EAAL,oBACFK,eAAgB,iBAElBuE,qCAAsC,CACpCxE,GAAI,GAAF,OAAKJ,EAAL,2BACFK,eAAgB,6BAElBwE,2CAA4C,CAC1CzE,GAAI,GAAF,OAAKJ,EAAL,iCACFK,eAAgB,gCAElByE,2CAA4C,CAC1C1E,GAAI,GAAF,OAAKJ,EAAL,iCACFK,eACE,4HAEJ0E,uCAAwC,CACtC3E,GAAI,GAAF,OAAKJ,EAAL,4BACFK,eAAgB,gCAElB2E,8CAA+C,CAC7C5E,GAAI,GAAF,OAAKJ,EAAL,mCACFK,eAAgB,6CAElB4E,oDAAqD,CACnD7E,GAAI,GAAF,OAAKJ,EAAL,yCACFK,eAAgB,gDAElB6E,2DAA4D,CAC1D9E,GAAI,GAAF,OAAKJ,EAAL,8CACFK,eAAgB,kCAElB8E,4CAA6C,CAC3C/E,GAAI,GAAF,OAAKJ,EAAL,iCACFK,eAAgB,uCAElB+E,oCAAqC,CACnChF,GAAI,GAAF,OAAKJ,EAAL,yBACFK,eAAgB,mBAElBgF,kCAAmC,CACjCjF,GAAI,GAAF,OAAKJ,EAAL,wBACFK,eAAgB,iBAGlBiF,gCAAiC,CAC/BlF,GAAI,GAAF,OAAKH,EAAL,0BACFI,eAAgB,WAElBkF,+BAAgC,CAC9BnF,GAAI,GAAF,OAAKH,EAAL,8BACFI,eAAgB,YAElBmF,2CAA4C,CAC1CpF,GAAI,GAAF,OAAKH,EAAL,qCACFI,eAAgB,cAElBoF,wCAAyC,CACvCrF,GAAI,GAAF,OAAKH,EAAL,mCACFI,eAAgB,WAElBqF,sCAAuC,CACrCtF,GAAI,GAAF,OAAKH,EAAL,iCACFI,eAAgB,eAElBsF,sCAAuC,CACrCvF,GAAI,GAAF,OAAKH,EAAL,iCACFI,eAAgB,eAElBuF,qCAAsC,CACpCxF,GAAI,GAAF,OAAKH,EAAL,gCACFI,eAAgB,QAElBwF,wCAAyC,CACvCzF,GAAI,GAAF,OAAKH,EAAL,mCACFI,eAAgB,WAElByF,mDAAoD,CAClD1F,GAAI,GAAF,OAAKH,EAAL,6CACFI,eAAgB,iBAElB0F,mDAAoD,CAClD3F,GAAI,GAAF,OAAKH,EAAL,6CACFI,eAAgB,aAElB2F,2CAA4C,CAC1C5F,GAAI,GAAF,OAAKH,EAAL,sCACFI,eAAgB,2BAElB4F,kCAAmC,CACjC7F,GAAI,GAAF,OAAKH,EAAL,gCACFI,eAAgB,gBAElB6F,+CAAgD,CAC9C9F,GAAI,GAAF,OAAKH,EAAL,wCACFI,eAAgB,SAElB8F,4CAA6C,CAC3C/F,GAAI,GAAF,OAAKH,EAAL,qCACFI,eAAgB,YAElB+F,gDAAiD,CAC/ChG,GAAI,GAAF,OAAKH,EAAL,yCACFI,eAAgB,OAElBgG,yCAA0C,CACxCjG,GAAI,GAAF,OAAKH,EAAL,mCACFI,eAAgB,QAElBiG,uCAAwC,CACtClG,GAAI,GAAF,OAAKH,EAAL,iCACFI,eAAgB,MAElBkG,6CAA8C,CAC5CnG,GAAI,GAAF,OAAKH,EAAL,uCACFI,eAAgB,YAElBmG,iCAAkC,CAChCpG,GAAI,GAAF,OAAKH,EAAL,0BACFI,eAAgB,QAElBoG,6CAA8C,CAC5CrG,GAAI,GAAF,OAAKH,EAAL,sCACFI,eAAgB,SAElBqG,mDAAoD,CAClDtG,GAAI,GAAF,OAAKH,EAAL,4CACFI,eAAgB,mBAElBsG,iDAAkD,CAChDvG,GAAI,GAAF,OAAKH,EAAL,0CACFI,eAAgB,aAElBuG,uDAAwD,CACtDxG,GAAI,GAAF,OAAKH,EAAL,gDACFI,eAAgB,+BAElBwG,uDAAwD,CACtDzG,GAAI,GAAF,OAAKH,EAAL,+CACFI,eAAgB,mBAElByG,6DAA8D,CAC5D1G,GAAI,GAAF,OAAKH,EAAL,qDACFI,eAAgB,uBAElB0G,+CAAgD,CAC9C3G,GAAI,GAAF,OAAKH,EAAL,wCACFI,eAAgB,WAElB2G,qDAAsD,CACpD5G,GAAI,GAAF,OAAKH,EAAL,8CACFI,eAAgB,oBAElB4G,8CAA+C,CAC7C7G,GAAI,GAAF,OAAKH,EAAL,uCACFI,eAAgB,UAElB6G,4CAA6C,CAC3C9G,GAAI,GAAF,OAAKH,EAAL,qCACFI,eAAgB,QAElB8G,0CAA2C,CACzC/G,GAAI,GAAF,OAAKH,EAAL,mCACFI,eAAgB,MAElB+G,sDAAuD,CACrDhH,GAAI,GAAF,OAAKH,EAAL,8CACFI,eAAgB,mBAElBgH,gDAAiD,CAC/CjH,GAAI,GAAF,OAAKH,EAAL,yCACFI,eAAgB,yBAElBiH,oDAAqD,CACnDlH,GAAI,GAAF,OAAKH,EAAL,6CACFI,eAAgB,oCAElBkH,mDAAoD,CAClDnH,GAAI,GAAF,OAAKH,EAAL,4CACFI,eAAgB,6BAElBmH,iDAAkD,CAChDpH,GAAI,GAAF,OAAKH,EAAL,0CACFI,eAAgB,mCAElBoH,gDAAiD,CAC/CrH,GAAI,GAAF,OAAKH,EAAL,yCACFI,eAAgB,kCAElBqH,mDAAoD,CAClDtH,GAAI,GAAF,OAAKH,EAAL,4CACFI,eAAgB,0CAElBsH,yCAA0C,CACxCvH,GAAI,GAAF,OAAKH,EAAL,kCACFI,eAAgB,iBAElBuH,8CAA+C,CAC7CxH,GAAI,GAAF,OAAKH,EAAL,uCACFI,eAAgB,oBAElBwH,oCAAqC,CACnCzH,GAAI,GAAF,OAAKH,EAAL,6BACFI,eAAgB,WAElByH,8CAA+C,CAC7C1H,GAAI,GAAF,OAAKH,EAAL,uCACFI,eAAgB,8DCteL,GACb7P,UArCgB,CAChB,CACEmK,MAAOuC,YAAW6K,EAAIjH,8BACtB5V,MAAO,MAET,CACEyP,MAAOuC,YAAW6K,EAAIhH,6BACtB7V,MAAO,OA+BT+E,SA1Be,CACf,CACE0K,MAAOuC,YAAW6K,EAAI/G,uCACtB9V,MAAOzE,OAAO0Q,KAAK6Q,GAAY,IAEjC,CACErN,MAAOuC,YAAW6K,EAAI9G,uCACtB/V,MAAOzE,OAAO0Q,KAAK6Q,GAAY,KAoBjCC,sBAf4B,CAC5B,CACEtN,MAAOuC,YAAW6K,EAAIxC,gCACtBra,MAAO,KAET,CACEyP,MAAOuC,YAAW6K,EAAI9B,mCACtB/a,MAAO,OCrCI,GACbgd,WAAY,GAAF,OAJW,0CAIX,eACVC,iBAAkB,GAAF,OAJG,qCAIH,kCCXlB,iM,wECAA,oUAyBMC,EAAuB,WAAsC,IAArCpN,EAAqC,uDAA1B,GAAIqN,EAAsB,uDAAP,GACpD9Q,EAAO+Q,EAAatN,EAAUqN,GACpC,GAAI9Q,EAAM,CACR,IAAMgR,EACJhR,EAAKiR,gBAAgBC,QAAQlR,EAAKiR,gBAAgBE,UAAU,IAAIC,SAElE,OAAOpR,EAAKC,MAAMoR,WAAWL,GAE/B,MAAO,IAWHD,EAAe,WAIhB,IAECO,EALJ7N,EAGG,uDAHQ,GACXqN,EAEG,uDAFY,GACfS,EACG,uDADQ,aAEH9K,EAAiBqK,EAAjBrK,KAAME,EAAWmK,EAAXnK,OAEd,IAEE,OADA2K,EAAW,IAAIE,IAAiB/N,EAAUgD,EAAM,EAAG,GAAG,EAAME,GACrD,IAAI8K,IAAKH,GAChB,MAAOzf,GAEP,OADA0f,EAAS1f,GACF,OAUL6f,EAAgB,SAAA1R,GACpB,GAAIA,EAAM,CACR,IAAM2R,EAAU3R,EAAKiR,gBAAgBE,UAAU,GAC/C,OAAOnR,EAAK4R,IAAIC,WAAWF,GAASG,KAAK,SAAAC,GAAO,MAAK,CACnDJ,UACAI,QAASC,OAAOhS,EAAKC,MAAMgS,QAAQF,OAGvC,OAAO,MAWHG,EAAiB,SAACzO,EAAUqN,GAAsC,IAAxBS,EAAwB,uDAAb,aACnDvR,EAAO+Q,EAAatN,EAAUqN,EAAcS,GAClD,OAAOG,EAAc1R,GAAM8R,KAAK,SAAAK,GAAU,MAAK,CAC7CnS,OACAmS,iBAuCEC,EAAY,SAACpS,EAAMqS,GAAiB,IAChCC,EAAsDD,EAAtDC,OAAQC,EAA8CF,EAA9CE,gBAAiBC,EAA6BH,EAA7BG,SAAUC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,GAAIrgB,EAASggB,EAAThgB,KAE/CsgB,EAAW,IAAI3S,EAAK4R,IAAIgB,SAC5BvV,IAAShL,EAAMuS,IAAKmC,WAAWE,OAAS4L,EAAQC,EAChDP,GAEIQ,EAAY/S,EAAKC,MACpB+S,KAAKV,GACLW,IAAIjT,EAAKC,MAAM+S,KAAX,SAAgB,GAAMR,KAC1BU,WAEH,OAAI7V,IAAShL,EAAMuS,IAAKmC,WAAWE,OAC1B0L,EAASQ,QACbC,YAAYL,GACZ1jB,KAAK,CAAEojB,OAAMC,OACbZ,KAAK,SAAAuB,GAAQ,OACZV,EAASQ,QACNG,SAASZ,EAAIK,GACbQ,KAAK,CAAEd,OAAMY,SAAU,cACvBG,GAAG,kBAAmB,SAAAC,GACrBC,EAAW,CACTC,SAAU,IACVpiB,QAAS,IACTwH,OAAQ,WACN,OAAOiH,EAAK4R,IAAIgC,sBAAsBH,QAI3CI,MAAM,SAAAC,GACLtf,QAAQuf,IAAI,cAAeD,OAzCd,SAAC9T,EAAMgU,GAC9B,OAAOhU,EAAK4R,IAAIqC,YAAYD,GA6CnBE,CAAiBlU,EAAM,CAAEyS,OAAMC,KAAI/e,MAAOof,IAAajB,KAC5D,SAAAuB,GAAQ,OACNV,EAASQ,QACNG,SAASZ,EAAIK,GACbQ,KAAK,CACJd,OACAC,GAAIH,EACJc,SAAU,YACVc,IAAK,MAENX,GAAG,kBAAmB,SAAAC,GACrBC,EAAW,CACTC,SAAU,IACVpiB,QAAS,IACTwH,OAAQ,WACN,OAAOiH,EAAK4R,IAAIgC,sBAAsBH,QAI3CI,MAAM,SAAAC,GACLtf,QAAQuf,IAAI,cAAeD,QAajCM,EAAY,SAACpU,EAAMqU,GAAoB,IACnC/B,EAA+B+B,EAA/B/B,OAAQE,EAAuB6B,EAAvB7B,SAAUC,EAAa4B,EAAb5B,KAAMC,EAAO2B,EAAP3B,GAE1BK,EAAY/S,EAAKC,MACpB+S,KAAKV,GACLW,IAAIjT,EAAKC,MAAM+S,KAAX,SAAgB,GAAMR,KAC1BU,WACH,OAAOlT,EAAK4R,IAAI0C,gBAAgB,CAC9B7B,OACAC,KACA/e,MAAOof,EACPM,SAAU,YACVc,IAAK,OAUHT,EAAa,SAAC,GAA2D,EAAzDC,SAAyD,EAAxCpiB,QAAwC,IAG7DgjB,EAAItR,EAHyD,IAAxBlK,OACjDyb,EAAa,EASjB,OAPgBD,EAQd,IARkBtR,QAHyD,MAAf,aAAe,KAYlE6O,KAAK,SAAA2C,GACP5Z,IAAS4Z,IACZC,cAAcF,KAVlB,IAAIzjB,QAAQ,SAAAyC,GACVghB,EAAaG,YAAY1R,EAAMsR,GAHtB,SAAAA,GAAE,OAAI,IAAIxjB,QAAQ,SAAAyC,GAAC,OAAIZ,WAAWY,EAAG+gB,KAI9CK,CAAKL,GAAIzC,KAAKte,MAWhBse,KARA,IAAI/gB,QAAQ,SAAAyC,GAAC,OAAIA,EAAEZ,WAAW,kBAAM8hB,cAAcF,KAAc,SAiB9DvC,EAAU,SAAAK,GAEd,OADa,IAAIb,KACLxR,MAAMgS,QAAQK,K,sCCtP5B,SAASuC,EAAoBC,GAC5B,IAAInkB,EAAI,IAAImB,MAAM,uBAAyBgjB,EAAM,KAEjD,MADAnkB,EAAEokB,KAAO,mBACHpkB,EAEPkkB,EAAoBjV,KAAO,WAAa,MAAO,IAC/CiV,EAAoB7jB,QAAU6jB,EAC9BpkB,EAAOD,QAAUqkB,EACjBA,EAAoBhM,GAAK,K,6pECWzB,IAAMmM,EAAcC,wBAAc,CAChCjV,KAAM,GACNkV,WAAY,GACZC,gBAAiB,eA0GJC,E,YApGb,WAAY/Z,GAAO,wBACjB,wBAAMA,KAEDvC,MAAQ,CACXkH,KAAM,GACNqV,OAAQzQ,IAAKsC,cAAcC,QAC3BtV,MAAO,KACPyjB,UAAW,IAIb,EAAKC,sBAAwB,EAAKA,sBAAsBrhB,KAA3B,MAC7B,EAAKshB,cAAgB,EAAKA,cAActhB,KAAnB,MAZJ,E,WADMsH,gB,+CAoBvB,IAAMmD,EAAWC,cACjB,GAAID,EAAU,KACJ8W,EAA8B9W,EAA9B8W,eAAgBH,EAAc3W,EAAd2W,UAClBI,EAAU3E,YAAa0E,EAAgBH,GAE7C7Z,KAAK+Z,cAAcE,OACd,CACL,IAAMC,EAAgBpd,IAAKG,SAASQ,KAClC,SAAAC,GAAG,OAAIA,EAAIxF,QAAUuL,gBAElBrE,IAAS8a,GAGZla,KAAK8Z,sBAAsBrmB,OAAO0Q,KAAK6Q,KAAY,IAFnDhV,KAAK8Z,sBAAsBI,EAAchiB,U,4CAoBzBiiB,GAAQ,WAC5Bna,KAAKoa,SACH,CACEP,UAAWhd,IAAKmY,IAAYmF,EAAQ,KAEtC,WACE3W,YAAW2W,GACX,IAAMF,EAAU,IAAIjE,IAClBA,IAAKqE,eAAiB,EAAKhd,MAAMwc,UAAU7O,KAC3C,KACA,IAEF,EAAK+O,cAAcE,O,oCAKX1V,GAAM,WAClBvE,KAAKoa,SAAS,CAAE7V,KAAM,IAAIyR,IAAKzR,IAAS,kBACtC,EAAKlH,MAAMkH,KAAK4R,IAAImE,IACjBC,cACAlE,KAAK,kBACJ,EAAK+D,SAAS,CACZR,OAAQzQ,IAAKsC,cAAcE,gBAG9ByM,MAAM,kBAAM,EAAKgC,SAAS,CAAER,OAAQzQ,IAAKsC,cAAcG,e,+BAIrD,IACC3C,EAAajJ,KAAKJ,MAAlBqJ,SADD,EAE6BjJ,KAAK3C,MAAjCkH,EAFD,EAECA,KAAMqV,EAFP,EAEOA,OAAQC,EAFf,EAEeA,UAEtB,OACE,kBAACN,EAAYiB,SAAb,CACEtiB,MAAO,CACLqM,OACAkV,WAAYG,EACZC,YACAH,gBAAiB1Z,KAAK8Z,sBACtBW,WAAYza,KAAK+Z,gBAGlB9Q,O,KAUIyR,EAAW,SAAAhb,GAAoB,IACpCib,EADoC,wFACf5a,gBADe,oCAE/B,WACP,OACE,kBAACwZ,EAAYqB,SAAb,KACG,gBAAGrW,EAAH,EAAGA,KAAMsV,EAAT,EAASA,UAAWH,EAApB,EAAoBA,gBAAiBe,EAArC,EAAqCA,WAArC,OACC,kBAAC/a,EAAD,KACM,EAAKE,MADX,CAEE2E,KAAMA,EACNsV,UAAWA,EACXH,gBAAiBA,EACjBe,WAAYA,WAXkB,KAuB1C,OAJI/a,EAAiB0F,eACnBuV,EAAavV,aAAb,KAAiC1F,EAAiB0F,eAG7CjF,IAAqBwa,EAAcjb,ICzJ7B,oBAAM,6CCAN,oBAAM,uDCFrB,iI,oBCAA,IAAImb,EAAU,EAAQ,KAEC,iBAAZA,IACTA,EAAU,CAAC,CAAC7lB,EAAO1B,EAAIunB,EAAS,MAGlC,IAAIC,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,EAAQ,IAAR,CAAwFD,EAASC,GAE1GD,EAAQE,SACV/lB,EAAOD,QAAU8lB,EAAQE,S,qBCd3BhmB,EAAUC,EAAOD,QAAU,EAAQ,IAAR,EAAgE,IAEnFzB,EAAE,EAAQ,KAAwE,IAE1FyB,EAAQjB,KAAK,CAACkB,EAAO1B,EAAI,kzIAAmzI,M,oBCJ50IyB,EAAUC,EAAOD,QAAU,EAAQ,IAAR,EAAmE,GAE9F,IAAIimB,EAAS,EAAQ,KACjBC,EAA2BD,EAAO,EAAQ,MAC1CE,EAA2BF,EAAO,EAAQ,KAAmC,UAC7EG,EAA2BH,EAAO,EAAQ,MAC1CI,EAA2BJ,EAAO,EAAQ,MAC1CK,EAA2BL,EAAO,EAAQ,KAAmC,eAEjFjmB,EAAQjB,KAAK,CAACkB,EAAO1B,EAAI,+DAAiE2nB,EAA2B,qBAAuBC,EAA2B,6CAA+CC,EAA2B,oCAAsCC,EAA2B,gCAAkCC,EAA2B,6pDAAgsD,M,oBCT/iErmB,EAAOD,QAAU,IAA0B,wC,oBCA3CC,EAAOD,QAAU,IAA0B,yC,oBCA3CC,EAAOD,QAAU,IAA0B,wC,ipBCW3C,IAAMumB,EAAgBjiB,IAAOS,IAAV,IACN,qBAAGiD,QAAyB,QAAU,S,mzBCQ7Cwe,E,8ZAAsBtW,oB,uCACjB,IACClI,EAAYiD,KAAKJ,MAAjB7C,QACR,OACE,kBAACue,EAAD,CAAeve,QAASA,GACtB,kBAACye,EAAA,EAAD,CAASC,MAAM,oB,gCAQvBF,EAActU,UAAY,CAExBlK,QAASmK,IAAUtJ,MAGrB2d,EAAcnW,aAAe,CAC3BrI,SAAS,GAKX,IAOesI,EAHKC,YAJI,kBACtBC,YAAyB,CACvBxI,QAASyI,OAKEH,CAAYkW,G,s6BCpCrBG,E,8ZAAuBzW,oB,uCAClB,IACC6E,EAAkB9J,KAAKJ,MAAvBkK,cACR,OACE,yBAAKhE,UAAU,+BACb,yBAAKA,UAAU,2BACb,yBACE7P,IAAK0lB,IACLC,IAAK9R,EACHiL,IAAIrG,sDAIV,6BACG5E,EAAciL,IAAIpG,qD,gCAS7B+M,EAAezU,UAAY,CAEzB6C,cAAe5C,IAAUM,MAG3BkU,EAAetW,aAAe,CAC5B0E,cAAe,cAIF4R,Q,m0BC1BTG,G,YACJ,WAAYjc,GAAO,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDAEDkc,sBAAwB,EAAKA,sBAAsBrjB,KAA3B,OAC7B,EAAKsjB,oBAAsB,EAAKA,oBAAoBtjB,KAAzB,OAC3B,EAAKujB,wBAA0B,EAAKA,wBAAwBvjB,KAA7B,OALd,E,uPADWwM,oB,sDAY5B,OAAOgX,EAFkBjc,KAAKJ,MAAtBqc,cACmB9Y,eAAnB6W,kB,4CAIY,MACkB7W,eAA9B6W,EADY,EACZA,eAAgBH,EADJ,EACIA,UACxB,OAAI7Z,KAAK8b,wBACP,YAAY9B,EAAekC,QAAQ,KAAM,KAEpC9G,aAAqB4E,EAAgBH,K,gDAK5C,OAD2B1W,eAAnB6W,gBACiB,K,+BAGlB,MAC2Cha,KAAKJ,MAA/CkK,EADD,EACCA,cAAeqS,EADhB,EACgBA,UAAW/e,EAD3B,EAC2BA,YAC5Bgf,EAAYvf,IAAKO,EAAa,WAC9Bif,EAAiBrc,KAAK8b,wBAE5B,OACE,yBAAKhW,UAAU,gCACb,kBAACwW,EAAA,EAAD,CAAKC,MAAI,EAACzW,UAAU,QAClB,kBAAC0W,EAAA,EAAD,MACIH,GACA,kBAACI,EAAA,EAAD,CACEC,OAAQN,IAAcjgB,KAAyBC,gBAC/C2K,QAAS,kBACPoV,EAAUhgB,KAAyBC,mBAGpC0N,EACCiL,IAAInG,uDAKZ,kBAAC4N,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,OAAQN,IAAcjgB,KAAyBE,YAC/C0K,QAAS,kBAAMoV,EAAUhgB,KAAyBE,eAEjDyN,EACCiL,IAAIlG,oDAKZ,kBAAC8N,EAAA,EAAD,CAAYP,UAAWA,IACnBC,GACA,kBAACO,EAAA,EAAD,CAASC,MAAO1gB,KAAyBC,iBACvC,kBAACyL,GAAA,EAAD,CAAaG,SAAUhI,KAAKgc,6BAGhC,kBAACY,EAAA,EAAD,CACEC,MAAO1gB,KAAyBE,YAChCyJ,UAAU,oBAEV,kBAAC,KAAD,CAAWA,UAAU,QACnB,kBAAC,KAAD,CAAQ5N,MAAO8H,KAAK+b,yBAEtB,yBAAKjW,UAAU,cACb,kBAAC,KAAD,KAAW9F,KAAK+b,wBAElB,yBAAKjW,UAAU,QACZgE,EACCiL,IAAIjG,+D,kCAYpB+M,GAAkB5U,UAAY,CAE5B6C,cAAe5C,IAAUM,KAEzByU,aAAc/U,IAAUM,KAExB2U,UAAWjV,IAAUM,KAErBpK,YAAa8J,IAAUvO,QAGzBkjB,GAAkBzW,aAAe,CAC/B0E,cAAe,aACfmS,aAAc,aACdE,UAAW,aACX/e,YAAa,IAIAye,U,2uBCvHf,IAAMiB,GAAoBzjB,YAAOsM,KAAPtM,CAAH,M,g8BCkBjB0jB,G,YACJ,WAAYnd,GAAO,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDAEDod,iBAAmB,EAAKA,iBAAiBvkB,KAAtB,OACxB,EAAKwkB,gBAAkB,EAAKA,gBAAgBxkB,KAArB,OACvB,EAAKykB,iBAAmB,EAAKA,iBAAiBzkB,KAAtB,OALP,E,uPADKwM,oB,kDAWtBkY,EAD0Bnd,KAAKJ,MAAvBud,gBACM,K,wCAGE,MAKZnd,KAAKJ,MAHCkK,EAFM,EAEdC,KAAQD,cACRsT,EAHc,EAGdA,mBACAhgB,EAJc,EAIdA,YAGF,OAAIP,IAAKO,EAAa,WAAapB,KAAmBC,QAC7C,CACLqL,UAAW,CACTK,MAAOmC,EAAciL,IAAI5H,oBACzB7P,OAAQ0C,KAAKgd,kBAEf3V,QAAS,CACP5N,WAAW,EACXkO,MAAOmC,EAAciL,IAAIzH,oBACzBhQ,OAAQ,kBAAM8f,EAAmBphB,KAAmBE,YAG/CW,IAAKO,EAAa,WAAapB,KAAmBE,QACpD,CACLoL,UAAW,CACTK,MAAOmC,EAAciL,IAAI5H,oBACzB7P,OAAQ0C,KAAKgd,kBAEf3V,QAAS,CACP5N,WAAW,EACXkO,MAAOmC,EAAciL,IAAIxH,2BARxB,I,yCAgBU,MAMbvN,KAAKJ,MAJCkK,EAFO,EAEfC,KAAQD,cACRuT,EAHe,EAGfA,wBACAjgB,EAJe,EAIfA,YACAmH,EALe,EAKfA,KAEF,OAAI1H,IAAKO,EAAa,WAAapB,KAAmBC,QAC7C,CACL8J,QAASuX,EACTrX,gBAAiB,CACf6D,kBAGKjN,IAAKO,EAAa,WAAapB,KAAmBE,QACpD,CACL6J,QAASwX,GACTtX,gBAAiB,CACf6D,gBACAmS,aAAc1X,EAAKC,MAAMF,MACzB6X,UAAWkB,EACXjgB,gBAKC,K,+BAGA,MAIH4C,KAAKJ,MAFCkK,EAFH,EAELC,KAAQD,cACR1M,EAHK,EAGLA,YAEF,OACE,kBAAC0f,GAAD,MACM9c,KAAKkd,mBADX,CAEE5jB,OAAQ0G,KAAKid,kBACb1gB,OAAQM,IAAKO,EAAa,UAAU,GACpCiJ,MAAOyD,EAAciL,IAAItG,+C,kCAQjCsO,GAAY9V,UAAY,CAEtB8C,KAAM7C,IAAUvO,OAEhBwkB,cAAejW,IAAUM,KAEzB6V,wBAAyBnW,IAAUM,KAEnC4V,mBAAoBlW,IAAUM,KAE9BpK,YAAa8J,IAAUvO,OAEvB4L,KAAM2C,IAAUvO,QAGlBokB,GAAY3X,aAAe,CACzB2E,KAAM,GACNoT,cAAe,aACfE,wBAAyB,aACzBD,mBAAoB,aACpBhgB,YAAa,GACbmH,KAAM,IAKR,IAUMc,GAAcC,YAVI,kBACtBC,YAAyB,CACvBnI,YAAa0N,OAEU,SAAAtM,GAAQ,MAAK,CACtC2e,cAAe,SAAAvf,GAAI,OAAIY,EAAS6L,aAAkBzM,KAClDyf,wBAAyB,SAAA5gB,GAAO,OAC9B+B,EAAS8L,aAA4B7N,KACvC2gB,mBAAoB,SAAA5gB,GAAK,OAAIgC,EAAS+L,aAAuB/N,QAQhDmN,eACbL,KACAjE,GACAqV,KAHa/Q,CAIboT,I,uxBCrKF,IAAMS,GAAankB,YAAOojB,IAAPpjB,CAAH,MAKVokB,GAAuBpkB,YAAOqkB,KAAPrkB,CAAH,MAKpBskB,GAAetkB,YAAOukB,KAAPvkB,CAAH,M,owBC0BZwkB,G,YACJ,WAAYje,GAAO,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDAEDke,mBAAqB,EAAKA,mBAAmBrlB,KAAxB,OAC1B,EAAKslB,oBAAsB,EAAKA,oBAAoBtlB,KAAzB,OAC3B,EAAKulB,aAAe,EAAKA,aAAavlB,KAAlB,OACpB,EAAKwlB,yBAA2B,EAAKA,yBAAyBxlB,KAA9B,OAChC,EAAKylB,uBAAyB,EAAKA,uBAAuBzlB,KAA5B,OAC9B,EAAK0lB,sBAAwB,EAAKA,sBAAsB1lB,KAA3B,OARZ,E,uPADOwM,oB,kDAYN,MACqBjF,KAAKJ,MAApC6J,EADU,EACVA,aAAc2U,EADJ,EACIA,aAChBlE,EAAgBpd,IAAKG,SAASQ,KAAK,SAAAC,GAAG,OAAIA,EAAIxF,QAAUuL,iBACxD4a,EAAe9a,eAEhBnE,IAAS8a,IACZkE,EAAalE,GAEV9a,IAASif,IACZ5U,EAAa4U,K,yCAIE/a,GAAQ,IACjBmG,EAAiBzJ,KAAKJ,MAAtB6J,aACRpG,aAAUC,GACVmG,EAAanG,K,0CAGKgb,GAAY,MACYte,KAAKJ,MAAvCwe,EADsB,EACtBA,aAAc1E,EADQ,EACRA,gBACtB0E,EAAaE,GACb5E,EAAgB4E,EAAWpmB,OAC3B8H,KAAKge,iB,qCAGQ,WACLO,EAAoBve,KAAKJ,MAAzB2e,gBAERjpB,QAAQgC,IAAI,CAACinB,IAAmBnb,eAAkBS,iBAAiBwS,KACjE,kBAAM,EAAK4H,+B,iDAKOje,KAAKJ,MAAjBxB,QACAtK,KAAK0qB,IAAM1S,S,8CAGG,aAIlB9L,KAAKJ,MAFCkK,EAFY,EAEpBC,KAAQD,cACRlN,EAHoB,EAGpBA,SAGF,OACE,kBAAC,WAAD,KACE,kBAAC0f,EAAA,EAAD,CAAKxW,UAAU,UAAU2Y,QAAM,GAC7B,kBAACjC,EAAA,EAAD,KACE,kBAACgB,GAAD,KACG1T,EAAciL,IAAI5G,8BAGvB,kBAACqO,EAAA,EAAD,KACE,kBAACgB,GAAD,KACG1T,EAAciL,IAAI3G,6BAGvB,kBAACsQ,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACnB,GAAD,CAAsBkB,KAAG,EAACE,OAAK,IAC3B/hB,IAAKU,UAAUC,KAAK,SAAAC,GAAG,OAAIA,EAAIxF,QAAU0E,KAAa,IAAI+K,OAE9D,kBAACmX,EAAA,EAAD,CAAcC,OAAK,GAChBjiB,IAAKU,UAAUiL,IAAI,SAAC/K,EAAKshB,GAAN,OAClB,kBAACC,EAAA,EAAD,CACEzmB,IAAG,mBAAcwmB,EAAS,GAC1BjY,QAAS,kBAAM,EAAK+W,mBAAmBpgB,EAAIxF,SAE1CwF,EAAIiK,e,+CAUI,aAKnB3H,KAAKJ,MAHCkK,EAFa,EAErBC,KAAQD,cACR9M,EAHqB,EAGrBA,QACAkiB,EAJqB,EAIrBA,oBAGF,OACE,kBAAC,WAAD,KACE,kBAAC5C,EAAA,EAAD,CAAKxW,UAAU,UAAU2Y,QAAM,GAC7B,kBAACC,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACnB,GAAD,CAAsBkB,KAAG,EAACE,OAAK,GAC5BhiB,IAAKG,EAAS,eAEjB,kBAAC8hB,EAAA,EAAD,CAAcC,OAAK,GAChBjiB,IAAKG,SAASwL,IAAI,SAAC/K,EAAKshB,GAAN,OACjB,kBAACC,EAAA,EAAD,CACEzmB,IAAG,kBAAawmB,EAAS,GACzBjY,QAAS,kBAAM,EAAKgX,oBAAoBrgB,KAEvCA,EAAIiK,WAKb,kBAAC+W,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACnB,GAAD,CAAsBkB,KAAG,EAACE,OAAK,GAC5B/U,EAAciL,IAAI1G,iCAErB,kBAACyQ,EAAA,EAAD,CAAcC,OAAK,IACfnb,gBACA,kBAACqb,EAAA,EAAD,CAAclY,QAAS,kBAAMmY,GAAoB,KAC9CpV,EACCiL,IAAIzG,oDAIV,kBAAC2Q,EAAA,EAAD,KACGnV,EAAciL,IAAIxG,6CAErB,kBAAC0Q,EAAA,EAAD,CAAcE,SAAO,IACrB,kBAACF,EAAA,EAAD,CAAclY,QAAS/G,KAAKge,cACzBlU,EACCiL,IAAIvG,sD,+BAUX,MAKHxO,KAAKJ,MAHCkK,EAFH,EAELC,KAAQD,cACRsV,EAHK,EAGLA,WACApiB,EAJK,EAILA,QAGF,OACE,kBAAC,WAAD,KACE,kBAAC2gB,GAAD,CAAc0B,OAAK,EAACC,OAAO,MACzB,kBAACC,EAAA,EAAD,CAAaxY,QAAS/G,KAAKie,0BACzB,kBAACuB,EAAA,EAAD,CACEvpB,IAAKwpB,KACL7D,IAAK9R,EAAciL,IAAI7G,2BAG3B,kBAACwR,EAAA,EAAD,CAAe3Y,QAAS/G,KAAK2f,sBAC7B,kBAACC,EAAA,EAAD,CAAUrjB,OAAQM,IAAKG,EAAS,cAAc,GAAQyhB,QAAM,GACzDW,GAAcpf,KAAKke,yBACnBle,KAAKme,0BAGV,kBAAC,GAAD,Y,kCAQRN,GAAc5W,UAAY,CAExBwC,aAAcvC,IAAUM,KAExBpJ,QAAS8I,IAAUvO,OAEnBoR,KAAM7C,IAAUvO,OAEhBymB,WAAYlY,IAAUtJ,KAEtBhB,SAAUsK,IAAUO,OAEpBzK,QAASkK,IAAUvO,OAEnB4lB,gBAAiBrX,IAAUM,KAE3B4W,aAAclX,IAAUM,KAExB0X,oBAAqBhY,IAAUM,KAE/BkS,gBAAiBxS,IAAUM,MAG7BqW,GAAczY,aAAe,CAC3Bya,cAAe,aACfzhB,QAAS,GACT2L,KAAM,GACNqV,YAAY,EACZxiB,SAAU,KACVI,QAAS,GACTuhB,gBAAiB,aACjBH,aAAc,aACdc,oBAAqB,aACrBxF,gBAAiB,cAKnB,IASMrU,GAAcC,YATI,kBACtBC,YAAyB,CACvBvI,QAAS4N,OAEc,SAAApM,GAAQ,MAAK,CACtC+f,gBAAiB,kBAAM/f,EAAS2L,iBAChCiU,aAAc,SAAAphB,GAAO,OAAIwB,EAASgF,aAAWxG,KAC7CkiB,oBAAqB,SAAAthB,GAAI,OAAIY,EAAS6L,aAAkBzM,QAQ3C+L,eACbtE,GACAya,IACApF,KACApR,KAJaK,CAKbkU,I,wPC7QF,IAAMkC,GAAa1mB,YAAOojB,IAAPpjB,CAAH,M,ozBCeV2M,G,YACJ,WAAYpG,GAAO,a,4FAAA,UACjB,0BAAMA,KAEDogB,eAAiB,CACpB,CACEla,UAAW,qBACXma,KAAM,8CAER,CACEna,UAAW,oBACXma,KAAM,oCAER,CACEna,UAAW,qBACXma,KAAM,0BAER,CACEna,UAAW,mBACXma,KAAM,iCAER,CACEna,UAAW,qBACXma,KAAM,8CAER,CACEna,UAAW,mBACXma,KAAM,wCA1BO,E,uPADAhb,oB,uCAgCV,IAEG6E,EACN9J,KAAKJ,MADPmK,KAAQD,cAEV,OACE,kBAACnD,GAAA,EAAD,CAAKb,UAAU,gCACb,kBAACc,GAAA,EAAD,CAAK+B,GAAI,GAAIG,GAAI,GACf,yBAAKhD,UAAU,kBACZgE,EAAciL,IAAIhG,sBAErB,kBAACpI,GAAA,EAAD,CAAKb,UAAU,eACb,kBAACwW,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACuD,GAAD,CAAYG,KAAK,KACdpW,EAAciL,IAAI/F,sBAGvB,kBAACwN,EAAA,EAAD,KACE,kBAACuD,GAAD,CAAYG,KAAK,KACdpW,EAAciL,IAAI9F,wBAGvB,kBAACuN,EAAA,EAAD,KACE,kBAACuD,GAAD,CAAYG,KAAK,KACdpW,EAAciL,IAAI7F,kCAGvB,kBAACsN,EAAA,EAAD,KACE,kBAACuD,GAAD,CAAYG,KAAK,KACdpW,EAAciL,IAAI5F,sCAM7B,kBAACvI,GAAA,EAAD,CAAK+B,GAAI,GAAIG,GAAI,GACf,kBAACwT,EAAA,EAAD,CAAKxW,UAAU,kBACZ9F,KAAKggB,eAAevX,IAAI,SAAC0X,EAAMC,GAAP,OACvB,kBAAC5D,EAAA,EAAD,CAAShkB,IAAG,wBAAmB4nB,EAAU,IACvC,kBAACL,GAAD,CAAYG,KAAK,cAAcppB,OAAO,UACpC,uBAAGgP,UAAWqa,EAAKra,wB,kCAarCE,GAAOiB,UAAY,CAEjB8C,KAAM7C,IAAUvO,QAGlBqN,GAAOZ,aAAe,CACpB2E,KAAM,IAIOT,oBAAStD,I,UCvGXqa,GAAcC,aAAS,kBAAM,gCAC7BC,GAAmBD,aAAS,kBAAM,sDAClCE,GAAeF,aAAS,kBAAM,sDAC9BG,GAAWH,aAAS,kBAAM,sD,6kDCZVrb,oB,uCAClB,MAC4BjF,KAAKJ,MAAhCwf,EADD,EACCA,WAAesB,EADhB,qBAGP,OAAQtB,EAGN,kBAAC,IAAUsB,GAFX,kBAAC,IAAD,CAAUC,QAAM,EAAC1J,GAAIuH,IAAM1S,a,4NCNjC,IAIe8U,GAJGvnB,YAAOqN,KAAPrN,CAAH,M,iwBC0BTwnB,G,YACJ,WAAYjhB,GAAO,M,IAAA,O,4FAAA,S,EACjB,U,EAAA,gBAAMA,K,gDAEDkhB,oBAAsB,EAAKA,oBAAoBroB,KAAzB,OAHV,E,uPADHwM,oB,kDAOI,MACoBjF,KAAKJ,MAAnCmhB,EADU,EACVA,cAAetG,EADL,EACKA,WACjBuG,EAAe7d,eACfQ,EAASC,eAEf,GAAIod,EAAc,KACRhH,EAA8BgH,EAA9BhH,eAAgBH,EAAcmH,EAAdnH,UACxBpD,aAAeuD,EAAgBH,GAAWxD,KAAK,YAA0B,IAAvB9R,EAAuB,EAAvBA,KAAMmS,EAAiB,EAAjBA,WACtD+D,EAAWlW,GACXwc,EAAcrK,UAEP/S,GACTod,EAAcpd,K,4CAII,IACZxG,EAAW6C,KAAKJ,MAAhBzC,OACR,OAAQiC,IAASjC,MAAagG,kBAAmBS,iB,+BAIjD,IAAMwb,EAAapf,KAAK8gB,sBAExB,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAACG,EAAD,MACA,kBAAC,GAAD,CAAe7B,WAAYA,IAC3B,yBAAKtZ,UAAU,yBACb,kBAAC,IAAD,CACEob,KAAM1C,IAAM1S,MACZqV,OAAQ,kBACN/B,EACE,kBAAC,IAAD,CAAUuB,QAAM,EAAC1J,GAAIuH,IAAMtS,YAE3B,kBAACmU,GAAD,SAIN,kBAAC,IAAD,CACEa,KAAM1C,IAAMxS,cACZmV,OAAQ,kBACN/B,EACE,kBAAC,IAAD,CAAUuB,QAAM,EAAC1J,GAAIuH,IAAMtS,YAE3B,kBAACqU,GAAD,SAIN,kBAAC,IAAD,CACEW,KAAM1C,IAAMvS,cACZkV,OAAQ,kBACN/B,EACE,kBAAC,IAAD,CAAUuB,QAAM,EAAC1J,GAAIuH,IAAMtS,YAE3B,kBAACsU,GAAD,SAIN,kBAAC,GAAD,CACEpB,WAAYA,EACZ8B,KAAM1C,IAAMtS,UACZkV,UAAWX,KAEb,kBAAC,IAAD,CACEE,QAAM,EACNO,KAAM1C,IAAM3S,QACZsV,OAAQ,kBAAM,kBAAC,IAAD,CAAUlK,GAAIuH,IAAM1S,YAGtC,kBAAC,GAAD,CAAQhG,UAAU,OAAOsZ,WAAYA,W,kCAgBzC/Z,GAAcC,YAPI,kBACtBC,YAAyB,CACvBpI,OAAQ0N,OAEe,SAAArM,GAAQ,MAAK,CACtCuiB,cAAe,SAAA5jB,GAAM,OAAIqB,EAAS4L,aAAYjN,QAQjCwM,eACb+Q,KACArV,GAFasE,CAGbkX,I,oeCpGFQ,KAAQC,IAAIC,KAAKC,MACjBC,aAAc,GAAD,UAAKC,MAAL,GAAmBC,QAGhC,ICnBevjB,GACPwjB,GACAC,GAMAC,GACAxjB,GDUFA,ICnBSF,GDmBcA,KClBrBwjB,GAAiBG,aAAqB,IACtCF,GAAc,CAClBG,KACAC,KACAL,GACAM,aAAiB9jB,KAEb0jB,GAAY,CAACK,IAAe,WAAf,EAAmBN,MAChCvjB,GAAQ8jB,YAAY7iB,oBAAiBrI,EAAWyS,IAAO,WAAP,EAAWmY,MAE3D5gB,QAAU0gB,GAAeS,IAC/B/jB,GAAMR,iBAAmB,GACzBQ,GAAM0C,cAAgB,GAEf1C,IDKSgkB,YAAahkB,IAG/BikB,IAASpB,OACP,kBAAC,IAAD,CAAU7iB,MAAOA,IAEf,kBAAC0X,GAAA,EAAD,KACE,kBAAC,KAAD,KACE,kBAAC,GAAD,SAKNrgB,SAAS6sB,eAAe","file":"tomowallet_bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".tomowallet_bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([808,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import styled from 'styled-components';\r\nconst BigButtonStyler = styled.button`\r\n  ${({ btnBlue }) =>\r\n    btnBlue\r\n      ? 'background-color:#5692cd;color:#ffffff;'\r\n      : 'background-color:#e4ae63;color:#ffffff'}\r\n  border: 0px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  height: 44px;\r\n  padding: 0 2em;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  transition: all 0.3s;\r\n  width: 100%;\r\n  &:hover {\r\n    ${({ btnBlue }) =>\r\n      btnBlue\r\n        ? 'background-color:#4076AC;color:#ffffff;'\r\n        : 'background-color:#C59148;color:#ffffff'}\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ButtonStyler = styled.button`\r\n  ${({ btnYellow, btnBlue }) => {\r\n    if (btnYellow) {\r\n      return 'background-color:#e4ae63;color:#444b64';\r\n    } else if (btnBlue) {\r\n      return 'background-color:#5692cd;color:#ffffff;';\r\n    }\r\n    return 'background-color:#2d344a;color:#9eaacc;';\r\n  }}\r\n  border: 0px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  height: 44px;\r\n  padding: 0 2em;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  transition: all 0.3s;\r\n  width: 100%;\r\n  &:hover {\r\n    ${({ btnYellow, btnBlue }) => {\r\n      if (btnYellow) {\r\n        return 'background-color:#C59148;color:#444b64';\r\n      } else if (btnBlue) {\r\n        return 'background-color:#4076AC;color:#ffffff;';\r\n      }\r\n      return 'background-color:#3D496E;color:#9eaacc;';\r\n    }}\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst ButtonLineStyler = styled.button`\r\n  background: transparent;\r\n  border: 1px solid #444b64;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  height: 44px;\r\n  padding: 0 2em;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  transition: all 0.3s;\r\n  width: 100%;\r\n  color: #9eaacc;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport { BigButtonStyler, ButtonStyler, ButtonLineStyler };\r\n","import styled from 'styled-components';\r\nimport {\r\n  FormText,\r\n} from 'reactstrap';\r\n// Style Component//\r\n\r\nconst FormTextStyled = styled(FormText)`\r\n  font-size: 14px;\r\n  color: #9eaacc !important;\r\n  line-height: 1.7;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport {\r\n  FormTextStyled,\r\n};\r\n","import styled from 'styled-components';\r\nimport {\r\n  Card,\r\n} from 'reactstrap';\r\n// Style Component//\r\n\r\nconst BoxBtnStyler = styled.div`\r\n  max-width: 370px;\r\n  text-align: center;\r\n`;\r\nconst ContainerMin = styled.div`\r\n  background-color: #272d40;\r\n  border-radius: 8px;\r\n  padding: 3em 2em;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n`;\r\nconst BoxCardStyled = styled(Card)`\r\n  padding: 0 3em;\r\n`;\r\nconst BoxImages = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst BoxFlexBetween = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1em;\r\n`;\r\n\r\nexport {\r\n  BoxBtnStyler,\r\n  ContainerMin,\r\n  BoxCardStyled,\r\n  BoxImages,\r\n  BoxFlexBetween,\r\n};\r\n","import styled from 'styled-components';\r\nimport {  } from 'reactstrap';\r\n// Style Component//\r\n\r\nconst ImporWalletStyler = styled.div`\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 2.5em 1.5em;\r\n  position: relative;\r\n  transition: 0.3s;\r\n  text-align: center;\r\n  ${({ isActive }) =>\r\n    isActive\r\n      ? 'background-color: #2d344a;border: solid 1px #2d344a;border-top: 5px solid #e4ae63;' : 'border: solid 1px #444b64;border-top: solid 5px #444b64;'\r\n  }\r\n  .card-img {\r\n    width: 40px;\r\n  }\r\n  .card-body {\r\n    .card-title {\r\n      margin-bottom: 0px;\r\n      font-size: 20px;\r\n      ${({ isActive }) => isActive && 'font-weight: bold;'}\r\n    }\r\n  }\r\n`;\r\nexport {\r\n  ImporWalletStyler,\r\n};\r\n\r\n","import styled from 'styled-components';\r\n// Style Component//\r\n\r\nconst WarningImages = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 3em 0 0;\r\n  img {\r\n    max-width: 150px;\r\n  }\r\n`;\r\nexport {\r\n  WarningImages,\r\n};\r\n","import styled from 'styled-components';\r\n// Style Component//\r\n\r\nconst HeadingBig = styled.h1`\r\n  color: #ffffff;\r\n  font-size: 50px;\r\n  font-weight: 600;\r\n  font-family: 'Bai Jamjuree', sans-serif;\r\n`;\r\nconst HeadingLarge = styled.h2`\r\n  color: #ffffff;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  font-family: 'Bai Jamjuree', sans-serif;\r\n`;\r\nconst HeadingMedium = styled.h3`\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n`;\r\nconst HeadingSmall = styled.h2`\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 15px;\r\n`;\r\nconst NoticeTextRed = styled.span`\r\n  color: #be445e;\r\n`;\r\nconst TextLinkBlue = styled.a`\r\n  color: #5692CD;\r\n`;\r\nconst TextBlue = styled.span`\r\n  color: #5692CD;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n  &:hover {\r\n    color: #0056b3;\r\n  }\r\n`;\r\nconst TextYellow = styled.span`\r\n  color: #e4ae63;\r\n`;\r\nconst TextLinkYellow = styled.a`\r\n  color: #e4ae63;\r\n  cursor: pointer;\r\n`;\r\nconst TextYellowPointer = styled.span`\r\n  color: #e4ae63;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n  &:hover {\r\n    color: #C59148;\r\n  }\r\n`;\r\nconst TextGray = styled.div`\r\n  color: #5e677f;\r\n`;\r\nconst BoxText = styled.div``;\r\nexport {\r\n  HeadingBig,\r\n  HeadingLarge,\r\n  HeadingMedium,\r\n  HeadingSmall,\r\n  NoticeTextRed,\r\n  TextLinkBlue,\r\n  TextBlue,\r\n  TextYellow,\r\n  TextLinkYellow,\r\n  TextYellowPointer,\r\n  BoxText,\r\n  TextGray,\r\n};\r\n","import {\r\n  BigButtonStyler,\r\n  ButtonStyler,\r\n  ButtonLineStyler\r\n} from './StyleButtons';\r\nimport {\r\n  FormTextStyled,\r\n} from './StyleForm';\r\nimport {\r\n  BoxBtnStyler,\r\n  ContainerMin,\r\n  BoxCardStyled,\r\n  BoxImages,\r\n  BoxFlexBetween,\r\n} from './MainContainer';\r\nimport {\r\n  ImporWalletStyler,\r\n} from './ImportWallet';\r\nimport {\r\n  WarningImages,\r\n} from './CreateNewWallet';\r\nimport {\r\n  HeadingBig,\r\n  HeadingLarge,\r\n  HeadingMedium,\r\n  HeadingSmall,\r\n  NoticeTextRed,\r\n  TextLinkBlue,\r\n  TextBlue,\r\n  TextYellow,\r\n  TextLinkYellow,\r\n  TextYellowPointer,\r\n  BoxText,\r\n  TextGray,\r\n} from './StyleTypo';\r\n\r\nexport {\r\n  //StyleButtons\r\n  BigButtonStyler,\r\n  ButtonStyler,\r\n  ButtonLineStyler,\r\n  //StyleForm\r\n  FormTextStyled,\r\n  //MainContainer\r\n  BoxBtnStyler,\r\n  ContainerMin,\r\n  BoxCardStyled,\r\n  BoxImages,\r\n  BoxFlexBetween,\r\n  //ImportWallet\r\n  ImporWalletStyler,\r\n  //CreateNewWallet\r\n  WarningImages,\r\n  //StyleTypo\r\n  HeadingBig,\r\n  HeadingLarge,\r\n  HeadingMedium,\r\n  HeadingSmall,\r\n  NoticeTextRed,\r\n  TextLinkBlue,\r\n  TextBlue,\r\n  TextYellow,\r\n  TextLinkYellow,\r\n  TextYellowPointer,\r\n  BoxText,\r\n  TextGray,\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Global Constants\r\n *\r\n */\r\n// Actions\r\nexport const RELEASE_WALLET_INFO = 'TOMO_WALLET/GLOBAL/RELEASE_WALLET_INFO';\r\nexport const RESET_WALLET_POPUP = 'TOMO_WALLET/GLOBAL/RESET_WALLET_POPUP';\r\nexport const SET_LANGUAGE = 'TOMO_WALLET/GLOBAL/SET_LANGUAGE';\r\nexport const SET_NETWORK = 'TOMO_WALLET/GLOBAL/SET_NETWORK';\r\nexport const STORE_WALLET_INFO = 'TOMO_WALLET/GLOBAL/STORE_WALLET_INFO';\r\nexport const TOGGLE_LOADING_SCREEN = 'TOMO_WALLET/GLOBAL/TOGGLE_LOADING_SCREEN';\r\nexport const TOGGLE_NETWORK_DROPDOWN =\r\n  'TOMO_WALLET/GLOBAL/TOGGLE_NETWORK_DROPDOWN';\r\nexport const TOGGLE_WALLET_POPUP = 'TOMO_WALLET/GLOBAL/TOGGLE_WALLET_POPUP';\r\nexport const UPDATE_WALLET_POPUP_CONTENT_TAB =\r\n  'TOMO_WALLET/GLOBAL/UPDATE_WALLET_POPUP_CONTENT_TAB';\r\nexport const UPDATE_WALLET_POPUP_STAGE =\r\n  'TOMO_WALLET/GLOBAL/UPDATE_WALLET_POPUP_STAGE';\r\n\r\n// Others\r\nexport const WALLET_POPUP_STAGE = {\r\n  WARNING: 1,\r\n  CONTENT: 2,\r\n};\r\nexport const WALLET_POPUP_CONTENT_TAB = {\r\n  RECOVERY_PHRASE: 1,\r\n  PRIVATE_KEY: 2,\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Global Reducer\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport { fromJS } from 'immutable';\r\nimport _get from 'lodash.get';\r\n// Constants\r\nimport {\r\n  RELEASE_WALLET_INFO,\r\n  RESET_WALLET_POPUP,\r\n  SET_LANGUAGE,\r\n  SET_NETWORK,\r\n  STORE_WALLET_INFO,\r\n  TOGGLE_LOADING_SCREEN,\r\n  TOGGLE_NETWORK_DROPDOWN,\r\n  TOGGLE_WALLET_POPUP,\r\n  UPDATE_WALLET_POPUP_CONTENT_TAB,\r\n  UPDATE_WALLET_POPUP_STAGE,\r\n  WALLET_POPUP_STAGE,\r\n  WALLET_POPUP_CONTENT_TAB,\r\n} from './constants';\r\nimport { LIST } from '../../constants';\r\n// ===================\r\n\r\n// ===== INITIAL VARIABLES =====\r\nconst initialWalletPopupState = {\r\n  isOpen: false,\r\n  stage: WALLET_POPUP_STAGE.WARNING,\r\n  tabType: WALLET_POPUP_CONTENT_TAB.PRIVATE_KEY,\r\n};\r\nconst initialState = fromJS({\r\n  language: _get(LIST, ['LANGUAGES', 0, 'value'], ''),\r\n  loading: false,\r\n  network: {\r\n    data: LIST.NETWORKS[0],\r\n    isExpanded: false,\r\n  },\r\n  wallet: null,\r\n  walletPopup: initialWalletPopupState,\r\n});\r\n// =============================\r\n\r\n// ===== REDUCER =====\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RELEASE_WALLET_INFO:\r\n      return state.set('wallet', null);\r\n    case RESET_WALLET_POPUP:\r\n      return state.set('walletPopup', initialWalletPopupState);\r\n    case SET_LANGUAGE:\r\n      return state.set(\r\n        'language',\r\n        (LIST.LANGUAGES.find(opt => opt.value === action.language) || {})\r\n          .value || '',\r\n      );\r\n    case SET_NETWORK:\r\n      return state.setIn(['network', 'data'], action.network);\r\n    case STORE_WALLET_INFO:\r\n      return state.set('wallet', action.data);\r\n    case TOGGLE_LOADING_SCREEN:\r\n      return state.set('loading', action.bool);\r\n    case TOGGLE_NETWORK_DROPDOWN:\r\n      return state.setIn(['network', 'isExpanded'], action.bool);\r\n    case TOGGLE_WALLET_POPUP: {\r\n      const newState = state.setIn(['walletPopup', 'isOpen'], action.bool);\r\n      if (!action.bool) {\r\n        return newState\r\n          .setIn(['walletPopup', 'stage'], WALLET_POPUP_STAGE.WARNING)\r\n          .setIn(\r\n            ['walletPopup', 'tabType'],\r\n            WALLET_POPUP_CONTENT_TAB.PRIVATE_KEY,\r\n          );\r\n      }\r\n      return newState;\r\n    }\r\n    case UPDATE_WALLET_POPUP_CONTENT_TAB:\r\n      return state.setIn(['walletPopup', 'tabType'], action.tabType);\r\n    case UPDATE_WALLET_POPUP_STAGE:\r\n      return state.setIn(['walletPopup', 'stage'], action.stage);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// ===================\r\n","/**\r\n *\r\n * TomoWallet - Root Reducer Configuration\r\n *\r\n */\r\n// ===== IMPORTS ======\r\n// Modules\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { persistReducer, createTransform } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/es/stateReconciler/hardSet';\r\n// import autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\r\nimport { fromJS } from 'immutable';\r\nimport _get from 'lodash.get';\r\nimport _isEmpty from 'lodash.isempty';\r\n// Utilities\r\nimport { history } from '../utils';\r\nimport globalReducer from '../containers/Global/reducer';\r\n// ====================\r\n\r\n// ===== CONFIGURATION =====\r\n\r\n// // Configure Redux persistor\r\n// const GlobalTransform = createTransform(\r\n//   // Inbound transformation\r\n//   inboundState => {\r\n//     const objState = inboundState.toJS();\r\n//     const rawWallet = _get(objState, 'wallet.toJS', () => null)();\r\n\r\n//     return {\r\n//       ...objState,\r\n//       wallet: !_isEmpty(rawWallet)\r\n//         ? JSON.stringify(objState.wallet.toJS())\r\n//         : {},\r\n//     };\r\n//   },\r\n//   // Outbound transformation\r\n//   outboundState => {\r\n//     return fromJS({\r\n//       ...outboundState,\r\n//       wallet: fromJS(JSON.parse(outboundState.wallet)),\r\n//     });\r\n//   },\r\n//   {\r\n//     whitelist: ['global'],\r\n//   },\r\n// );\r\n// const rootPersistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n//   whitelist: ['global'],\r\n//   transforms: [GlobalTransform],\r\n//   stateReconciler: hardSet,\r\n// };\r\n\r\nexport default (injectedReducers = {}) =>\r\n  // persistReducer(\r\n  //   rootPersistConfig,\r\n  //   combineReducers({\r\n  //     global: globalReducer,\r\n  //     router: connectRouter(history),\r\n  //     ...injectedReducers,\r\n  //   }),\r\n  // );\r\n  combineReducers({\r\n    global: globalReducer,\r\n    router: connectRouter(history),\r\n    ...injectedReducers,\r\n  });\r\n// =========================\r\n","import _conformsTo from 'lodash.conformsto';\r\nimport _isFunction from 'lodash.isfunction';\r\nimport _isObject from 'lodash.isobject';\r\nimport invariant from 'invariant';\r\n\r\n/**\r\n * Validate the shape of redux store\r\n */\r\nexport default function checkStore(store) {\r\n  const shape = {\r\n    dispatch: _isFunction,\r\n    subscribe: _isFunction,\r\n    getState: _isFunction,\r\n    replaceReducer: _isFunction,\r\n    injectedReducers: _isObject,\r\n  };\r\n  invariant(\r\n    _conformsTo(store, shape),\r\n    '(app/utils...) injectors: Expected a valid redux store',\r\n  );\r\n}\r\n","import invariant from 'invariant';\r\nimport _isEmpty from 'lodash.isempty';\r\nimport _isFunction from 'lodash.isfunction';\r\nimport _isString from 'lodash.isstring';\r\n\r\nimport checkStore from './checkStore';\r\nimport createReducer from '../configurations/rootReducer';\r\n\r\nexport function injectReducerFactory(store, isValid) {\r\n  return function injectReducer(key, reducer) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    invariant(\r\n      _isString(key) && !_isEmpty(key) && _isFunction(reducer),\r\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\r\n    );\r\n\r\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\r\n    if (\r\n      Reflect.has(store.injectedReducers, key) &&\r\n      store.injectedReducers[key] === reducer\r\n    )\r\n      return;\r\n\r\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\r\n    store.replaceReducer(createReducer(store.injectedReducers));\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectReducer: injectReducerFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './reducerInjectors';\r\n\r\n/**\r\n * Dynamically injects a reducer\r\n *\r\n * @param {string} key A key of the reducer\r\n * @param {function} reducer A reducer that will be injected\r\n *\r\n */\r\nexport default ({ key, reducer }) => WrappedComponent => {\r\n  class ReducerInjector extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withReducer(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n\r\n    constructor(props, context) {\r\n      super(props, context);\r\n\r\n      getInjectors(context.store).injectReducer(key, reducer);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\r\n};\r\n\r\nconst useInjectReducer = ({ key, reducer }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    getInjectors(context.store).injectReducer(key, reducer);\r\n  });\r\n};\r\n\r\nexport { useInjectReducer };\r\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\r\nexport const DAEMON = '@@saga-injector/daemon';\r\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\r\n","import invariant from 'invariant';\r\nimport _isEmpty from 'lodash.isempty';\r\nimport _isFunction from 'lodash.isfunction';\r\nimport _isString from 'lodash.isstring';\r\nimport _conformsTo from 'lodash.conformsto';\r\n\r\nimport checkStore from './checkStore';\r\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\r\n\r\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\r\n\r\nconst checkKey = key =>\r\n  invariant(\r\n    _isString(key) && !_isEmpty(key),\r\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\r\n  );\r\n\r\nconst checkDescriptor = descriptor => {\r\n  const shape = {\r\n    saga: _isFunction,\r\n    mode: mode => _isString(mode) && allowedModes.includes(mode),\r\n  };\r\n  invariant(\r\n    _conformsTo(descriptor, shape),\r\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\r\n  );\r\n};\r\n\r\nexport function injectSagaFactory(store, isValid) {\r\n  return function injectSaga(key, descriptor = {}, args) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    const newDescriptor = {\r\n      ...descriptor,\r\n      mode: descriptor.mode || DAEMON,\r\n    };\r\n    const { saga, mode } = newDescriptor;\r\n\r\n    checkKey(key);\r\n    checkDescriptor(newDescriptor);\r\n\r\n    let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      const oldDescriptor = store.injectedSagas[key];\r\n      // enable hot reloading of daemon and once-till-unmount sagas\r\n      if (hasSaga && oldDescriptor.saga !== saga) {\r\n        oldDescriptor.task.cancel();\r\n        hasSaga = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !hasSaga ||\r\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\r\n    ) {\r\n      /* eslint-disable no-param-reassign */\r\n      store.injectedSagas[key] = {\r\n        ...newDescriptor,\r\n        task: store.runSaga(saga, args),\r\n      };\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  };\r\n}\r\n\r\nexport function ejectSagaFactory(store, isValid) {\r\n  return function ejectSaga(key) {\r\n    if (!isValid) checkStore(store);\r\n\r\n    checkKey(key);\r\n\r\n    if (Reflect.has(store.injectedSagas, key)) {\r\n      const descriptor = store.injectedSagas[key];\r\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\r\n        descriptor.task.cancel();\r\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\r\n        if (process.env.NODE_ENV === 'production') {\r\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\r\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default function getInjectors(store) {\r\n  checkStore(store);\r\n\r\n  return {\r\n    injectSaga: injectSagaFactory(store, true),\r\n    ejectSaga: ejectSagaFactory(store, true),\r\n  };\r\n}\r\n","import React from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nimport getInjectors from './sagaInjectors';\r\n\r\n/**\r\n * Dynamically injects a saga, passes component's props as saga arguments\r\n *\r\n * @param {string} key A key of the saga\r\n * @param {function} saga A root saga that will be injected\r\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\r\n * on component mount and never canceled or started again. Another two options:\r\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\r\n *   cancelled with `task.cancel()` on component unmount for improved performance,\r\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\r\n *\r\n */\r\nexport default ({ key, saga, mode }) => WrappedComponent => {\r\n  class InjectSaga extends React.Component {\r\n    static WrappedComponent = WrappedComponent;\r\n\r\n    static contextType = ReactReduxContext;\r\n\r\n    static displayName = `withSaga(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      'Component'})`;\r\n\r\n    constructor(props, context) {\r\n      super(props, context);\r\n\r\n      this.injectors = getInjectors(context.store);\r\n\r\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.injectors.ejectSaga(key);\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\r\n};\r\n\r\nconst useInjectSaga = ({ key, saga, mode }) => {\r\n  const context = React.useContext(ReactReduxContext);\r\n  React.useEffect(() => {\r\n    const injectors = getInjectors(context.store);\r\n    injectors.injectSaga(key, { saga, mode });\r\n\r\n    return () => {\r\n      injectors.ejectSaga(key);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport { useInjectSaga };\r\n","import { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\r\nimport _isEqual from 'lodash.isequal';\r\n\r\nexport default createSelectorCreator(defaultMemoize, _isEqual);\r\n","/**\r\n *\r\n * TomoWallet - Other Utilities\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport _get from 'lodash.get';\r\nimport _omit from 'lodash.omit';\r\n// ===================\r\n\r\nexport const shuffleArray = array => {\r\n  let original = array;\r\n  const result = [];\r\n\r\n  while (original.length > 0) {\r\n    // If the remaining array has only 1 element, add it directly to the result array\r\n    if (original.length === 1) {\r\n      result.push(original[0]);\r\n      break;\r\n    }\r\n\r\n    const randomizedIndex = Math.floor((Math.random() * 100) % original.length);\r\n    if (original[randomizedIndex]) {\r\n      result.push(original[randomizedIndex]);\r\n      original = original.filter((_, index) => index !== randomizedIndex);\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n// Global state storage\r\nconst setStorage = (key, object) => {\r\n  localStorage.setItem(\r\n    'global',\r\n    JSON.stringify({\r\n      ...JSON.parse(localStorage.getItem('global')),\r\n      [key]: object,\r\n    }),\r\n  );\r\n};\r\nconst getStorage = key => {\r\n  return _get(JSON.parse(localStorage.getItem('global')), [key]);\r\n};\r\nconst removeStorage = key => {\r\n  localStorage.setItem(\r\n    'global',\r\n    JSON.stringify(_omit(getStorage('global'), key)),\r\n  );\r\n};\r\n\r\nexport const setWeb3Info = web3Info => {\r\n  setStorage('web3Info', web3Info);\r\n};\r\nexport const getWeb3Info = () => {\r\n  return getStorage('web3Info');\r\n};\r\nexport const removeWeb3Info = () => {\r\n  removeStorage('web3Info');\r\n};\r\n\r\nexport const setLocale = locale => {\r\n  setStorage('locale', locale);\r\n};\r\nexport const getLocale = () => {\r\n  return getStorage('locale');\r\n};\r\nexport const removeLocale = () => {\r\n  removeStorage('locale');\r\n};\r\n\r\nexport const setNetwork = network => {\r\n  setStorage('network', network);\r\n};\r\nexport const getNetwork = () => {\r\n  return getStorage('network');\r\n};\r\nexport const removeNetwork = () => {\r\n  removeStorage('network');\r\n};\r\n\r\nexport const setLedger = ledger => {\r\n  setStorage('ledger', ledger);\r\n};\r\nexport const getLedger = () => {\r\n  return getStorage('ledger');\r\n};\r\nexport const removeLedger = () => {\r\n  return removeStorage('ledger');\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Utilities - Validations\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport _isEmpty from 'lodash.isempty';\r\nimport _isNumber from 'lodash.isnumber';\r\n// ===================\r\n\r\n// ===== VALIDATIONS =====\r\nexport const mergeErrors = (newErrors, oldErrors = {}) => {\r\n  if (!_isEmpty(newErrors)) {\r\n    let result = oldErrors;\r\n    newErrors.forEach(error => {\r\n      const compareKey = Object.keys(error)[0];\r\n      if (Object.keys(result).includes(compareKey)) {\r\n        result = {\r\n          ...result,\r\n          [compareKey]: [...result[compareKey], ...error[compareKey]],\r\n        };\r\n      } else {\r\n        result = {\r\n          ...result,\r\n          ...error,\r\n        };\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return oldErrors;\r\n};\r\n\r\nconst isRequired = ({ name, value }, message) => {\r\n  if (_isEmpty(value) && !_isNumber(value)) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isHex = web3 => ({ name, value }, message) => {\r\n  if (!_isEmpty(value) && !web3.utils.isHex(value)) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isMaxNumber = ({ name, value, max }, message) => {\r\n  if (!_isEmpty(value) && value > max) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isMinNumber = ({ name, value, min }, message) => {\r\n  if (!_isEmpty(value) && value < min) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isAddress = web3 => ({ name, value }, message) => {\r\n  if (!_isEmpty(value) && !web3.utils.isAddress(value)) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isMaxLength = ({ name, value, max }, message) => {\r\n  if (!_isEmpty(value) && value.length > max) {\r\n    return {\r\n      [name]: [message],\r\n    };\r\n  }\r\n  return {};\r\n};\r\n// =======================\r\n\r\nexport default web3 => ({\r\n  isRequired,\r\n  isMaxNumber,\r\n  isMinNumber,\r\n  isMaxLength,\r\n  isHex: isHex(web3),\r\n  isAddress: isAddress(web3),\r\n});\r\n","/**\r\n *\r\n * TomoWallet - Loading State Injection\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport { createStructuredSelector } from 'reselect';\r\n// Utilities\r\nimport { selectLoading } from '../containers/Global/selectors';\r\nimport { toggleLoading } from '../containers/Global/actions';\r\n// ===================\r\n\r\n// ===== INJECTOR =====\r\nexport const withLoading = WrappedComponent => {\r\n  class LoadingConsumer extends PureComponent {\r\n    render() {\r\n      const { loading, onToggleLoading } = this.props;\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          loading={loading}\r\n          toggleLoading={onToggleLoading}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  if (WrappedComponent.defaultProps) {\r\n    LoadingConsumer.defaultProps = { ...WrappedComponent.defaultProps };\r\n  }\r\n\r\n  const mapStateToProps = () =>\r\n    createStructuredSelector({\r\n      loading: selectLoading,\r\n    });\r\n  const mapDispatchToProps = dispatch => ({\r\n    onToggleLoading: bool => dispatch(toggleLoading(bool)),\r\n  });\r\n  const withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  );\r\n\r\n  return hoistNonReactStatics(withConnect(LoadingConsumer), WrappedComponent);\r\n};\r\n// ====================\r\n","import injectReducer from './injectReducer';\r\nimport injectSaga from './injectSaga';\r\nimport history from './history';\r\nimport createDeepEqualSelector from './deepSelector';\r\nimport {\r\n  shuffleArray,\r\n  getWeb3Info,\r\n  setWeb3Info,\r\n  removeWeb3Info,\r\n  getLocale,\r\n  setLocale,\r\n  removeLocale,\r\n  getNetwork,\r\n  setNetwork,\r\n  removeNetwork,\r\n  getLedger,\r\n  setLedger,\r\n  removeLedger,\r\n} from './miscellaneous';\r\nimport {\r\n  decryptWalletInfo,\r\n  estimateTRC20Gas,\r\n  fromWei,\r\n  generateWeb3,\r\n  getWalletInfo,\r\n  mnemonicToPrivateKey,\r\n  sendToken,\r\n} from './blockchain';\r\nimport getValidations, { mergeErrors } from './validations';\r\nimport { withLoading } from './injectLoading';\r\n\r\nexport {\r\n  injectReducer,\r\n  injectSaga,\r\n  history,\r\n  createDeepEqualSelector,\r\n  shuffleArray,\r\n  mnemonicToPrivateKey,\r\n  generateWeb3,\r\n  decryptWalletInfo,\r\n  getWalletInfo,\r\n  getValidations,\r\n  mergeErrors,\r\n  estimateTRC20Gas,\r\n  sendToken,\r\n  getWeb3Info,\r\n  setWeb3Info,\r\n  removeWeb3Info,\r\n  withLoading,\r\n  fromWei,\r\n  getLocale,\r\n  setLocale,\r\n  removeLocale,\r\n  getNetwork,\r\n  setNetwork,\r\n  removeNetwork,\r\n  getLedger,\r\n  setLedger,\r\n  removeLedger,\r\n};\r\n","import styled from 'styled-components';\r\nimport {\r\n  Modal\r\n} from 'reactstrap';\r\n\r\nconst ModalStyles = styled(Modal)`\r\n  .modal-content {\r\n    padding: 2em;\r\n  }\r\n  .modal-header {\r\n    justify-content: center;\r\n    border: 0;\r\n    padding: 0;\r\n    button.close {\r\n      display: none;\r\n      position: absolute;\r\n      top: 15px;\r\n      right: 15px;\r\n    }\r\n  }\r\n  .modal-body {\r\n    padding: 3em 0;\r\n  }\r\n  .modal-footer {\r\n    border: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\nexport default ModalStyles\r\n","/**\r\n *\r\n * Common Component - Pop-up\r\n *\r\n */\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _get from 'lodash.get';\r\nimport {\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n// Custom Components\r\nimport ModalStyles from './style';\r\nimport { ButtonStyler } from '../../styles';\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass Popup extends PureComponent {\r\n  render() {\r\n    const {\r\n      backdrop,\r\n      button,\r\n      centered,\r\n      className,\r\n      Content,\r\n      Footer,\r\n      getContentProps,\r\n      getFooterProps,\r\n      getPopupProps,\r\n      isOpen,\r\n      noHeader,\r\n      title,\r\n      toggle,\r\n    } = this.props;\r\n\r\n    return (\r\n      <ModalStyles\r\n        backdrop={backdrop}\r\n        className={className}\r\n        centered={centered}\r\n        isOpen={isOpen}\r\n        title={title}\r\n        toggle={toggle}\r\n        {...getPopupProps}\r\n      >\r\n        {!noHeader && <ModalHeader toggle={toggle}>{title}</ModalHeader>}\r\n        <ModalBody>\r\n          <Content {...getContentProps} />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {Footer ? (\r\n            <Footer {...getFooterProps} />\r\n          ) : (\r\n            (_get(button, 'primary') || _get(button, 'secondary')) && (\r\n              <Container className='px-0'>\r\n                <Row>\r\n                  {_get(button, 'secondary') && (\r\n                    <Col size={6}>\r\n                      <ButtonStyler\r\n                        outline\r\n                        onClick={_get(button, 'secondary.action', () => {})}\r\n                        disabled={_get(button, 'secondary.disabled')}\r\n                        {..._get(button, 'secondary')}\r\n                      >\r\n                        {_get(button, 'secondary.label', '')}\r\n                      </ButtonStyler>\r\n                    </Col>\r\n                  )}\r\n                  {_get(button, 'primary') && (\r\n                    <Col size={6}>\r\n                      <ButtonStyler\r\n                        onClick={_get(button, 'primary.action', () => {})}\r\n                        disabled={_get(button, 'primary.disabled')}\r\n                        {..._get(button, 'primary')}\r\n                      >\r\n                        {_get(button, 'primary.label', '')}\r\n                      </ButtonStyler>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </Container>\r\n            )\r\n          )}\r\n        </ModalFooter>\r\n      </ModalStyles>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nPopup.propTypes = {\r\n  /**\r\n   * Types of backdrop:\r\n   * - true: Backdrop exists, and can close pop-up when clicking on it.\r\n   * - false: No backdrop.\r\n   * - \"static\": Backdrop exists, but can do nothing when clicking on it.\r\n   */\r\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\r\n  /** Pop-up's footer button configurations */\r\n  button: PropTypes.shape({\r\n    primary: PropTypes.object,\r\n    secondary: PropTypes.object,\r\n  }),\r\n  // if modal should be centered vertically in viewport\r\n  centered: PropTypes.bool,\r\n  /** Pop-up custom class */\r\n  onClosed: PropTypes.func,\r\n  className: PropTypes.string,\r\n  /** Pop-up body component */\r\n  Content: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  /** Pop-up customized footer component */\r\n  Footer: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n  /** Body component's props */\r\n  getContentProps: PropTypes.object,\r\n  /** Customized footer component's props */\r\n  getFooterProps: PropTypes.object,\r\n  /** Reactstrap popup's props */\r\n  getPopupProps: PropTypes.object,\r\n  /** Condition flag to show/hide pop-up */\r\n  isOpen: PropTypes.bool,\r\n  /** Condition flag to show/hide pop-up header */\r\n  noHeader: PropTypes.bool,\r\n  /** Pop-up title */\r\n  title: PropTypes.string,\r\n  /** Action to show/hide pop-up */\r\n  toggle: PropTypes.func,\r\n};\r\n\r\nPopup.defaultProps = {\r\n  backdrop: 'static',\r\n  button: {\r\n    primary: {\r\n      label: 'OK',\r\n    },\r\n  },\r\n  className: '',\r\n  Content: () => null,\r\n  getContentProps: {},\r\n  getFooterProps: {},\r\n  getPopupProps: {},\r\n  centered: true,\r\n  isOpen: false,\r\n  noHeader: false,\r\n  title: '',\r\n  toggle: () => {},\r\n};\r\n// ======================\r\n\r\nexport default Popup;\r\n","/**\r\n *\r\n * TomoWallet - Recovery Phrase Box Style\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport styled from 'styled-components';\r\nimport { Row } from 'reactstrap';\r\n// ===================\r\n\r\n// ===== STYLE =====\r\nconst MnemonicBoxStyler = styled(Row)`\r\n  &.bordered {\r\n    border-radius: 8px;\r\n    border: 1px solid #444b64;\r\n  }\r\n`;\r\n// =================\r\n\r\nexport { MnemonicBoxStyler };\r\n","/**\r\n *\r\n * TomoWallet - Recovery Phrase Box\r\n *\r\n * This component distribute a list of mnemonic words into a container box\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _get from 'lodash.get';\r\nimport { Col } from 'reactstrap';\r\n// Custom Component\r\nimport { MnemonicBoxStyler } from './style';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass MnemonicBox extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.WORD_NUMBER = 12;\r\n\r\n    this.handleConvertMnemonic = this.handleConvertMnemonic.bind(this);\r\n  }\r\n\r\n  handleConvertMnemonic() {\r\n    const { mnemonic } = this.props;\r\n    return Array.isArray(mnemonic) ? mnemonic : mnemonic.split(' ');\r\n  }\r\n\r\n  render() {\r\n    const { className, getCellProps, WordCell } = this.props;\r\n    const wordList = this.handleConvertMnemonic();\r\n    return (\r\n      <MnemonicBoxStyler\r\n        noGutters\r\n        className={`bordered${className ? ` ${className}` : ''}`}\r\n      >\r\n        {Array(this.WORD_NUMBER)\r\n          .fill(null)\r\n          .map((_, wordIdx) => (\r\n            <Col\r\n              key={`word_${wordIdx + 1}`}\r\n              xs={6}\r\n              sm={6}\r\n              md={4}\r\n              lg={4}\r\n              className='p-4'\r\n            >\r\n              {`${wordIdx + 1}. `}\r\n              {(WordCell && <WordCell wordIdx={wordIdx} {...getCellProps} />) ||\r\n                (!WordCell && _get(wordList, [wordIdx], ''))}\r\n            </Col>\r\n          ))}\r\n      </MnemonicBoxStyler>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nMnemonicBox.propTypes = {\r\n  /** Component's class */\r\n  className: PropTypes.string,\r\n  /** Custom cell component's props */\r\n  getCellProps: PropTypes.object,\r\n  /** A string or an array of mnemonic words */\r\n  mnemonic: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.string),\r\n  ]),\r\n  /** Custom component for each word's cell */\r\n  WordCell: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n};\r\n\r\nMnemonicBox.defaultProps = {\r\n  className: '',\r\n  getCellProps: {},\r\n  mnemonic: '',\r\n};\r\n// ======================\r\n\r\nexport default MnemonicBox;\r\n","module.exports = __webpack_public_path__ + \"a4c36a87b4073b1012e6063254e9f634.eot\";","module.exports = __webpack_public_path__ + \"80c9d5a499013eb43d1756efc680e893.svg\";","module.exports = __webpack_public_path__ + \"926c7bcab97fb5a858fd060d9dd2a39d.png\";","/**\r\n *\r\n * TomoWallet - React Intl Customized Provider\r\n *\r\n * This provider defines React Intl injection method with an additional function to change the locale\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider, injectIntl } from 'react-intl';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\n// Utilities & Constants\r\nimport { selectLanguage } from '../../containers/Global/selectors';\r\nimport { setLanguage } from '../../containers/Global/actions';\r\nimport { ENUM } from '../../constants';\r\n// ===================\r\n\r\n// ===== React Intl Customized Provider =====\r\nclass CustomIntlProvider extends PureComponent {\r\n  render() {\r\n    const { language, children } = this.props;\r\n    return (\r\n      <IntlProvider locale={language} messages={ENUM.MESSAGE_SET[language]}>\r\n        {children}\r\n      </IntlProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    language: selectLanguage,\r\n  });\r\n\r\nexport default connect(mapStateToProps)(CustomIntlProvider);\r\n// ==========================\r\n\r\n// ===== React Intl Customized Injection =====\r\nexport const withIntl = WrappedComponent => {\r\n  class IntlConsumer extends PureComponent {\r\n    render() {\r\n      const { language, onSetLanguage } = this.props;\r\n      return (\r\n        <WrappedComponent\r\n          {...this.props}\r\n          language={language}\r\n          changeLocale={onSetLanguage}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  if (WrappedComponent.defaultProps) {\r\n    IntlConsumer.defaultProps = { ...WrappedComponent.defaultProps };\r\n  }\r\n\r\n  const mapStateToProps = () =>\r\n    createStructuredSelector({\r\n      language: selectLanguage,\r\n    });\r\n  const mapDispatchToProps = dispatch => ({\r\n    onSetLanguage: language => dispatch(setLanguage(language)),\r\n  });\r\n  const withConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  );\r\n\r\n  return hoistNonReactStatics(\r\n    compose(\r\n      withConnect,\r\n      injectIntl,\r\n    )(IntlConsumer),\r\n    WrappedComponent,\r\n  );\r\n};\r\n// ===========================================\r\n","/**\r\n *\r\n * TomoWallet - Custom React Intl Provider - Utilities\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n// ===================\r\n\r\n// ===== UTILITIES =====\r\nconst IntlTextComponent = ({\r\n  intl: { formatMessage },\r\n  intlProps,\r\n  valueProps,\r\n}) => formatMessage(intlProps, valueProps);\r\nconst IntlText = injectIntl(IntlTextComponent);\r\n\r\nexport const getMessage = (intlProps, valueProps) => (\r\n  <IntlText intlProps={intlProps} valueProps={valueProps} />\r\n);\r\n// =====================\r\n","import CustomIntlProvider, { withIntl } from './Provider';\r\nimport { getMessage } from './utilities';\r\n\r\nexport { CustomIntlProvider, withIntl, getMessage };\r\n","/**\r\n *\r\n * TomoWallet - Global Actions\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Constants\r\nimport {\r\n  RELEASE_WALLET_INFO,\r\n  RESET_WALLET_POPUP,\r\n  SET_LANGUAGE,\r\n  SET_NETWORK,\r\n  STORE_WALLET_INFO,\r\n  TOGGLE_LOADING_SCREEN,\r\n  TOGGLE_NETWORK_DROPDOWN,\r\n  TOGGLE_WALLET_POPUP,\r\n  UPDATE_WALLET_POPUP_CONTENT_TAB,\r\n  UPDATE_WALLET_POPUP_STAGE,\r\n} from './constants';\r\n// ===================\r\n\r\n// ===== ACTIONS =====\r\nexport const releaseWallet = () => ({\r\n  type: RELEASE_WALLET_INFO,\r\n});\r\n\r\nexport const resetWalletPopup = () => ({\r\n  type: RESET_WALLET_POPUP,\r\n});\r\n\r\nexport const setLanguage = language => ({\r\n  type: SET_LANGUAGE,\r\n  language,\r\n});\r\n\r\nexport const setNetwork = network => ({\r\n  type: SET_NETWORK,\r\n  network,\r\n});\r\n\r\nexport const storeWallet = data => ({\r\n  type: STORE_WALLET_INFO,\r\n  data,\r\n});\r\n\r\nexport const toggleLoading = bool => ({\r\n  type: TOGGLE_LOADING_SCREEN,\r\n  bool,\r\n});\r\n\r\nexport const toggleNetworkDropdown = bool => ({\r\n  type: TOGGLE_NETWORK_DROPDOWN,\r\n  bool,\r\n});\r\n\r\nexport const toggleWalletPopup = bool => ({\r\n  type: TOGGLE_WALLET_POPUP,\r\n  bool,\r\n});\r\n\r\nexport const updateWalletPopupContentTab = tabType => ({\r\n  type: UPDATE_WALLET_POPUP_CONTENT_TAB,\r\n  tabType,\r\n});\r\n\r\nexport const updateWalletPopupStage = stage => ({\r\n  type: UPDATE_WALLET_POPUP_STAGE,\r\n  stage,\r\n});\r\n// ===================\r\n","/**\r\n *\r\n * TomoWallet - Global Selectors\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Utilities\r\nimport { createDeepEqualSelector } from '../../utils';\r\n// ===================\r\n\r\n// ===== SELECTORS =====\r\nconst selectGlobalDomain = state => state.global;\r\n\r\nconst selectLanguage = createDeepEqualSelector(\r\n  selectGlobalDomain,\r\n  obj => obj.toJS().language,\r\n);\r\nconst selectLoading = createDeepEqualSelector(\r\n  selectGlobalDomain,\r\n  obj => obj.toJS().loading,\r\n);\r\nconst selectNetworkData = createDeepEqualSelector(\r\n  selectGlobalDomain,\r\n  obj => obj.toJS().network,\r\n);\r\nconst selectWallet = createDeepEqualSelector(\r\n  selectGlobalDomain,\r\n  obj => obj.toJS().wallet,\r\n);\r\nconst selectWalletPopup = createDeepEqualSelector(\r\n  selectGlobalDomain,\r\n  obj => obj.toJS().walletPopup,\r\n);\r\n// =====================\r\n\r\nexport {\r\n  selectLanguage,\r\n  selectLoading,\r\n  selectNetworkData,\r\n  selectWallet,\r\n  selectWalletPopup,\r\n};\r\n","export default {\r\n  TOMOCHAIN_TESTNET: {\r\n    type: 'http',\r\n    host: 'https://testnet.tomochain.com',\r\n    networkId: 89,\r\n    hdPath: \"m/44'/889'/0'/0/\",\r\n  },\r\n  TOMOCHAIN_MAINNET: {\r\n    type: 'http',\r\n    host: 'https://rpc.tomochain.com',\r\n    networkId: 88,\r\n    hdPath: \"m/44'/889'/0'/0/\",\r\n  },\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Enums\r\n *\r\n * This file stores all kinds of enum data that'll be used in web app\r\n */\r\n// ===== IMPORTS =====\r\n// Utilities\r\nimport message_en from '../translations/en.json';\r\nimport message_fr from '../translations/fr.json';\r\n// ===================\r\n\r\n// ===== ENUMS =====\r\nconst WEB3_STATUSES = {\r\n  LOADING: 'loading',\r\n  INITIALIZED: 'initialized',\r\n  FAILED: 'failed',\r\n};\r\n\r\nconst MESSAGE_SET = {\r\n  en: message_en,\r\n  fr: message_fr,\r\n};\r\n\r\nconst TOKEN_TYPE = {\r\n  TRC20: 'TRC20',\r\n  TRC21: 'TRC21',\r\n};\r\n// =================\r\n\r\nexport default {\r\n  MESSAGE_SET,\r\n  TOKEN_TYPE,\r\n  WEB3_STATUSES,\r\n};\r\n","export default {\r\n  DEFAULT: '/',\r\n  LOGIN: '/login',\r\n  HOMEPAGE: '/homepage',\r\n  CREATE_WALLET: '/create-new-wallet',\r\n  IMPORT_WALLET: '/import-wallet',\r\n  MY_WALLET: '/my-wallet',\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Common Messages\r\n *\r\n * This file defines all common React Intl message objects\r\n * that'll be used in many places in the web app\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport { defineMessages } from 'react-intl';\r\n// ===================\r\n\r\n// ===== MESSAGES =====\r\nconst basePrefix = 'tomowallet';\r\nconst commonPrefix = `${basePrefix}.common`;\r\nconst componentPrefix = `${basePrefix}.component`;\r\nconst containerPrefix = `${basePrefix}.container`;\r\nconst buttonPrefix = `${commonPrefix}.button`;\r\nconst listPrefix = `${commonPrefix}.list`;\r\nconst navbarPrefix = `${componentPrefix}.navbar`;\r\nconst footerPrefix = `${componentPrefix}.footer`;\r\nconst welcomePagePrefix = `${containerPrefix}.welcome`;\r\nconst createWalletPagePrefix = `${containerPrefix}.createwallet`;\r\nconst warningPagePrefix = `${createWalletPagePrefix}.warning`;\r\nconst recoveryPhrasePrefix = `${createWalletPagePrefix}.recoveryphrase`;\r\nconst verificationPrefix = `${createWalletPagePrefix}.verification`;\r\nconst successNotificationPrefix = `${createWalletPagePrefix}.successnotification`;\r\nconst importWalletPagePrefix = `${containerPrefix}.importwallet`;\r\nconst myWalletPagePrefix = `${containerPrefix}.mywallet`;\r\n\r\nexport default defineMessages({\r\n  // Common - Button\r\n  COMMON_BUTTON_BACK: {\r\n    id: `${buttonPrefix}.back`,\r\n    defaultMessage: 'Back',\r\n  },\r\n  COMMON_BUTTON_NEXT: {\r\n    id: `${buttonPrefix}.next`,\r\n    defaultMessage: 'Next',\r\n  },\r\n  COMMON_BUTTON_SAVE: {\r\n    id: `${buttonPrefix}.save`,\r\n    defaultMessage: 'Save',\r\n  },\r\n  COMMON_BUTTON_IMPORT: {\r\n    id: `${buttonPrefix}.import`,\r\n    defaultMessage: 'Import',\r\n  },\r\n  COMMON_BUTTON_SEND: {\r\n    id: `${buttonPrefix}.send`,\r\n    defaultMessage: 'Send',\r\n  },\r\n  COMMON_BUTTON_RECEIVE: {\r\n    id: `${buttonPrefix}.receive`,\r\n    defaultMessage: 'Receive',\r\n  },\r\n  COMMON_BUTTON_MAXIMUM: {\r\n    id: `${buttonPrefix}.maximum`,\r\n    defaultMessage: 'Max',\r\n  },\r\n  COMMON_BUTTON_CONFIRM: {\r\n    id: `${buttonPrefix}.confirm`,\r\n    defaultMessage: 'Confirm',\r\n  },\r\n  COMMON_BUTTON_UNLOCK: {\r\n    id: `${buttonPrefix}.unlock`,\r\n    defaultMessage: 'Unlock',\r\n  },\r\n  // Common - Lists\r\n  COMMON_LIST_LANGUAGE_ENGLISH: {\r\n    id: `${listPrefix}.language.english`,\r\n    defaultMessage: 'English',\r\n  },\r\n  COMMON_LIST_LANGUAGE_FRENCH: {\r\n    id: `${listPrefix}.language.french`,\r\n    defaultMessage: 'French',\r\n  },\r\n  COMMON_LIST_NETWORK_TOMOCHAIN_TESTNET: {\r\n    id: `${listPrefix}.network.tomochain.testnet`,\r\n    defaultMessage: 'TomoChain Test Network',\r\n  },\r\n  COMMON_LIST_NETWORK_TOMOCHAIN_MAINNET: {\r\n    id: `${listPrefix}.network.tomochain.mainnet`,\r\n    defaultMessage: 'Main TomoChain Network',\r\n  },\r\n  // Component - Header Navigation Bar\r\n  HEADER_NAVBAR_LOGO_ALT: {\r\n    id: `${navbarPrefix}.logo.alt`,\r\n    defaultMessage: 'TOMOCHAIN LOGO',\r\n  },\r\n  HEADER_NAVBAR_OPTION_ABOUT: {\r\n    id: `${navbarPrefix}.option.about`,\r\n    defaultMessage: 'About',\r\n  },\r\n  HEADER_NAVBAR_OPTION_FAQS: {\r\n    id: `${navbarPrefix}.option.faqs`,\r\n    defaultMessage: 'FAQ',\r\n  },\r\n  HEADER_NAVBAR_OPTION_MY_WALLET: {\r\n    id: `${navbarPrefix}.option.mywallet`,\r\n    defaultMessage: 'My Wallet',\r\n  },\r\n  HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_SHOW_WALLET: {\r\n    id: `${navbarPrefix}.option.mywallet.option.showprofile`,\r\n    defaultMessage: 'Show Wallet',\r\n  },\r\n  HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_HELP: {\r\n    id: `${navbarPrefix}.option.mywallet.option.settings`,\r\n    defaultMessage: 'Help',\r\n  },\r\n  HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_LOG_OUT: {\r\n    id: `${navbarPrefix}.option.mywallet.option.logout`,\r\n    defaultMessage: 'Log out',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_TITLE: {\r\n    id: `${navbarPrefix}.popup.showwallet.title`,\r\n    defaultMessage: 'Show Wallet',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_IMAGE_ALT: {\r\n    id: `${navbarPrefix}.popup.showwallet.warning.image.alt`,\r\n    defaultMessage: 'Warning image',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_TEXT: {\r\n    id: `${navbarPrefix}.popup.showwallet.warning.text`,\r\n    defaultMessage:\r\n      'We are about to show your recovery phrase and private key, please ensure that no one else is looking at your screen.',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_RECOVERY_PHRASE: {\r\n    id: `${navbarPrefix}.popup.showwallet.tab.recoveryphrase`,\r\n    defaultMessage: 'Recovery phrase',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY: {\r\n    id: `${navbarPrefix}.popup.showwallet.tab.privatekey`,\r\n    defaultMessage: 'Private key',\r\n  },\r\n  HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY_NOTE: {\r\n    id: `${navbarPrefix}.popup.showwallet.tab.privatekey.note`,\r\n    defaultMessage: 'Remove all spaces to use private key, please',\r\n  },\r\n  // Component - Page Footer\r\n  FOOTER_VERSION_TEXT: {\r\n    id: `${footerPrefix}.versiontext`,\r\n    defaultMessage: 'TomoWallet 2019 - v1.0',\r\n  },\r\n  FOOTER_OPTION_HELP: {\r\n    id: `${footerPrefix}.option.help`,\r\n    defaultMessage: 'Need help?',\r\n  },\r\n  FOOTER_OPTION_POLICY: {\r\n    id: `${footerPrefix}.option.policy`,\r\n    defaultMessage: 'Privacy Policy',\r\n  },\r\n  FOOTER_OPTION_TERMS_OF_SERVICE: {\r\n    id: `${footerPrefix}.option.termsofservice`,\r\n    defaultMessage: 'Terms of Service',\r\n  },\r\n  FOOTER_OPTION_API_DOCUMENTATION: {\r\n    id: `${footerPrefix}.option.apidocumentation`,\r\n    defaultMessage: 'API Documentation',\r\n  },\r\n  // Welcome Page\r\n  WELCOME_TITLE: {\r\n    id: `${welcomePagePrefix}.title`,\r\n    defaultMessage: 'Welcome to TomoWallet',\r\n  },\r\n  WELCOME_DESCRIPTION: {\r\n    id: `${welcomePagePrefix}.description`,\r\n    defaultMessage:\r\n      'TomoWallet (our friends call us TMW) is a free, client-side interface helping you interact with the TomoChain. Our easy-to-use, open-source platform allows you to generate wallets, interact with smart contracts, and so much more.',\r\n  },\r\n  WELCOME_BUTTON_CREATE_NEW_WALLET: {\r\n    id: `${welcomePagePrefix}.button.createnewwallet`,\r\n    defaultMessage: 'Create a New Wallet',\r\n  },\r\n  WELCOME_TEXT_BETWEEN_BUTTONS: {\r\n    id: `${welcomePagePrefix}.textbetweenbuttons`,\r\n    defaultMessage: 'or',\r\n  },\r\n  WELCOME_BUTTON_IMPORT_WALLET: {\r\n    id: `${welcomePagePrefix}.button.importwallet`,\r\n    defaultMessage: 'Import Your Wallet',\r\n  },\r\n  WELCOME_IMAGE_ALT: {\r\n    id: `${welcomePagePrefix}.image.alt`,\r\n    defaultMessage: 'Welcome to TomoWallet',\r\n  },\r\n  // Create Wallet - Warning Page\r\n  WARNING_HEADER_TITLE: {\r\n    id: `${warningPagePrefix}.header.title`,\r\n    defaultMessage: 'Create New Wallet',\r\n  },\r\n  WARNING_HEADER_ALTERNATIVE_TEXT: {\r\n    id: `${warningPagePrefix}.header.alternative.text`,\r\n    defaultMessage: 'Already have a wallet?',\r\n  },\r\n  WARNING_HEADER_ALTERNATIVE_LINK: {\r\n    id: `${warningPagePrefix}.header.alternative.link`,\r\n    defaultMessage: 'Import your wallet',\r\n  },\r\n  WARNING_IMAGE_ALT: {\r\n    id: `${warningPagePrefix}.image.alt`,\r\n    defaultMessage: 'Warning!',\r\n  },\r\n  WARNING_CONTENT_TITLE: {\r\n    id: `${warningPagePrefix}.content.title`,\r\n    defaultMessage: \"Let's secure your account\",\r\n  },\r\n  WARNING_CONTENT_DESCRIPTION: {\r\n    id: `${warningPagePrefix}.content.description`,\r\n    defaultMessage:\r\n      'Your backup phrase contains all of the private keys within your wallet. Please write down these 12 words, in order, and keep them somewhere safe offline. This phrase will gives you (or anyone who has it) a way to restore your wallet and access your funds. In the event that you lose your password or our service is unavailable, this will be your safety net.',\r\n  },\r\n  WARNING_CONTENT_DESCRIPTION_DANGER: {\r\n    id: `${warningPagePrefix}.content.description.danger`,\r\n    defaultMessage:\r\n      'If you lose your recovery phrase, you will be unable to recover access to your account',\r\n  },\r\n  WARNING_BUTTON_NEXT_TO_RECOVERY_PHRASE: {\r\n    id: `${warningPagePrefix}.button.nexttorecoveryphrase`,\r\n    defaultMessage: 'Next to Recovery Phrase',\r\n  },\r\n  // Create Wallet - Recovery Phrase Page\r\n  RECOVERY_PHRASE_TITLE: {\r\n    id: `${recoveryPhrasePrefix}.title`,\r\n    defaultMessage: 'Recovery Phrase',\r\n  },\r\n  RECOVERY_PHRASE_NOTIFICATION_TITLE: {\r\n    id: `${recoveryPhrasePrefix}.notification.title`,\r\n    defaultMessage: 'Please back up recovery phrase',\r\n  },\r\n  RECOVERY_PHRASE_NOTIFICATION_DESCRIPTION: {\r\n    id: `${recoveryPhrasePrefix}.notification.description`,\r\n    defaultMessage:\r\n      'Back up the text below on paper and keep it somewhere secret and save.',\r\n  },\r\n  RECOVERY_PHRASE_BUTTON_SAVE: {\r\n    id: `${recoveryPhrasePrefix}.button.save`,\r\n    defaultMessage: 'Save Recovery Phrase',\r\n  },\r\n  RECOVERY_PHRASE_BUTTON_VIEW_PRIVATE_KEY: {\r\n    id: `${recoveryPhrasePrefix}.button.view.privatekey`,\r\n    defaultMessage: 'View my private key',\r\n  },\r\n  RECOVERY_PHRASE_BUTTON_CONFIRMATION: {\r\n    id: `${recoveryPhrasePrefix}.button.confirmation`,\r\n    defaultMessage: 'I Wrote My Recovery Phrase',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_CONFIRMATION_IMAGE_ALT: {\r\n    id: `${recoveryPhrasePrefix}.popup.confirmation.image.alt`,\r\n    defaultMessage: 'Did you note down?',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_CONFIRMATION_HEADER: {\r\n    id: `${recoveryPhrasePrefix}.popup.confirmation.header`,\r\n    defaultMessage: 'Recovery Phrase?',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_CONFIRMATION_CONTENT: {\r\n    id: `${recoveryPhrasePrefix}.popup.confirmation.content`,\r\n    defaultMessage: 'Are you sure you have noted down your Recovery Phrase?',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_KEY_VIEW_HEADER: {\r\n    id: `${recoveryPhrasePrefix}.popup.keyview.header`,\r\n    defaultMessage: 'Private Key',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_TITLE: {\r\n    id: `${recoveryPhrasePrefix}.popup.keyview.content.title`,\r\n    defaultMessage: 'Your private key',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_TEXT: {\r\n    id: `${recoveryPhrasePrefix}.popup.keyview.content.text`,\r\n    defaultMessage:\r\n      'Back up the text below on paper and keep it somewhere secret and save.',\r\n  },\r\n  RECOVERY_PHRASE_POPUP_KEY_VIEW_CONTENT_QRCODE_ALT: {\r\n    id: `${recoveryPhrasePrefix}.popup.keyview.content.qrcode.alt`,\r\n    defaultMessage:\r\n      'Click here to view QR Code. Make sure no one else is looking!',\r\n  },\r\n  // Create Wallet - Mnemonic Verification Page\r\n  VERIFICATION_TITLE: {\r\n    id: `${verificationPrefix}.title`,\r\n    defaultMessage: 'Verification',\r\n  },\r\n  VERIFICATION_DESCRIPTION: {\r\n    id: `${verificationPrefix}.description`,\r\n    defaultMessage:\r\n      'Verify your Recovery Phrase. Choose each word in the correct order',\r\n  },\r\n  VERIFICATION_BUTTON_VERIFY: {\r\n    id: `${verificationPrefix}.button.verify`,\r\n    defaultMessage: 'Verify',\r\n  },\r\n  VERIFICATION_ERROR_VERIFY_FAILED: {\r\n    id: `${verificationPrefix}.error.verify.failed`,\r\n    defaultMessage: 'Incorrect recovery phrase order.',\r\n  },\r\n  // Create Wallet - Success Notification Page\r\n  SUCCESS_NOTIFICATION_IMAGE_ALT: {\r\n    id: `${successNotificationPrefix}.image.alt`,\r\n    defaultMessage: 'Success!',\r\n  },\r\n  SUCCESS_NOTIFICATION_CONTENT_TITLE: {\r\n    id: `${successNotificationPrefix}.content.title`,\r\n    defaultMessage: 'Successful',\r\n  },\r\n  SUCCESS_NOTIFICATION_CONTENT_DESCRIPTION: {\r\n    id: `${successNotificationPrefix}.content.description`,\r\n    defaultMessage: \"You've created your new wallet successfully\",\r\n  },\r\n  SUCCESS_NOTIFICATION_BUTTON_ACCESS_WALLET: {\r\n    id: `${successNotificationPrefix}.button.accesswallet`,\r\n    defaultMessage: 'Access your wallet now',\r\n  },\r\n  // Import Wallet Page\r\n  IMPORT_WALLET_HEADER_TITLE: {\r\n    id: `${importWalletPagePrefix}.header.title`,\r\n    defaultMessage: 'Import Your Wallet',\r\n  },\r\n  IMPORT_WALLET_ALTERNATIVE_TEXT: {\r\n    id: `${importWalletPagePrefix}.alternative.text`,\r\n    defaultMessage: 'Do not have a wallet?',\r\n  },\r\n  IMPORT_WALLET_ALTERNATIVE_LINK: {\r\n    id: `${importWalletPagePrefix}.alternative.link`,\r\n    defaultMessage: 'Create a new wallet',\r\n  },\r\n  IMPORT_WALLET_TAB_LEDGER_IMAGE_ALT: {\r\n    id: `${importWalletPagePrefix}.tab.ledger.image.alt`,\r\n    defaultMessage: 'Ledger',\r\n  },\r\n  IMPORT_WALLET_TAB_LEDGER_TEXT: {\r\n    id: `${importWalletPagePrefix}.tab.ledger.text`,\r\n    defaultMessage: 'Ledger Wallet',\r\n  },\r\n  IMPORT_WALLET_TAB_LEDGER_INPUT_LABEL: {\r\n    id: `${importWalletPagePrefix}.tab.ledger.input.label`,\r\n    defaultMessage: 'Select HD derivation path',\r\n  },\r\n  IMPORT_WALLET_TAB_LEDGER_INPUT_PLACEHOLDER: {\r\n    id: `${importWalletPagePrefix}.tab.ledger.input.placeholder`,\r\n    defaultMessage: 'Select HD derivation path...',\r\n  },\r\n  IMPORT_WALLET_TAB_LEDGER_INPUT_DESCRIPTION: {\r\n    id: `${importWalletPagePrefix}.tab.ledger.input.description`,\r\n    defaultMessage:\r\n      'To unlock the wallet, try paths {path1} or {path2} with Ethereum App, or try path {path3} with TomoChain App (on Ledger)',\r\n  },\r\n  IMPORT_WALLET_TAB_RECOVERY_PHRASE_TEXT: {\r\n    id: `${importWalletPagePrefix}.tab.recoveryphrase.text`,\r\n    defaultMessage: 'Recovery Phrase/ Private Key',\r\n  },\r\n  IMPORT_WALLET_TAB_RECOVERY_PHRASE_INPUT_LABEL: {\r\n    id: `${importWalletPagePrefix}.tab.recoveryphrase.input.label`,\r\n    defaultMessage: 'Enter your Recovery Phrase or Private Key',\r\n  },\r\n  IMPORT_WALLET_TAB_RECOVERY_PHRASE_INPUT_PLACEHOLDER: {\r\n    id: `${importWalletPagePrefix}.tab.recoveryphrase.input.placeholder`,\r\n    defaultMessage: 'Enter your Recovery Phrase or Private Key...',\r\n  },\r\n  IMPORT_WALLET_TAB_RECOVERY_PHRASE_OPTION_IMPORT_VIA_QRCODE: {\r\n    id: `${importWalletPagePrefix}.tab.recoveryphrase.option.importviaqrcode`,\r\n    defaultMessage: 'Import Private Key via QR code',\r\n  },\r\n  IMPORT_WALLET_ERROR_INVALID_RECOVERY_PHRASE: {\r\n    id: `${importWalletPagePrefix}.error.invalid.recoveryphrase`,\r\n    defaultMessage: 'Invalid recovery phrase/private key',\r\n  },\r\n  IMPORT_WALLET_ERROR_INVALID_HD_PATH: {\r\n    id: `${importWalletPagePrefix}.error.invalid.hdpath`,\r\n    defaultMessage: 'Invalid HD Path',\r\n  },\r\n  IMPORT_WALLET_POPUP_ADDRESS_TITLE: {\r\n    id: `${importWalletPagePrefix}.popup.address.title`,\r\n    defaultMessage: 'Ledger Wallet',\r\n  },\r\n  // My Wallet Page\r\n  MY_WALLET_SECTION_ADDRESS_TITLE: {\r\n    id: `${myWalletPagePrefix}.section.address.title`,\r\n    defaultMessage: 'Address',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_TITLE: {\r\n    id: `${myWalletPagePrefix}.table.tab.portfolio.title`,\r\n    defaultMessage: 'PORFOLIO',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_TOKEN_NAME: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.tokenname`,\r\n    defaultMessage: 'Token name',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_BALANCE: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.balance`,\r\n    defaultMessage: 'Balance',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_VALUE: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.value`,\r\n    defaultMessage: 'Value (USD)',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_PRICE: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.price`,\r\n    defaultMessage: 'Price (USD)',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_SEND: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.send`,\r\n    defaultMessage: 'Send',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_HEADER_RECEIVE: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.header.receive`,\r\n    defaultMessage: 'Receive',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_CELL_TOKEN_NAME_IMAGE_ALT: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.cell.tokenname.image.alt`,\r\n    defaultMessage: '{name} Symbol',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_CELL_TOKEN_NAME_PUBLISHER: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.cell.tokenname.publisher`,\r\n    defaultMessage: 'TomoChain',\r\n  },\r\n  MY_WALLET_TABLE_PORFOLIO_ERROR_LOAD_FAILED: {\r\n    id: `${myWalletPagePrefix}.table.portfolio.error.load.failed`,\r\n    defaultMessage: 'Cannot load token list!',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTION_TITLE: {\r\n    id: `${myWalletPagePrefix}.table.tab.transaction.title`,\r\n    defaultMessage: 'TRANSACTIONS',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_TOKEN_TYPE: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.tokentype`,\r\n    defaultMessage: 'Token',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_TX_HASH: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.txhash`,\r\n    defaultMessage: 'Txn Hash',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_CREATE_TIME: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.createtime`,\r\n    defaultMessage: 'Age',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_FROM: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.from`,\r\n    defaultMessage: 'From',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_TO: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.to`,\r\n    defaultMessage: 'To',\r\n  },\r\n  MY_WALLET_TABLE_TRANSACTIONS_HEADER_QUANTITY: {\r\n    id: `${myWalletPagePrefix}.table.transactions.header.quantity`,\r\n    defaultMessage: 'Quantity',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_TITLE: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.title`,\r\n    defaultMessage: 'Send',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_TOKEN_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.token.label`,\r\n    defaultMessage: 'Token',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_TOKEN_PLACEHOLDER: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.token.placeholder`,\r\n    defaultMessage: 'Select token...',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_RECIPIENT_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.recipient.label`,\r\n    defaultMessage: 'Recipient',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_RECIPIENT_PLACEHOLDER: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.recipient.placeholder`,\r\n    defaultMessage: 'Paste or scan an address...',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_TRANSFER_AMOUNT_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.transferamount.label`,\r\n    defaultMessage: 'Transfer Amount',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_TRANSFER_AMOUNT_PLACEHOLDER: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.transferamount.placeholder`,\r\n    defaultMessage: 'Add amount token...',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_MESSAGE_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.message.label`,\r\n    defaultMessage: 'Message',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_MESSAGE_PLACEHOLDER: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.message.placeholder`,\r\n    defaultMessage: 'Write message...',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_AMOUNT_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.amount.label`,\r\n    defaultMessage: 'Amount',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_FROM_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.from.label`,\r\n    defaultMessage: 'From',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INPUT_TO_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.input.to.label`,\r\n    defaultMessage: 'To',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_INFO_TRANSACTION_FEE_LABEL: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.info.transactionfee.label`,\r\n    defaultMessage: 'Transaction fee',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_TOKEN_REQUIRED: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.token.required`,\r\n    defaultMessage: 'Please choose a token',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_RECIPIENT_REQUIRED: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.recipient.required`,\r\n    defaultMessage: 'Please enter a recipient address',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_RECIPIENT_INVALID: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.recipient.invalid`,\r\n    defaultMessage: 'This recipient is invalid',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_AMOUNT_REQUIRED: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.amount.required`,\r\n    defaultMessage: 'Please enter an amount of token',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_AMOUNT_INVALID: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.amount.invalid`,\r\n    defaultMessage: 'Transfer amount is not correct',\r\n  },\r\n  MY_WALLET_POPUP_SEND_TOKEN_ERROR_MESSAGE_MAXLENGTH: {\r\n    id: `${myWalletPagePrefix}.popup.sendtoken.error.message.maxlength`,\r\n    defaultMessage: 'Message exceeds maximum 255 characters',\r\n  },\r\n  MY_WALLET_POPUP_SUCCESS_INFO_AMOUNT_SENT: {\r\n    id: `${myWalletPagePrefix}.popup.success.info.amountsent`,\r\n    defaultMessage: 'You have sent',\r\n  },\r\n  MY_WALLET_POPUP_SUCCESS_INFO_TRANSACTION_HASH: {\r\n    id: `${myWalletPagePrefix}.popup.success.info.transactionhash`,\r\n    defaultMessage: 'Transaction hash',\r\n  },\r\n  MY_WALLET_POPUP_RECEIVE_TOKEN_TITLE: {\r\n    id: `${myWalletPagePrefix}.popup.receivetoken.title`,\r\n    defaultMessage: 'Receive',\r\n  },\r\n  MY_WALLET_POPUP_RECEIVE_TOKEN_CONTENT_MESSAGE: {\r\n    id: `${myWalletPagePrefix}.popup.receivetoken.content.message`,\r\n    defaultMessage: 'Your address supports transferring to TOMO and its token',\r\n  },\r\n});\r\n// ====================\r\n","/**\r\n *\r\n * TomoWallet - Lists\r\n *\r\n * This file stores all kinds of data list that'll be used in web app\r\n */\r\n// ===== IMPORTS =====\r\n// Utilities & Constants\r\nimport { getMessage } from '../components/IntlProvider';\r\nimport MSG from './messages';\r\nimport RPC_SERVER from './rpcServers';\r\n// ===================\r\n\r\n// ===== LISTS =====\r\n// Webpage Languages\r\nconst LANGUAGES = [\r\n  {\r\n    label: getMessage(MSG.COMMON_LIST_LANGUAGE_ENGLISH),\r\n    value: 'en',\r\n  },\r\n  {\r\n    label: getMessage(MSG.COMMON_LIST_LANGUAGE_FRENCH),\r\n    value: 'fr',\r\n  },\r\n];\r\n\r\n// Webpage Networks\r\nconst NETWORKS = [\r\n  {\r\n    label: getMessage(MSG.COMMON_LIST_NETWORK_TOMOCHAIN_TESTNET),\r\n    value: Object.keys(RPC_SERVER)[0],\r\n  },\r\n  {\r\n    label: getMessage(MSG.COMMON_LIST_NETWORK_TOMOCHAIN_MAINNET),\r\n    value: Object.keys(RPC_SERVER)[1],\r\n  },\r\n];\r\n\r\n// My Wallet - Table Types\r\nconst MY_WALLET_TABLE_TYPES = [\r\n  {\r\n    label: getMessage(MSG.MY_WALLET_TABLE_PORFOLIO_TITLE),\r\n    value: '1',\r\n  },\r\n  {\r\n    label: getMessage(MSG.MY_WALLET_TABLE_TRANSACTION_TITLE),\r\n    value: '2',\r\n  },\r\n];\r\n// =================\r\n\r\nexport default {\r\n  LANGUAGES,\r\n  NETWORKS,\r\n  MY_WALLET_TABLE_TYPES,\r\n};\r\n","/**\r\n *\r\n * TomoWallet - Constants - APIs\r\n *\r\n */\r\n// Base URLs\r\nconst WALLET_TESTNET = 'https://apiwallet.testnet.tomochain.com';\r\nconst SCAN_TESTNET = 'https://scan.testnet.tomochain.com';\r\n\r\nexport default {\r\n  GET_TOKENS: `${WALLET_TESTNET}/api/tokens`,\r\n  GET_TRANSACTIONS: `${SCAN_TESTNET}/api/txs/listByType/normalTsx`,\r\n};\r\n","import RPC_SERVER from './rpcServers';\r\nimport ENUM from './enums';\r\nimport ROUTE from './routes';\r\nimport LIST from './lists';\r\nimport MSG from './messages';\r\nimport API from './apis';\r\n\r\nexport { RPC_SERVER, ENUM, ROUTE, LIST, MSG, API };\r\n","/**\r\n *\r\n * TomoWallet - Utility - Blockchain supported methods\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport Web3 from 'web3';\r\nimport HDWalletProvider from 'truffle-hdwallet-provider';\r\nimport _isEmpty from 'lodash.isempty';\r\nimport _isEqual from 'lodash.isequal';\r\n// Utilities & Constants\r\nimport { ENUM } from '../constants';\r\nimport trc20 from '../contractABIs/trc20.json';\r\nimport trc21 from '../contractABIs/trc21.json';\r\n// ===================\r\n\r\n// ===== METHODS =====\r\n/**\r\n * mnemonicToPrivateKey\r\n *\r\n * Get private key from mnemonic and RPC server's HD path\r\n * @param {String} mnemonic A string of 12 words\r\n * @param {Object} serverConfig Current RPC server configurations\r\n */\r\nconst mnemonicToPrivateKey = (mnemonic = '', serverConfig = {}) => {\r\n  const web3 = generateWeb3(mnemonic, serverConfig);\r\n  if (web3) {\r\n    const pkInBytes =\r\n      web3.currentProvider.wallets[web3.currentProvider.addresses[0]]._privKey;\r\n\r\n    return web3.utils.bytesToHex(pkInBytes);\r\n  }\r\n  return '';\r\n};\r\n\r\n/**\r\n * generateWeb3\r\n *\r\n * Create a new Web3 object with provided mnemonic & RPC server configurations\r\n * @param {String} mnemonic A string of 12 words\r\n * @param {Object} serverConfig Current RPC server configurations\r\n * @param {function} callback Action to handle error cases\r\n */\r\nconst generateWeb3 = (\r\n  mnemonic = '',\r\n  serverConfig = {},\r\n  callback = () => {},\r\n) => {\r\n  const { host, hdPath } = serverConfig;\r\n  let provider;\r\n  try {\r\n    provider = new HDWalletProvider(mnemonic, host, 0, 1, true, hdPath);\r\n    return new Web3(provider);\r\n  } catch (error) {\r\n    callback(error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * getWalletInfo\r\n *\r\n * Retrieve some wallet's basic information from a Web3 object\r\n * @param {Web3} web3 A Web3 object with supported APIs\r\n */\r\nconst getWalletInfo = web3 => {\r\n  if (web3) {\r\n    const address = web3.currentProvider.addresses[0];\r\n    return web3.eth.getBalance(address).then(balance => ({\r\n      address,\r\n      balance: Number(web3.utils.fromWei(balance)),\r\n    }));\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * initiateWallet\r\n *\r\n * Initiate Web3 & wallet information when refreshing page\r\n * @param {String} mnemonic A string of recovery phrase for wallet access\r\n * @param {Object} serverConfig RPC server configuration properties\r\n * @param {Function} callback Method to catch exception\r\n */\r\nconst initiateWallet = (mnemonic, serverConfig, callback = () => {}) => {\r\n  const web3 = generateWeb3(mnemonic, serverConfig, callback);\r\n  return getWalletInfo(web3).then(walletInfo => ({\r\n    web3,\r\n    walletInfo,\r\n  }));\r\n};\r\n\r\n/**\r\n * decryptWalletInfo\r\n *\r\n * Decrypt current encrypted wallet info by password\r\n * @param {Web3} web3 A Web3 object with supported APIs\r\n * @param {Wallet} rawInfo Encrypted Wallet object\r\n */\r\nconst decryptWalletInfo = (web3, rawInfo) => {\r\n  if (web3 && rawInfo) {\r\n    return web3.eth.accounts.wallet.decrypt(\r\n      rawInfo,\r\n      process.env.REACT_APP_WALLET_ENCRYPT_PASSWORD,\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * estimateTRC20Gas\r\n *\r\n * Retrieve gas price for the specific transaction\r\n * @param {Web3} web3 A Web3 object with supported APIs\r\n * @param {Object} txData A transaction object (including from, to, value, ...)\r\n */\r\nconst estimateTRC20Gas = (web3, txData) => {\r\n  return web3.eth.estimateGas(txData);\r\n};\r\n\r\n/**\r\n * sendToken\r\n *\r\n * Execute token transfer contract\r\n * @param {Web3} web3 A Web3 object with supported APIs\r\n * @param {*} contractData An object which contains contract data\r\n */\r\nconst sendToken = (web3, contractData) => {\r\n  const { amount, contractAddress, decimals, from, to, type } = contractData;\r\n\r\n  const contract = new web3.eth.Contract(\r\n    _isEqual(type, ENUM.TOKEN_TYPE.TRC21) ? trc21 : trc20,\r\n    contractAddress,\r\n  );\r\n  const weiAmount = web3.utils\r\n    .toBN(amount)\r\n    .mul(web3.utils.toBN(10 ** decimals))\r\n    .toString();\r\n  // In case token type is TRC21\r\n  if (_isEqual(type, ENUM.TOKEN_TYPE.TRC21)) {\r\n    return contract.methods\r\n      .estimateFee(weiAmount)\r\n      .call({ from, to })\r\n      .then(gasPrice =>\r\n        contract.methods\r\n          .transfer(to, weiAmount)\r\n          .send({ from, gasPrice: '250000000' })\r\n          .on('transactionHash', hash => {\r\n            repeatCall({\r\n              interval: 2000,\r\n              timeout: 10000,\r\n              action: () => {\r\n                return web3.eth.getTransactionReceipt(hash);\r\n              },\r\n            });\r\n          })\r\n          .catch(ex => {\r\n            console.log('[ERROR] -- ', ex);\r\n          }),\r\n      );\r\n  } else {\r\n    // In case token type is TRC20\r\n    return estimateTRC20Gas(web3, { from, to, value: weiAmount }).then(\r\n      gasPrice =>\r\n        contract.methods\r\n          .transfer(to, weiAmount)\r\n          .send({\r\n            from,\r\n            to: contractAddress,\r\n            gasPrice: '250000000',\r\n            gas: 50000,\r\n          })\r\n          .on('transactionHash', hash => {\r\n            repeatCall({\r\n              interval: 2000,\r\n              timeout: 10000,\r\n              action: () => {\r\n                return web3.eth.getTransactionReceipt(hash);\r\n              },\r\n            });\r\n          })\r\n          .catch(ex => {\r\n            console.log('[ERROR] -- ', ex);\r\n          }),\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * sendMoney\r\n *\r\n * Execute token transfer contract\r\n * @param {Web3} web3 A Web3 object with supported APIs\r\n * @param {*} contractData An object which contains contract data\r\n */\r\nconst sendMoney = (web3, transactionData) => {\r\n  const { amount, decimals, from, to } = transactionData;\r\n\r\n  const weiAmount = web3.utils\r\n    .toBN(amount)\r\n    .mul(web3.utils.toBN(10 ** decimals))\r\n    .toString();\r\n  return web3.eth.sendTransaction({\r\n    from,\r\n    to,\r\n    value: weiAmount,\r\n    gasPrice: '250000000',\r\n    gas: 50000,\r\n  });\r\n};\r\n\r\n/**\r\n * repeatCall\r\n *\r\n * Execute a Promise action repeatly until there's a result\r\n * @param {Object} param0 Set of parameters (interval, timeout, action)\r\n */\r\nconst repeatCall = ({ interval = 1000, timeout = 1000, action = () => {} }) => {\r\n  let intervalId = 0;\r\n  const wait = ms => new Promise(r => setTimeout(r, ms));\r\n  const repeat = (ms, func) =>\r\n    new Promise(r => {\r\n      intervalId = setInterval(func, ms);\r\n      wait(ms).then(r);\r\n    });\r\n  const stopAfter10Seconds = () =>\r\n    new Promise(r => r(setTimeout(() => clearInterval(intervalId)), 10000));\r\n  return repeat(\r\n    2000,\r\n    action().then(trans => {\r\n      if (!_isEmpty(trans)) {\r\n        clearInterval(intervalId);\r\n      }\r\n    }),\r\n  ).then(stopAfter10Seconds());\r\n};\r\n\r\n/**\r\n * fromWei\r\n *\r\n * Convert a Wei-format number into a decimal number\r\n * @param {Number} amount An amount of TOMO in Wei format\r\n */\r\nconst fromWei = amount => {\r\n  const web3 = new Web3();\r\n  return web3.utils.fromWei(amount);\r\n};\r\n// ===================\r\n\r\nexport {\r\n  decryptWalletInfo,\r\n  estimateTRC20Gas,\r\n  fromWei,\r\n  generateWeb3,\r\n  getWalletInfo,\r\n  initiateWallet,\r\n  mnemonicToPrivateKey,\r\n  sendMoney,\r\n  sendToken,\r\n};\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 726;","/**\r\n *\r\n * TomoWallet - Web3 Provider\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { Component, createContext } from 'react';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport Web3 from 'web3';\r\nimport _get from 'lodash.get';\r\nimport _isEmpty from 'lodash.isempty';\r\n// Utilities & Constants\r\nimport { FailureComponent, LoadingComponent } from './';\r\nimport { getWeb3Info, generateWeb3, getNetwork, setNetwork } from '../../utils';\r\nimport { RPC_SERVER, ENUM, LIST } from '../../constants';\r\n// ===================\r\n\r\n// ===== Web3 Context =====\r\nconst Web3Context = createContext({\r\n  web3: {},\r\n  web3Status: '',\r\n  switchRPCServer: () => {},\r\n});\r\n// ========================\r\n\r\n// ===== Web3 Provider Component =====\r\nclass Web3Provider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      web3: {},\r\n      status: ENUM.WEB3_STATUSES.LOADING,\r\n      error: null,\r\n      rpcServer: {},\r\n    };\r\n\r\n    // this.handleTryProvider = this.handleTryProvider.bind(this);\r\n    this.handleUpdateRpcServer = this.handleUpdateRpcServer.bind(this);\r\n    this.handleSetWeb3 = this.handleSetWeb3.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.handleTryProvider(localStorage.getItem('web3'), () =>\r\n    //   this.handleUpdateRpcServer(Object.keys(RPC_SERVER)[0]),\r\n    // );\r\n    const web3Info = getWeb3Info();\r\n    if (web3Info) {\r\n      const { recoveryPhrase, rpcServer } = web3Info;\r\n      const newWeb3 = generateWeb3(recoveryPhrase, rpcServer);\r\n\r\n      this.handleSetWeb3(newWeb3);\r\n    } else {\r\n      const storedNetwork = LIST.NETWORKS.find(\r\n        opt => opt.value === getNetwork(),\r\n      );\r\n      if (!_isEmpty(storedNetwork)) {\r\n        this.handleUpdateRpcServer(storedNetwork.value);\r\n      } else {\r\n        this.handleUpdateRpcServer(Object.keys(RPC_SERVER)[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // handleTryProvider(web3, next = null) {\r\n  //   if (web3) {\r\n  //     this.handleSetWeb3(web3);\r\n  //   } else if (next) {\r\n  //     next();\r\n  //   } else {\r\n  //     this.setState({\r\n  //       status: ENUM.WEB3_STATUSES.FAILED,\r\n  //       error: 'Unexpected Web3 error!',\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  handleUpdateRpcServer(newKey) {\r\n    this.setState(\r\n      {\r\n        rpcServer: _get(RPC_SERVER, newKey, {}),\r\n      },\r\n      () => {\r\n        setNetwork(newKey);\r\n        const newWeb3 = new Web3(\r\n          Web3.givenProvider || this.state.rpcServer.host,\r\n          null,\r\n          {},\r\n        );\r\n        this.handleSetWeb3(newWeb3);\r\n      },\r\n    );\r\n  }\r\n\r\n  handleSetWeb3(web3) {\r\n    this.setState({ web3: new Web3(web3) }, () =>\r\n      this.state.web3.eth.net\r\n        .isListening()\r\n        .then(() =>\r\n          this.setState({\r\n            status: ENUM.WEB3_STATUSES.INITIALIZED,\r\n          }),\r\n        )\r\n        .catch(() => this.setState({ status: ENUM.WEB3_STATUSES.FAILED })),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { web3, status, rpcServer } = this.state;\r\n\r\n    return (\r\n      <Web3Context.Provider\r\n        value={{\r\n          web3,\r\n          web3Status: status,\r\n          rpcServer,\r\n          switchRPCServer: this.handleUpdateRpcServer,\r\n          updateWeb3: this.handleSetWeb3,\r\n        }}\r\n      >\r\n        {children}\r\n      </Web3Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Web3Provider;\r\n// ===================================\r\n\r\n// ===== Web3 Injection =====\r\nexport const withWeb3 = WrappedComponent => {\r\n  class Web3Consumer extends Component {\r\n    render() {\r\n      return (\r\n        <Web3Context.Consumer>\r\n          {({ web3, rpcServer, switchRPCServer, updateWeb3 }) => (\r\n            <WrappedComponent\r\n              {...this.props}\r\n              web3={web3}\r\n              rpcServer={rpcServer}\r\n              switchRPCServer={switchRPCServer}\r\n              updateWeb3={updateWeb3}\r\n            />\r\n          )}\r\n        </Web3Context.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (WrappedComponent.defaultProps) {\r\n    Web3Consumer.defaultProps = { ...WrappedComponent.defaultProps };\r\n  }\r\n\r\n  return hoistNonReactStatics(Web3Consumer, WrappedComponent);\r\n};\r\n\r\nexport const withWeb3AndState = WrappedComponent => {\r\n  class Web3AndStateConsumer extends Component {\r\n    render() {\r\n      return (\r\n        <Web3Context.Consumer>\r\n          {({ web3, web3Status, rpcServer, switchRPCServer, updateWeb3 }) =>\r\n            (web3Status === ENUM.WEB3_STATUSES.LOADING && (\r\n              <LoadingComponent />\r\n            )) ||\r\n            (web3Status === ENUM.WEB3_STATUSES.FAILED && (\r\n              <FailureComponent />\r\n            )) ||\r\n            (web3Status === ENUM.WEB3_STATUSES.INITIALIZED && (\r\n              <WrappedComponent\r\n                {...this.props}\r\n                web3={web3}\r\n                web3Status={web3Status}\r\n                rpcServer={rpcServer}\r\n                switchRPCServer={switchRPCServer}\r\n                updateWeb3={updateWeb3}\r\n              />\r\n            ))\r\n          }\r\n        </Web3Context.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (WrappedComponent.defaultProps) {\r\n    Web3AndStateConsumer.defaultProps = { ...WrappedComponent.defaultProps };\r\n  }\r\n\r\n  return hoistNonReactStatics(Web3AndStateConsumer, WrappedComponent);\r\n};\r\n// ==========================\r\n","import React from 'react';\r\n\r\nexport default () => <span>Loading...</span>;\r\n","import React from 'react';\r\n\r\nexport default () => <span>Failed to load Web3.</span>;\r\n","import Web3Provider, { withWeb3, withWeb3AndState } from './Provider';\r\nimport LoadingComponent from './Loading';\r\nimport FailureComponent from './Failure';\r\n\r\nexport {\r\n  Web3Provider,\r\n  LoadingComponent,\r\n  FailureComponent,\r\n  withWeb3,\r\n  withWeb3AndState,\r\n};\r\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./app.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.i(require(\"-!../../../node_modules/css-loader/dist/cjs.js!./iconfont/style.css\"), \"\");\n// Module\nexports.push([module.id, \"*{box-sizing:border-box}body{background-color:#202533;font-size:14px;color:#9eaacc;line-height:1.7;min-height:100vh;font-family:'Nunito Sans', sans-serif}a{transition:all 0.3s}a:hover{text-decoration:none !important}.maincontent{min-height:calc(100vh - 179px)}@media (max-width: 768px){.maincontent{min-height:calc(100vh - 134px - 85px)}}.maincontent .card{background:transparent;border:0}.maincontent .card .card-header,.maincontent .card .card-body,.maincontent .card .card-footer{background:transparent;padding:0;border:0}.maincontent .card .card-header{text-align:center}.maincontent .card .card-body{padding:3em 0}.maincontent .card .box-border{border-radius:8px;border:1px solid #444b64}.form-group{margin-bottom:0}.form-group label{display:block;color:#5e677f}.form-group label svg{width:12px;margin-left:5px;color:#e4ae63}.form-group .box_select .my-select__input{display:inline-block;height:0;width:0;overflow:hidden}.form-group .box_select .my-select__indicator{color:#3A8ECC}.form-group .box_select>div{background-color:#2d344a !important;border-radius:8px;border:0;min-height:44px}.form-group .box_select.my-select--is-disabled>div{background-color:#212531 !important}.form-group .box_select.my-select--is-disabled .my-select__indicator{color:#444b64}.form-group .box_select .select_option{padding:1em}.form-group .box_select .select_option img,.form-group .box_select .select_option_active img{height:16px;margin-right:10px}.form-group .text-placeholder{color:#444b64}.form-group .input-group-append button{background-color:#2d344a !important;border-radius:0 8px 8px 0 !important;border:0;color:#9eaacc;font-size:14px;text-transform:uppercase;position:relative}.form-group .input-group-append button::before{background-color:#272d40;content:'';border-radius:8px;width:1px;height:70%;top:50%;left:0;position:absolute;transform:translateY(-50%)}.form-group .input-group-append button:focus,.form-group .input-group-append button:active,.form-group .input-group-append button:active:focus{box-shadow:0 0 0 0px #5692cd !important;background-color:transparent}.form-group .input-group-append button:hover{background-color:#2D344A}.form-group input,.form-group textarea{border-radius:8px;background-color:#2d344a;border:0;color:#9eaacc;font-size:14px;height:44px}.form-group input::placeholder,.form-group textarea::placeholder{color:#444b64;font-size:13px;font-family:'Nunito Sans', sans-serif}.form-group input:focus,.form-group input:active .form-group input:active:focus,.form-group textarea:focus,.form-group textarea:active .form-group input:active:focus,.form-group input:active .form-group textarea:active:focus,.form-group textarea:active .form-group textarea:active:focus{box-shadow:0 0 0 1px #5692cd;background-color:transparent;color:#9eaacc}.form-group textarea{padding:1em;height:120px}.cm_form .form-group{margin-bottom:2em}.box-confirmation>div{padding:1em 0}.box-confirmation>div>div{list-style:1.4}.box-confirmation>div>div:first-child{color:#5E677F}.font-icon-checkmark-outline{color:#e4ae63;font-size:60px}.word-break{word-break:break-word}.modal-content{border-radius:8px;background-color:#272d40}.modal-content .modal-title{color:#ffffff;font-size:18px;font-weight:600;text-transform:uppercase;text-align:center;font-family:'Bai Jamjuree', sans-serif}.border{border:1px solid #444b64 !important}.w-80{width:80px}.box-address{border-radius:8px;background-color:#272d40;padding:1em 2em}.main_tab ul.nav-tabs{border:0}.main_tab ul.nav-tabs .nav-link{background:transparent !important;border:0;color:#5e677f;margin-right:50px;padding:0 0 5px;cursor:pointer;position:relative}.main_tab ul.nav-tabs .nav-link.active{color:#9eaacc}.main_tab ul.nav-tabs .nav-link.active::before{content:'';background-color:#5692cd;border-radius:25px;width:30px;height:2px;position:absolute;bottom:0;left:0}@media (max-width: 768px){.mb-text-center{text-align:center}}@media (max-width: 768px){.footer-menu{justify-content:center}}.footer-buttons{padding-top:15px;list-style-type:none;margin:0;padding:0;display:flex;justify-content:flex-end}@media (max-width: 768px){.footer-buttons{justify-content:center}}.footer-buttons li{display:inline-block;padding:5px}.footer-buttons li a{background:#272d40;border-radius:8px;color:#5e677f;display:flex;align-items:center;justify-content:center;width:30px;height:30px}.footer-buttons li a i{transition:all 0.3s}.footer-buttons li a:hover i{color:#fff}\\n\", \"\"]);\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nvar getUrl = require(\"../../../../node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL___0___ = getUrl(require(\"./fonts/tomowallet.eot?s26itu\"));\nvar ___CSS_LOADER_URL___1___ = getUrl(require(\"./fonts/tomowallet.eot?s26itu\") + \"#iefix\");\nvar ___CSS_LOADER_URL___2___ = getUrl(require(\"./fonts/tomowallet.ttf?s26itu\"));\nvar ___CSS_LOADER_URL___3___ = getUrl(require(\"./fonts/tomowallet.woff?s26itu\"));\nvar ___CSS_LOADER_URL___4___ = getUrl(require(\"./fonts/tomowallet.svg?s26itu\") + \"#tomowallet\");\n// Module\nexports.push([module.id, \"@font-face {\\r\\n  font-family: 'tomowallet';\\r\\n  src:  url(\" + ___CSS_LOADER_URL___0___ + \");\\r\\n  src:  url(\" + ___CSS_LOADER_URL___1___ + \") format('embedded-opentype'),\\r\\n    url(\" + ___CSS_LOADER_URL___2___ + \") format('truetype'),\\r\\n    url(\" + ___CSS_LOADER_URL___3___ + \") format('woff'),\\r\\n    url(\" + ___CSS_LOADER_URL___4___ + \") format('svg');\\r\\n  font-weight: normal;\\r\\n  font-style: normal;\\r\\n}\\r\\n\\r\\ni {\\r\\n  /* use !important to prevent issues with browser extensions that change fonts */\\r\\n  font-family: 'tomowallet' !important;\\r\\n  speak: none;\\r\\n  font-style: normal;\\r\\n  font-weight: normal;\\r\\n  font-variant: normal;\\r\\n  text-transform: none;\\r\\n  line-height: 1;\\r\\n\\r\\n  /* Better Font Rendering =========== */\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n}\\r\\n\\r\\n.font-icon-angle-double-left:before {\\r\\n  content: \\\"\\\\e900\\\";\\r\\n}\\r\\n.font-icon-angle-double-right:before {\\r\\n  content: \\\"\\\\e901\\\";\\r\\n}\\r\\n.font-icon-angle-down:before {\\r\\n  content: \\\"\\\\e902\\\";\\r\\n}\\r\\n.font-icon-angle-left:before {\\r\\n  content: \\\"\\\\e903\\\";\\r\\n}\\r\\n.font-icon-angle-right:before {\\r\\n  content: \\\"\\\\e904\\\";\\r\\n}\\r\\n.font-icon-angle-up:before {\\r\\n  content: \\\"\\\\e905\\\";\\r\\n}\\r\\n.font-icon-email:before {\\r\\n  content: \\\"\\\\e906\\\";\\r\\n}\\r\\n.font-icon-facebook:before {\\r\\n  content: \\\"\\\\e907\\\";\\r\\n}\\r\\n.font-icon-github:before {\\r\\n  content: \\\"\\\\e908\\\";\\r\\n}\\r\\n.font-icon-linkedin:before {\\r\\n  content: \\\"\\\\e909\\\";\\r\\n}\\r\\n.font-icon-telegram:before {\\r\\n  content: \\\"\\\\e90b\\\";\\r\\n}\\r\\n.font-icon-tomoz:before {\\r\\n  content: \\\"\\\\e90c\\\";\\r\\n}\\r\\n.font-icon-twitter:before {\\r\\n  content: \\\"\\\\e90d\\\";\\r\\n}\\r\\n.font-icon-wallet:before {\\r\\n  content: \\\"\\\\e90e\\\";\\r\\n}\\r\\n.font-icon-reddit:before {\\r\\n  content: \\\"\\\\e90f\\\";\\r\\n}\\r\\n.font-icon-next-right:before {\\r\\n  content: \\\"\\\\e910\\\";\\r\\n}\\r\\n.font-icon-startup:before {\\r\\n  content: \\\"\\\\e911\\\";\\r\\n}\\r\\n.font-icon-checkmark-outline:before {\\r\\n  content: \\\"\\\\e912\\\";\\r\\n}\\r\\n.font-icon-edit-pencil:before {\\r\\n  content: \\\"\\\\e913\\\";\\r\\n}\\r\\n\", \"\"]);\n","module.exports = __webpack_public_path__ + \"1281c6bece02ff950e5efc038a9f36be.ttf\";","module.exports = __webpack_public_path__ + \"9ee086fb60064a4fb669232c78c2e2f7.woff\";","module.exports = __webpack_public_path__ + \"262d6bed762a66d85fc5cf2f6dd8bf12.svg\";","/**\r\n *\r\n * TomoWallet - Loading Screen - Style\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport styled from 'styled-components';\r\n// ===================\r\n\r\n// ===== STYLE =====\r\nconst LoadingStyler = styled.div`\r\n  display: ${({ loading }) => (loading ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding-left: calc(50vw - 30px);\r\n  padding-top: calc(50vh - 30px);\r\n  background-color: black;\r\n  opacity: 0.5;\r\n  .spinner-border {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\n`;\r\n// =================\r\n\r\nexport { LoadingStyler };\r\n","/**\r\n *\r\n * TomoWallet - Loading Component\r\n *\r\n * This component defines a loading cover screen whenever a Web3 action is triggered.\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Spinner } from 'reactstrap';\r\n// Custom Components\r\nimport { LoadingStyler } from './style';\r\n// Utilities\r\nimport { selectLoading } from '../../containers/Global/selectors';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass LoadingScreen extends PureComponent {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <LoadingStyler loading={loading}>\r\n        <Spinner color='secondary' />\r\n      </LoadingStyler>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nLoadingScreen.propTypes = {\r\n  /** Condition flag to show/hide loading screen */\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nLoadingScreen.defaultProps = {\r\n  loading: false,\r\n};\r\n// ======================\r\n\r\n// ===== INJECTIONS =====\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    loading: selectLoading,\r\n  });\r\nconst withConnect = connect(mapStateToProps);\r\n// ======================\r\n\r\nexport default withConnect(LoadingScreen);\r\n","/**\r\n *\r\n * TomoWallet - Show Wallet Popup - Warning Content\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Constants\r\nimport { MSG } from '../../../../constants';\r\nimport VisualShowWallet from '../../../../assets/images/visual-showwallet.svg';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass WarningContent extends PureComponent {\r\n  render() {\r\n    const { formatMessage } = this.props;\r\n    return (\r\n      <div className='text-center content-warning'>\r\n        <div className='conntent-warning__image'>\r\n          <img\r\n            src={VisualShowWallet}\r\n            alt={formatMessage(\r\n              MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_IMAGE_ALT,\r\n            )}\r\n          />\r\n        </div>\r\n        <div>\r\n          {formatMessage(MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_WARNING_TEXT)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nWarningContent.propTypes = {\r\n  /** React Intl's API to get message */\r\n  formatMessage: PropTypes.func,\r\n};\r\n\r\nWarningContent.defaultProps = {\r\n  formatMessage: () => {},\r\n};\r\n// ======================\r\n\r\nexport default WarningContent;\r\n","/**\r\n *\r\n * TomoWallet - Show Wallet Popup - Wallet View Content\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _get from 'lodash.get';\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\r\nimport QRCode from 'qrcode.react';\r\n// Custom Components\r\nimport MnemonicBox from '../../../MnemonicBox';\r\n// Utilities, Constants & Styles\r\nimport { getWeb3Info, mnemonicToPrivateKey } from '../../../../utils';\r\nimport { WALLET_POPUP_CONTENT_TAB } from '../../../../containers/Global/constants';\r\nimport { MSG } from '../../../../constants';\r\nimport { BoxImages, TextBlue } from '../../../../styles';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass WalletViewContent extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCheckPrivateKey = this.handleCheckPrivateKey.bind(this);\r\n    this.handleGetPrivateKey = this.handleGetPrivateKey.bind(this);\r\n    this.handleGetRecoveryPhrase = this.handleGetRecoveryPhrase.bind(this);\r\n  }\r\n\r\n  handleCheckPrivateKey() {\r\n    const { isPrivateKey } = this.props;\r\n    const { recoveryPhrase } = getWeb3Info();\r\n    return isPrivateKey(recoveryPhrase);\r\n  }\r\n\r\n  handleGetPrivateKey() {\r\n    const { recoveryPhrase, rpcServer } = getWeb3Info();\r\n    if (this.handleCheckPrivateKey()) {\r\n      return `0x${recoveryPhrase.replace('0x', '')}`;\r\n    }\r\n    return mnemonicToPrivateKey(recoveryPhrase, rpcServer);\r\n  }\r\n\r\n  handleGetRecoveryPhrase() {\r\n    const { recoveryPhrase } = getWeb3Info();\r\n    return recoveryPhrase || '';\r\n  }\r\n\r\n  render() {\r\n    const { formatMessage, updateTab, walletPopup } = this.props;\r\n    const activeTab = _get(walletPopup, 'tabType');\r\n    const isLoggedInByPK = this.handleCheckPrivateKey();\r\n\r\n    return (\r\n      <div className='main_tab content-wallet-view'>\r\n        <Nav tabs className='mb-4'>\r\n          <NavItem>\r\n            {!isLoggedInByPK && (\r\n              <NavLink\r\n                active={activeTab === WALLET_POPUP_CONTENT_TAB.RECOVERY_PHRASE}\r\n                onClick={() =>\r\n                  updateTab(WALLET_POPUP_CONTENT_TAB.RECOVERY_PHRASE)\r\n                }\r\n              >\r\n                {formatMessage(\r\n                  MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_RECOVERY_PHRASE,\r\n                )}\r\n              </NavLink>\r\n            )}\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              active={activeTab === WALLET_POPUP_CONTENT_TAB.PRIVATE_KEY}\r\n              onClick={() => updateTab(WALLET_POPUP_CONTENT_TAB.PRIVATE_KEY)}\r\n            >\r\n              {formatMessage(\r\n                MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY,\r\n              )}\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={activeTab}>\r\n          {!isLoggedInByPK && (\r\n            <TabPane tabId={WALLET_POPUP_CONTENT_TAB.RECOVERY_PHRASE}>\r\n              <MnemonicBox mnemonic={this.handleGetRecoveryPhrase()} />\r\n            </TabPane>\r\n          )}\r\n          <TabPane\r\n            tabId={WALLET_POPUP_CONTENT_TAB.PRIVATE_KEY}\r\n            className='text-center mt-5'\r\n          >\r\n            <BoxImages className='mb-4'>\r\n              <QRCode value={this.handleGetPrivateKey()} />\r\n            </BoxImages>\r\n            <div className='text-break'>\r\n              <TextBlue>{this.handleGetPrivateKey()}</TextBlue>\r\n            </div>\r\n            <div className='mt-5'>\r\n              {formatMessage(\r\n                MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_TAB_PRIVATE_KEY_NOTE,\r\n              )}\r\n            </div>\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nWalletViewContent.propTypes = {\r\n  /** React Intl's API to get message */\r\n  formatMessage: PropTypes.func,\r\n  /** Action to check if the stored recovery phrase is private key */\r\n  isPrivateKey: PropTypes.func,\r\n  /** Action to change view's tab */\r\n  updateTab: PropTypes.func,\r\n  /** Wallet popup's data */\r\n  walletPopup: PropTypes.object,\r\n};\r\n\r\nWalletViewContent.defaultProps = {\r\n  formatMessage: () => {},\r\n  isPrivateKey: () => {},\r\n  updateTab: () => {},\r\n  walletPopup: {},\r\n};\r\n// ======================\r\n\r\nexport default WalletViewContent;\r\n","/**\r\n *\r\n * TomoWallet - Show Wallet Popup - Style\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport styled from 'styled-components';\r\n// Custom Component\r\nimport Popup from '../../../Popup';\r\n// ===================\r\n\r\n// ===== STYLE =====\r\nconst WalletPopupStyler = styled(Popup)`\r\n  max-width: 570px;\r\n  .modal-content {\r\n    min-height: 450px;\r\n    .modal-body {\r\n      .content-warning {\r\n        margin: auto;\r\n        max-width: 382px;\r\n        .conntent-warning__image {\r\n          margin: auto;\r\n          margin-bottom: 30px;\r\n          width: 245px;\r\n          text-align: center;\r\n          img {\r\n            max-height: 126px;\r\n          }\r\n        }\r\n      }\r\n      .content-wallet-view {\r\n        .nav-tabs {\r\n          display: flex;\r\n          justify-content: center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n// =================\r\n\r\nexport { WalletPopupStyler };\r\n","/**\r\n *\r\n * TomoWallet - Show Wallet Popup\r\n *\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport _get from 'lodash.get';\r\n// Custom Components\r\nimport Warning from './Warning';\r\nimport WalletView from './WalletView';\r\n// Utilities, Constants & Style\r\nimport { selectWalletPopup } from '../../../../containers/Global/selectors';\r\nimport { WALLET_POPUP_STAGE } from '../../../../containers/Global/constants';\r\nimport {\r\n  updateWalletPopupStage,\r\n  toggleWalletPopup,\r\n  updateWalletPopupContentTab,\r\n} from '../../../../containers/Global/actions';\r\nimport { withIntl } from '../../../IntlProvider';\r\nimport { withWeb3 } from '../../../Web3';\r\nimport { MSG } from '../../../../constants';\r\nimport { WalletPopupStyler } from './style';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass WalletPopup extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClosePopup = this.handleClosePopup.bind(this);\r\n    this.handleGetButton = this.handleGetButton.bind(this);\r\n    this.handleGetContent = this.handleGetContent.bind(this);\r\n  }\r\n\r\n  handleClosePopup() {\r\n    const { onTogglePopup } = this.props;\r\n    onTogglePopup(false);\r\n  }\r\n\r\n  handleGetButton() {\r\n    const {\r\n      intl: { formatMessage },\r\n      onUpdatePopupStage,\r\n      walletPopup,\r\n    } = this.props;\r\n\r\n    if (_get(walletPopup, 'stage') === WALLET_POPUP_STAGE.WARNING) {\r\n      return {\r\n        secondary: {\r\n          label: formatMessage(MSG.COMMON_BUTTON_BACK),\r\n          action: this.handleClosePopup,\r\n        },\r\n        primary: {\r\n          btnYellow: true,\r\n          label: formatMessage(MSG.COMMON_BUTTON_NEXT),\r\n          action: () => onUpdatePopupStage(WALLET_POPUP_STAGE.CONTENT),\r\n        },\r\n      };\r\n    } else if (_get(walletPopup, 'stage') === WALLET_POPUP_STAGE.CONTENT) {\r\n      return {\r\n        secondary: {\r\n          label: formatMessage(MSG.COMMON_BUTTON_BACK),\r\n          action: this.handleClosePopup,\r\n        },\r\n        primary: {\r\n          btnYellow: true,\r\n          label: formatMessage(MSG.COMMON_BUTTON_SAVE),\r\n        },\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  handleGetContent() {\r\n    const {\r\n      intl: { formatMessage },\r\n      onUpdatePopupContentTab,\r\n      walletPopup,\r\n      web3,\r\n    } = this.props;\r\n    if (_get(walletPopup, 'stage') === WALLET_POPUP_STAGE.WARNING) {\r\n      return {\r\n        Content: Warning,\r\n        getContentProps: {\r\n          formatMessage,\r\n        },\r\n      };\r\n    } else if (_get(walletPopup, 'stage') === WALLET_POPUP_STAGE.CONTENT) {\r\n      return {\r\n        Content: WalletView,\r\n        getContentProps: {\r\n          formatMessage,\r\n          isPrivateKey: web3.utils.isHex,\r\n          updateTab: onUpdatePopupContentTab,\r\n          walletPopup,\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      intl: { formatMessage },\r\n      walletPopup,\r\n    } = this.props;\r\n    return (\r\n      <WalletPopupStyler\r\n        {...this.handleGetContent()}\r\n        button={this.handleGetButton()}\r\n        isOpen={_get(walletPopup, 'isOpen', false)}\r\n        title={formatMessage(MSG.HEADER_NAVBAR_POPUP_SHOW_WALLET_TITLE)}\r\n      />\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nWalletPopup.propTypes = {\r\n  /** React Intl's instance object */\r\n  intl: PropTypes.object,\r\n  /** Action to show/hide wallet popup */\r\n  onTogglePopup: PropTypes.func,\r\n  /** Action to change wallet view's tab */\r\n  onUpdatePopupContentTab: PropTypes.func,\r\n  /** Action to change wallet popup stage */\r\n  onUpdatePopupStage: PropTypes.func,\r\n  /** Show wallet popup's data */\r\n  walletPopup: PropTypes.object,\r\n  /** Web3 object */\r\n  web3: PropTypes.object,\r\n};\r\n\r\nWalletPopup.defaultProps = {\r\n  intl: {},\r\n  onTogglePopup: () => {},\r\n  onUpdatePopupContentTab: () => {},\r\n  onUpdatePopupStage: () => {},\r\n  walletPopup: {},\r\n  web3: {},\r\n};\r\n// ======================\r\n\r\n// ===== INJECTIONS =====\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    walletPopup: selectWalletPopup,\r\n  });\r\nconst mapDispatchToProps = dispatch => ({\r\n  onTogglePopup: bool => dispatch(toggleWalletPopup(bool)),\r\n  onUpdatePopupContentTab: tabType =>\r\n    dispatch(updateWalletPopupContentTab(tabType)),\r\n  onUpdatePopupStage: stage => dispatch(updateWalletPopupStage(stage)),\r\n});\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n);\r\n// ======================\r\n\r\nexport default compose(\r\n  withIntl,\r\n  withConnect,\r\n  withWeb3,\r\n)(WalletPopup);\r\n","import styled from 'styled-components';\r\nimport {\r\n  Navbar,\r\n  NavLink,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n// Style Component//\r\n\r\nconst LinkHeader = styled(NavLink)`\r\n  color: #9eaacc !important;\r\n  font-weight: normal;\r\n`;\r\n\r\nconst DropdownToggleHeader = styled(DropdownToggle)`\r\n  color: #9eaacc !important;\r\n  font-weight: normal;\r\n`;\r\n\r\nconst NavBarStyler = styled(Navbar)`\r\n  padding: 15px 0;\r\n  width: 100%;\r\n  text-align: center;\r\n  .navbar-brand {\r\n    > img {\r\n      height: 45px;\r\n      width: auto;\r\n      max-width: 100%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .nav-item {\r\n    font-weight: bold;\r\n    &:not(:first-child) {\r\n      margin-left: 20px;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  NavBarStyler,\r\n  LinkHeader,\r\n  DropdownToggleHeader,\r\n};\r\n","// Modules\r\nimport React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport _get from 'lodash.get';\r\nimport _isEmpty from 'lodash.isempty';\r\nimport {\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  CardImg,\r\n} from 'reactstrap';\r\n// Custom Components\r\nimport WalletPopup from './subcomponents/WalletPopup';\r\nimport { NavBarStyler, LinkHeader, DropdownToggleHeader } from './style';\r\n// Utilities & Constants\r\nimport { withWeb3 } from '../Web3';\r\nimport { withIntl } from '../IntlProvider';\r\nimport {\r\n  releaseWallet,\r\n  toggleWalletPopup,\r\n  setNetwork,\r\n} from '../../containers/Global/actions';\r\nimport { ROUTE, LIST, MSG } from '../../constants';\r\nimport {\r\n  removeWeb3Info,\r\n  setLocale,\r\n  getLocale,\r\n  getNetwork,\r\n  removeLedger,\r\n  getLedger,\r\n} from '../../utils';\r\nimport { selectNetworkData } from '../../containers/Global/selectors';\r\nimport logo_tomochain from '../../assets/images/logo-tomochain.png';\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass NavigationBar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChangeLocale = this.handleChangeLocale.bind(this);\r\n    this.handleChangeNetwork = this.handleChangeNetwork.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.handleRedirectToHomepage = this.handleRedirectToHomepage.bind(this);\r\n    this.handleRenderPrivateBar = this.handleRenderPrivateBar.bind(this);\r\n    this.handleRenderPublicBar = this.handleRenderPublicBar.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { changeLocale, onSetNetwork } = this.props;\r\n    const storedNetwork = LIST.NETWORKS.find(opt => opt.value === getNetwork());\r\n    const storedLocale = getLocale();\r\n\r\n    if (!_isEmpty(storedNetwork)) {\r\n      onSetNetwork(storedNetwork);\r\n    }\r\n    if (!_isEmpty(storedLocale)) {\r\n      changeLocale(storedLocale);\r\n    }\r\n  }\r\n\r\n  handleChangeLocale(locale) {\r\n    const { changeLocale } = this.props;\r\n    setLocale(locale);\r\n    changeLocale(locale);\r\n  }\r\n\r\n  handleChangeNetwork(newNetwork) {\r\n    const { onSetNetwork, switchRPCServer } = this.props;\r\n    onSetNetwork(newNetwork);\r\n    switchRPCServer(newNetwork.value);\r\n    this.handleLogout();\r\n  }\r\n\r\n  handleLogout() {\r\n    const { onReleaseWallet } = this.props;\r\n\r\n    Promise.all([onReleaseWallet(), removeWeb3Info(), removeLedger()]).then(\r\n      () => this.handleRedirectToHomepage(),\r\n    );\r\n  }\r\n\r\n  handleRedirectToHomepage() {\r\n    const { history } = this.props;\r\n    history.push(ROUTE.LOGIN);\r\n  }\r\n\r\n  handleRenderPublicBar() {\r\n    const {\r\n      intl: { formatMessage },\r\n      language,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Nav className='ml-auto' navbar>\r\n          <NavItem>\r\n            <LinkHeader>\r\n              {formatMessage(MSG.HEADER_NAVBAR_OPTION_ABOUT)}\r\n            </LinkHeader>\r\n          </NavItem>\r\n          <NavItem>\r\n            <LinkHeader>\r\n              {formatMessage(MSG.HEADER_NAVBAR_OPTION_FAQS)}\r\n            </LinkHeader>\r\n          </NavItem>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggleHeader nav caret>\r\n              {(LIST.LANGUAGES.find(opt => opt.value === language) || {}).label}\r\n            </DropdownToggleHeader>\r\n            <DropdownMenu right>\r\n              {LIST.LANGUAGES.map((opt, optIdx) => (\r\n                <DropdownItem\r\n                  key={`language_${optIdx + 1}`}\r\n                  onClick={() => this.handleChangeLocale(opt.value)}\r\n                >\r\n                  {opt.label}\r\n                </DropdownItem>\r\n              ))}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  handleRenderPrivateBar() {\r\n    const {\r\n      intl: { formatMessage },\r\n      network,\r\n      onToggleWalletPopup,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Nav className='ml-auto' navbar>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggleHeader nav caret>\r\n              {_get(network, 'data.label')}\r\n            </DropdownToggleHeader>\r\n            <DropdownMenu right>\r\n              {LIST.NETWORKS.map((opt, optIdx) => (\r\n                <DropdownItem\r\n                  key={`network_${optIdx + 1}`}\r\n                  onClick={() => this.handleChangeNetwork(opt)}\r\n                >\r\n                  {opt.label}\r\n                </DropdownItem>\r\n              ))}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggleHeader nav caret>\r\n              {formatMessage(MSG.HEADER_NAVBAR_OPTION_MY_WALLET)}\r\n            </DropdownToggleHeader>\r\n            <DropdownMenu right>\r\n              {!getLedger() && (\r\n                <DropdownItem onClick={() => onToggleWalletPopup(true)}>\r\n                  {formatMessage(\r\n                    MSG.HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_SHOW_WALLET,\r\n                  )}\r\n                </DropdownItem>\r\n              )}\r\n              <DropdownItem>\r\n                {formatMessage(MSG.HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_HELP)}\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={this.handleLogout}>\r\n                {formatMessage(\r\n                  MSG.HEADER_NAVBAR_OPTION_MY_WALLET_OPTION_LOG_OUT,\r\n                )}\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      intl: { formatMessage },\r\n      isLoggedIn,\r\n      network,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <NavBarStyler light expand='lg'>\r\n          <NavbarBrand onClick={this.handleRedirectToHomepage}>\r\n            <CardImg\r\n              src={logo_tomochain}\r\n              alt={formatMessage(MSG.HEADER_NAVBAR_LOGO_ALT)}\r\n            />\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.handleToggleOptions} />\r\n          <Collapse isOpen={_get(network, 'isExpanded', false)} navbar>\r\n            {isLoggedIn && this.handleRenderPrivateBar()}\r\n            {this.handleRenderPublicBar()}\r\n          </Collapse>\r\n        </NavBarStyler>\r\n        <WalletPopup />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nNavigationBar.propTypes = {\r\n  /** Action to change locale */\r\n  changeLocale: PropTypes.func,\r\n  /** React Router's API object */\r\n  history: PropTypes.object,\r\n  /** React Intl's instance object */\r\n  intl: PropTypes.object,\r\n  /** Condition flag to check authentication state for proper option view */\r\n  isLoggedIn: PropTypes.bool,\r\n  /** Current chosen locale */\r\n  language: PropTypes.string,\r\n  /** Network dropdown data */\r\n  network: PropTypes.object,\r\n  /** Action to remove current wallet's data */\r\n  onReleaseWallet: PropTypes.func,\r\n  /** Action to update network options */\r\n  onSetNetwork: PropTypes.func,\r\n  /** Action to show/hide show-wallet popup */\r\n  onToggleWalletPopup: PropTypes.func,\r\n  /** Action to change current RPC Server */\r\n  switchRPCServer: PropTypes.func,\r\n};\r\n\r\nNavigationBar.defaultProps = {\r\n  changeLocaleL: () => {},\r\n  history: {},\r\n  intl: {},\r\n  isLoggedIn: false,\r\n  language: 'en',\r\n  network: {},\r\n  onReleaseWallet: () => {},\r\n  onSetNetwork: () => {},\r\n  onToggleWalletPopup: () => {},\r\n  switchRPCServer: () => {},\r\n};\r\n// ======================\r\n\r\n// ===== INJECTIONS =====\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    network: selectNetworkData,\r\n  });\r\nconst mapDispatchToProps = dispatch => ({\r\n  onReleaseWallet: () => dispatch(releaseWallet()),\r\n  onSetNetwork: network => dispatch(setNetwork(network)),\r\n  onToggleWalletPopup: bool => dispatch(toggleWalletPopup(bool)),\r\n});\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n);\r\n// ======================\r\n\r\nexport default compose(\r\n  withConnect,\r\n  withRouter,\r\n  withWeb3,\r\n  withIntl,\r\n)(NavigationBar);\r\n","import styled from 'styled-components';\r\nimport {\r\n  NavLink\r\n} from 'reactstrap';\r\n// Style Component//\r\n\r\nconst LinkFooter = styled(NavLink)`\r\n  color: #9eaacc !important;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport {\r\n  LinkFooter,\r\n};\r\n","// Modules\r\n/**\r\n *\r\n * TomoWallet - Welcome Page\r\n *\r\n * This is the default page when user visits TomoWallet Web.\r\n * It provides 2 options to access to wallet: \"Create New Wallet\" & \"Import Wallet\".\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Nav, NavItem } from 'reactstrap';\r\n// Custom Component\r\nimport { LinkFooter } from './style';\r\n// Utilities & Constants\r\nimport { withIntl } from '../IntlProvider';\r\nimport { MSG } from '../../constants';\r\n// ===================\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass Footer extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.FOOTER_BUTTONS = [\r\n      {\r\n        className: 'font-icon-facebook',\r\n        link: 'https://www.facebook.com/tomochainofficial',\r\n      },\r\n      {\r\n        className: 'font-icon-twitter',\r\n        link: 'https://twitter.com/TomoChainANN',\r\n      },\r\n      {\r\n        className: 'font-icon-telegram',\r\n        link: 'https://t.me/tomochain',\r\n      },\r\n      {\r\n        className: 'font-icon-github',\r\n        link: 'https://github.com/tomochain/',\r\n      },\r\n      {\r\n        className: 'font-icon-linkedin',\r\n        link: 'https://www.linkedin.com/company/tomochain',\r\n      },\r\n      {\r\n        className: 'font-icon-reddit',\r\n        link: 'https://www.reddit.com/r/Tomochain/',\r\n      },\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      intl: { formatMessage },\r\n    } = this.props;\r\n    return (\r\n      <Row className='align-items-center pt-3 pb-3'>\r\n        <Col xs={12} lg={7}>\r\n          <div className='mb-text-center'>\r\n            {formatMessage(MSG.FOOTER_VERSION_TEXT)}\r\n          </div>\r\n          <Row className='footer-menu'>\r\n            <Nav>\r\n              <NavItem>\r\n                <LinkFooter href='#'>\r\n                  {formatMessage(MSG.FOOTER_OPTION_HELP)}\r\n                </LinkFooter>\r\n              </NavItem>\r\n              <NavItem>\r\n                <LinkFooter href='#'>\r\n                  {formatMessage(MSG.FOOTER_OPTION_POLICY)}\r\n                </LinkFooter>\r\n              </NavItem>\r\n              <NavItem>\r\n                <LinkFooter href='#'>\r\n                  {formatMessage(MSG.FOOTER_OPTION_TERMS_OF_SERVICE)}\r\n                </LinkFooter>\r\n              </NavItem>\r\n              <NavItem>\r\n                <LinkFooter href='#'>\r\n                  {formatMessage(MSG.FOOTER_OPTION_API_DOCUMENTATION)}\r\n                </LinkFooter>\r\n              </NavItem>\r\n            </Nav>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={12} lg={5}>\r\n          <Nav className='footer-buttons'>\r\n            {this.FOOTER_BUTTONS.map((item, itemIdx) => (\r\n              <NavItem key={`footer_button_${itemIdx + 1}`}>\r\n                <LinkFooter href='{item.link}' target='_blank'>\r\n                  <i className={item.className} />\r\n                </LinkFooter>\r\n              </NavItem>\r\n            ))}\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== PROP TYPES =====\r\nFooter.propTypes = {\r\n  /** React Intl's instance object */\r\n  intl: PropTypes.object,\r\n};\r\n\r\nFooter.defaultProps = {\r\n  intl: {},\r\n};\r\n// ======================\r\n\r\nexport default withIntl(Footer);\r\n","/**\r\n *\r\n * TomoWallet - Loadable Containers\r\n *\r\n * This file contains a set of containers which is configured with loadable-components,\r\n * in order to splitting chunk files in production.\r\n */\r\n// ===== IMPORTS =====\r\n// Modules\r\nimport loadable from 'loadable-components';\r\n// ===================\r\n\r\n// ===== LOADABLE CONTAINERS =====\r\nexport const WelcomePage = loadable(() => import('../../Welcome'));\r\nexport const CreateWalletPage = loadable(() => import('../../WalletCreation'));\r\nexport const ImportWallet = loadable(() => import('../../ImportWallet'));\r\nexport const MyWallet = loadable(() => import('../../MyWallet'));\r\n// ===============================\r\n","import React, { PureComponent } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { ROUTE } from '../../../constants';\r\n\r\nexport default class extends PureComponent {\r\n  render() {\r\n    const { isLoggedIn, ...remains } = this.props;\r\n\r\n    return !isLoggedIn ? (\r\n      <Redirect strict to={ROUTE.LOGIN} />\r\n    ) : (\r\n      <Route {...remains} />\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst AppStyler = styled(Container)`\r\n\r\n`;\r\n\r\nexport default AppStyler;\r\n","// Modules\r\nimport React, { PureComponent } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport _isEmpty from 'lodash.isempty';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\n// Custom Components\r\nimport LoadingComponent from '../../components/Loading';\r\nimport NavigationBar from '../../components/NavigationBar';\r\nimport Footer from '../../components/Footer';\r\nimport {\r\n  WelcomePage,\r\n  CreateWalletPage,\r\n  ImportWallet,\r\n  MyWallet,\r\n} from './components/LoadableComponents';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport AppStyler from './style';\r\n// Utilities & Constants\r\nimport { withWeb3 } from '../../components/Web3';\r\nimport { selectWallet } from '../Global/selectors';\r\nimport { storeWallet } from '../Global/actions';\r\nimport { ROUTE } from '../../constants';\r\nimport './app.scss';\r\nimport { getWeb3Info, getLedger } from '../../utils';\r\nimport { initiateWallet } from '../../utils/blockchain';\r\n\r\n// ===== MAIN COMPONENT =====\r\nclass App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleCheckLoggedIn = this.handleCheckLoggedIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onStoreWallet, updateWeb3 } = this.props;\r\n    const walletParams = getWeb3Info();\r\n    const ledger = getLedger();\r\n\r\n    if (walletParams) {\r\n      const { recoveryPhrase, rpcServer } = walletParams;\r\n      initiateWallet(recoveryPhrase, rpcServer).then(({ web3, walletInfo }) => {\r\n        updateWeb3(web3);\r\n        onStoreWallet(walletInfo);\r\n      });\r\n    } else if (ledger) {\r\n      onStoreWallet(ledger);\r\n    }\r\n  }\r\n\r\n  handleCheckLoggedIn() {\r\n    const { wallet } = this.props;\r\n    return !_isEmpty(wallet) || !!getWeb3Info() || !!getLedger();\r\n  }\r\n\r\n  render() {\r\n    const isLoggedIn = this.handleCheckLoggedIn();\r\n\r\n    return (\r\n      <Router>\r\n        <AppStyler>\r\n          <LoadingComponent />\r\n          <NavigationBar isLoggedIn={isLoggedIn} />\r\n          <div className='maincontent pt-3 pb-3'>\r\n            <Route\r\n              path={ROUTE.LOGIN}\r\n              render={() =>\r\n                isLoggedIn ? (\r\n                  <Redirect strict to={ROUTE.MY_WALLET} />\r\n                ) : (\r\n                  <WelcomePage />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path={ROUTE.CREATE_WALLET}\r\n              render={() =>\r\n                isLoggedIn ? (\r\n                  <Redirect strict to={ROUTE.MY_WALLET} />\r\n                ) : (\r\n                  <CreateWalletPage />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path={ROUTE.IMPORT_WALLET}\r\n              render={() =>\r\n                isLoggedIn ? (\r\n                  <Redirect strict to={ROUTE.MY_WALLET} />\r\n                ) : (\r\n                  <ImportWallet />\r\n                )\r\n              }\r\n            />\r\n            <PrivateRoute\r\n              isLoggedIn={isLoggedIn}\r\n              path={ROUTE.MY_WALLET}\r\n              component={MyWallet}\r\n            />\r\n            <Route\r\n              strict\r\n              path={ROUTE.DEFAULT}\r\n              render={() => <Redirect to={ROUTE.LOGIN} />}\r\n            />\r\n          </div>\r\n          <Footer className='mt-5' isLoggedIn={isLoggedIn} />\r\n        </AppStyler>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n// ==========================\r\n\r\n// ===== INJECTIONS =====\r\nconst mapStateToProps = () =>\r\n  createStructuredSelector({\r\n    wallet: selectWallet,\r\n  });\r\nconst mapDispatchToProps = dispatch => ({\r\n  onStoreWallet: wallet => dispatch(storeWallet(wallet)),\r\n});\r\nconst withConnect = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n);\r\n// ======================\r\n\r\nexport default compose(\r\n  withWeb3,\r\n  withConnect,\r\n)(App);\r\n","/**\r\n *\r\n * TomoWallet - Root Component\r\n *\r\n * This component is where we provide our web app as DOM elements into \"root\" section in index.html.\r\n * We also setups Redux store & pre-initiation configurations here\r\n */\r\n// ===== IMPORTS =====\r\n// Needed for redux-saga es6 generator support\r\nimport '@babel/polyfill';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n// Custom Component\r\nimport App from './containers/App';\r\n// Utilities & Constants\r\nimport { Web3Provider } from './components/Web3';\r\nimport { CustomIntlProvider } from './components/IntlProvider';\r\nimport configureStore from './configurations/configureStore';\r\nimport { history } from './utils';\r\nimport { addLocaleData } from 'react-intl';\r\nimport locale_en from 'react-intl/locale-data/en';\r\nimport locale_fr from 'react-intl/locale-data/fr';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { far } from '@fortawesome/free-regular-svg-icons';\r\n// ===================\r\n\r\n// ===== PRE-INITIATION CONFIGURATION =====\r\nlibrary.add(fas, far);\r\naddLocaleData([...locale_en, ...locale_fr]);\r\n\r\n// Configure Redux store\r\nconst store = configureStore(history);\r\nconst persistor = persistStore(store);\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n    <Web3Provider>\r\n      <CustomIntlProvider>\r\n        <App />\r\n      </CustomIntlProvider>\r\n    </Web3Provider>\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","/**\r\n *\r\n * TomoWallet - Redux store configuration\r\n *\r\n */\r\n// ===== IMPORTS ====\r\n// Modules\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createSagaMiddleWare from 'redux-saga';\r\n// Utilities\r\nimport createReducer from './rootReducer';\r\n// ==================\r\n\r\n// ===== CONFIGURATION =====\r\nexport default history => {\r\n  const sagaMiddleware = createSagaMiddleWare({});\r\n  const middlewares = [\r\n    thunkMiddleware,\r\n    logger,\r\n    sagaMiddleware,\r\n    routerMiddleware(history),\r\n  ];\r\n  const enhancers = [applyMiddleware(...middlewares)];\r\n  const store = createStore(createReducer(), undefined, compose(...enhancers));\r\n\r\n  store.runSaga = sagaMiddleware.run;\r\n  store.injectedReducers = {};\r\n  store.injectedSagas = {};\r\n\r\n  return store;\r\n};\r\n// =========================\r\n"],"sourceRoot":""}